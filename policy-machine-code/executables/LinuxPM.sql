-- --------------------------------------------------------
-- Host:                         127.0.0.1
-- Server version:               5.7.12-log - MySQL Community Server (GPL)
-- Server OS:                    Win64
-- HeidiSQL Version:             9.4.0.5125
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!50503 SET NAMES utf8mb4 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;


-- Dumping database structure for policydb
DROP DATABASE IF EXISTS `policydb`;
CREATE DATABASE IF NOT EXISTS `policydb` /*!40100 DEFAULT CHARACTER SET utf8 */;
USE `policydb`;

-- Dumping structure for function policydb.add_script
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `add_script`(script_name varchar(50)) RETURNS int(11)
BEGIN
                declare script_id_var int;
                insert into ob_script(script_name, count) values (script_name, 0);
                select MAX(script_id) into script_id_var from ob_script;
RETURN script_id_var;
END//
DELIMITER ;

-- Dumping structure for function policydb.allowed_operations
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `allowed_operations`(ua_id_in int(11), oa_id_in int(11)) RETURNS varchar(500) CHARSET utf8
BEGIN

DECLARE policy_id_in int;
DECLARE opset_id int;
DECLARE allowed_ops varchar(500);
DECLARE done boolean DEFAULT FALSE;
DECLARE finished boolean DEFAULT FALSE;
DECLARE names VARCHAR(8000);
DECLARE opset_name varchar(500);
DECLARE policies CURSOR FOR select a.start_node_id as policy_id from assignment a where get_node_type(a.start_node_id) = 2 and end_node_id = oa_id_in;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;

  OPEN policies;
  SET allowed_ops='';
  SET finished = FALSE;
  delete from temp_operations;
  ploicy_loop: LOOP
    FETCH policies INTO policy_id_in;
    IF done THEN
      LEAVE ploicy_loop;
    END IF;
    BEGIN
      DECLARE opsets CURSOR FOR SELECT a.opset_id from association as a where is_member(ua_id_in, a.ua_id) and is_member(oa_id_in, a.oa_id) and is_member(ua_id_in, policy_id_in);
      DECLARE CONTINUE HANDLER FOR NOT FOUND SET finished  = TRUE;
      open opsets;
        opset_loop: loop
        FETCH opsets INTO opset_id;
          IF finished THEN
             CLOSE opsets;
             LEAVE opset_loop;
          END IF;
          insert into temp_operations select get_operations(opset_id);         
        end loop opset_loop;
    END;
  END LOOP ploicy_loop;
  CLOSE policies;
  
  select group_concat(distinct trim(substring_index(substring_index(opset, ',', n.n), ',', -1)) separator ',' ) INTO allowed_ops 
  from temp_operations t 
  cross join (select 1 as n union all select 2 ) n;
  delete from temp_operations;
  
RETURN allowed_ops;
END//
DELIMITER ;

-- Dumping structure for function policydb.allowed_operations_for_user
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `allowed_operations_for_user`(user VARCHAR(50), object VARCHAR(500)) RETURNS varchar(500) CHARSET utf8
BEGIN
	DECLARE user_id int;
  DECLARE object_id int;
  DECLARE allowed_ops varchar(500);
  
  SELECT node_id INTO user_id FROM node where node.name = user and node_type_id = 4;
  SELECT node_id INTO object_id FROM node where node.name = object and node_type_id = 6;

  RETURN allowed_operations(user_id,object_id) ;
END//
DELIMITER ;

-- Dumping structure for table policydb.application
CREATE TABLE IF NOT EXISTS `application` (
  `application_id` int(11) NOT NULL AUTO_INCREMENT,
  `host_id` int(11) NOT NULL,
  `application_name` varchar(50) NOT NULL,
  `application_main_class` varchar(200) NOT NULL,
  `application_path` varchar(2000) NOT NULL,
  `application_prefix` varchar(50) NOT NULL,
  PRIMARY KEY (`application_id`),
  KEY `fk_application_host_id_idx` (`host_id`),
  KEY `idx_application_application_name` (`application_name`),
  CONSTRAINT `fk_application_host_id` FOREIGN KEY (`host_id`) REFERENCES `host` (`host_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='application';

-- Dumping data for table policydb.application: ~14 rows (approximately)
/*!40000 ALTER TABLE `application` DISABLE KEYS */;
INSERT INTO `application` (`application_id`, `host_id`, `application_name`, `application_main_class`, `application_path`, `application_prefix`) VALUES
	(101, 100, 'Admin', 'gov.nist.csd.pm.admin.PmAdmin', 'C:\\PM\\dist\\pm-admin-1.6.jar;C:\\PM\\dist\\pm-commons-1.6.jar;C:\\PM\\lib\\*', 'Admin >> '),
	(102, 100, 'Rich Text Editor', 'gov.nist.csd.pm.application.rtf.RTFEditor', 'C:\\PM\\dist\\pm-app-rtf-1.6.jar;C:\\PM\\dist\\pm-commons-1.6.jar;C:\\PM\\lib\\*', 'RTF Editor >> '),
	(103, 100, 'Workflow Editor', 'gov.nist.csd.pm.application.workflow.WorkflowPDF', 'C:\\PM\\dist\\pm-app-wkf-pdf-1.6.jar;C:\\PM\\dist\\pm-app-pdf-view-1.6.jar;C:\\PM\\dist\\pm-commons-1.6.jar;C:\\PM\\lib\\*', 'Workflow Editor >>'),
	(104, 100, 'PDF Viewer', 'gov.nist.csd.pm.application.pdfviewer.PDFViewer', 'C:\\PM\\dist\\pm-app-pdf-view-1.6.jar;C:\\PM\\dist\\pm-commons-1.6.jar;C:\\PM\\lib\\*', 'PDF Viewer >> '),
	(105, 100, 'e-grant', 'gov.nist.csd.pm.application.grantor.Grantor', 'C:\\PM\\dist\\pm-app-grant-1.6.jar;C:\\PM\\dist\\pm-commons-1.6.jar;C:\\PM\\lib\\*', 'e-grant >> '),
	(106, 100, 'Exporter', 'gov.nist.csd.pm.exporter.Exporter', 'C:\\PM\\dist\\pm-exporter-1.6.jar;C:\\PM\\dist\\pm-commons-1.6.jar;C:\\PM\\lib\\*', 'Exporter >> '),
	(107, 100, 'Open Office', 'gov.nist.csd.pm.application.openoffice.OfficeLauncher', 'C:\\PM\\dist\\pm-app-openoffice-1.6.jar;C:\\PM\\dist\\pm-commons-1.6.jar;C:\\PM\\lib\\*;C:\\Program Files (x86)\\OpenOffice 4\\program\\classes\\unoil.jar;C:\\Program Files (x86)\\OpenOffice 4\\program\\classes\\juh.jar;C:\\Program Files (x86)\\OpenOffice 4\\program\\classes\\jurt.jar;C:\\Program Files (x86)\\OpenOffice 4\\program\\classes\\ridl.jar;C:\\Program Files (x86)\\OpenOffice 4\\program', 'Open Office >>'),
	(108, 100, 'Microsoft Office Launcher', 'gov.nist.csd.pm.application.office.MSOfficeLauncher', 'C:\\PM\\dist\\pm-app-msoffice-1.6.jar', 'MS Office >>'),
	(109, 100, 'Med-Rec', 'gov.nist.csd.pm.application.medrec.MREditor', 'C:\\PM\\dist\\pm-app-medrec-1.6.jar;C:\\PM\\dist\\pm-commons-1.6.jar;C:\\PM\\lib\\*', 'Med-Rec >>'),
	(110, 100, 'Acct-Rec', 'gov.nist.csd.pm.application.acctrec.AcctEditor', 'C:\\PM\\dist\\pm-app-acctrec-1.6.jar;C:\\PM\\dist\\pm-commons-1.6.jar;C:\\PM\\lib\\*', 'Acct-Rec >>'),
	(111, 100, 'Workflow Old', 'gov.nist.csd.pm.application.oldworkflow.Wkflow', 'C:\\PM\\dist\\pm-app-wkf-old-1.6.jar;C:\\PM\\dist\\pm-commons-1.6.jar;C:\\PM\\lib\\*', 'Workflow Old >>'),
	(112, 100, 'Schema Builder', 'gov.nist.csd.pm.application.schema.builder.SchemaBuilder3', 'C:\\PM\\dist\\pm-app-schemabuilder-1.6.jar;C:\\PM\\dist\\pm-commons-1.6.jar;C:\\PM\\lib\\*', 'SB>>'),
	(113, 100, 'Employee Record', 'gov.nist.csd.pm.application.appeditor.EmployeeRecord', 'C:\\PM\\dist\\pm-app-emprec-1.6.jar;C:\\PM\\dist\\pm-commons-1.6.jar;C:\\PM\\lib\\*', 'ER>>'),
	(114, 100, 'Table Editor', 'gov.nist.csd.pm.application.schema.tableeditor.TableEditor', 'C:\\PM\\dist\\pm-app-tableeditor-1.6.jar;C:\\PM\\dist\\pm-commons-1.6.jar;C:\\PM\\lib\\*', 'TE>>');
/*!40000 ALTER TABLE `application` ENABLE KEYS */;

-- Dumping structure for table policydb.assignment
CREATE TABLE IF NOT EXISTS `assignment` (
  `assignment_id` int(11) NOT NULL AUTO_INCREMENT,
  `start_node_id` int(11) DEFAULT NULL,
  `end_node_id` int(11) DEFAULT NULL,
  `depth` int(11) DEFAULT NULL,
  `assignment_path_id` int(2) DEFAULT NULL,
  PRIMARY KEY (`assignment_id`),
  KEY `end_node_id_idx` (`end_node_id`),
  KEY `fk_start_node_id_idx` (`start_node_id`),
  KEY `idx_all_columns` (`start_node_id`,`depth`,`assignment_path_id`,`end_node_id`),
  CONSTRAINT `fk_end_node_id` FOREIGN KEY (`end_node_id`) REFERENCES `node` (`node_id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_start_node_id` FOREIGN KEY (`start_node_id`) REFERENCES `node` (`node_id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='This table stores assignment relations';

-- Dumping data for table policydb.assignment: ~1,900 rows (approximately)
/*!40000 ALTER TABLE `assignment` DISABLE KEYS */;
INSERT INTO `assignment` (`assignment_id`, `start_node_id`, `end_node_id`, `depth`, `assignment_path_id`) VALUES
	(13, 1, 1, 0, NULL),
	(14, 1, 2, 1, 1),
	(102, 1, 101, 1, 101),
	(104, 1, 102, 1, 102),
	(106, 1, 103, 1, 103),
	(108, 1, 104, 1, 104),
	(1472, 1, 365, 1, 311),
	(2398, 1, 474, 1, 442),
	(4, 1, 3, 2, 2),
	(11, 1, 5, 2, 4),
	(111, 1, 105, 2, 105),
	(115, 1, 106, 2, 106),
	(119, 1, 107, 2, 107),
	(123, 1, 108, 2, 108),
	(127, 1, 109, 2, 109),
	(131, 1, 110, 2, 110),
	(135, 1, 111, 2, 111),
	(139, 1, 112, 2, 112),
	(143, 1, 113, 2, 113),
	(147, 1, 114, 2, 114),
	(151, 1, 115, 2, 115),
	(155, 1, 116, 2, 116),
	(159, 1, 117, 2, 117),
	(163, 1, 118, 2, 118),
	(167, 1, 119, 2, 119),
	(171, 1, 120, 2, 120),
	(175, 1, 121, 2, 121),
	(179, 1, 122, 2, 122),
	(183, 1, 123, 2, 123),
	(187, 1, 124, 2, 124),
	(191, 1, 125, 2, 125),
	(195, 1, 126, 2, 126),
	(199, 1, 127, 2, 127),
	(203, 1, 128, 2, 128),
	(206, 1, 108, 2, 129),
	(209, 1, 107, 2, 130),
	(212, 1, 109, 2, 131),
	(215, 1, 110, 2, 132),
	(219, 1, 129, 2, 133),
	(223, 1, 130, 2, 134),
	(227, 1, 131, 2, 135),
	(231, 1, 132, 2, 136),
	(235, 1, 133, 2, 137),
	(239, 1, 134, 2, 138),
	(243, 1, 135, 2, 139),
	(247, 1, 136, 2, 140),
	(251, 1, 137, 2, 141),
	(255, 1, 138, 2, 142),
	(259, 1, 139, 2, 143),
	(263, 1, 140, 2, 144),
	(267, 1, 141, 2, 145),
	(271, 1, 142, 2, 146),
	(275, 1, 143, 2, 147),
	(279, 1, 144, 2, 148),
	(283, 1, 145, 2, 149),
	(287, 1, 146, 2, 150),
	(291, 1, 147, 2, 151),
	(1475, 1, 366, 2, 312),
	(1527, 1, 375, 2, 321),
	(1531, 1, 376, 2, 322),
	(1538, 1, 377, 2, 324),
	(1542, 1, 378, 2, 325),
	(1554, 1, 381, 2, 328),
	(2217, 1, 446, 2, 414),
	(2221, 1, 447, 2, 415),
	(2225, 1, 448, 2, 416),
	(2229, 1, 449, 2, 417),
	(2233, 1, 450, 2, 418),
	(2237, 1, 451, 2, 419),
	(2241, 1, 452, 2, 420),
	(2245, 1, 453, 2, 421),
	(2401, 1, 475, 2, 443),
	(2429, 1, 480, 2, 448),
	(8, 1, 4, 3, 3),
	(296, 1, 148, 3, 152),
	(311, 1, 153, 3, 154),
	(315, 1, 154, 3, 155),
	(321, 1, 156, 3, 156),
	(336, 1, 164, 3, 157),
	(349, 1, 170, 3, 158),
	(363, 1, 156, 3, 159),
	(381, 1, 188, 3, 160),
	(385, 1, 189, 3, 161),
	(389, 1, 190, 3, 162),
	(393, 1, 191, 3, 163),
	(397, 1, 192, 3, 164),
	(401, 1, 193, 3, 165),
	(413, 1, 201, 3, 166),
	(420, 1, 202, 3, 167),
	(424, 1, 203, 3, 168),
	(428, 1, 204, 3, 169),
	(432, 1, 205, 3, 170),
	(437, 1, 207, 3, 171),
	(441, 1, 208, 3, 172),
	(457, 1, 212, 3, 174),
	(461, 1, 213, 3, 175),
	(466, 1, 215, 3, 176),
	(469, 1, 213, 3, 177),
	(473, 1, 213, 3, 178),
	(477, 1, 217, 3, 179),
	(481, 1, 218, 3, 180),
	(490, 1, 224, 3, 181),
	(494, 1, 225, 3, 182),
	(497, 1, 218, 3, 183),
	(500, 1, 215, 3, 184),
	(506, 1, 226, 3, 185),
	(509, 1, 164, 3, 186),
	(513, 1, 149, 3, 187),
	(517, 1, 164, 3, 188),
	(521, 1, 170, 3, 189),
	(525, 1, 156, 3, 190),
	(530, 1, 232, 3, 191),
	(545, 1, 242, 3, 192),
	(549, 1, 243, 3, 193),
	(553, 1, 244, 3, 194),
	(557, 1, 245, 3, 195),
	(561, 1, 246, 3, 196),
	(565, 1, 247, 3, 197),
	(569, 1, 248, 3, 198),
	(573, 1, 249, 3, 199),
	(577, 1, 250, 3, 200),
	(581, 1, 251, 3, 201),
	(585, 1, 252, 3, 202),
	(589, 1, 253, 3, 203),
	(597, 1, 254, 3, 204),
	(602, 1, 255, 3, 205),
	(606, 1, 256, 3, 206),
	(610, 1, 257, 3, 207),
	(614, 1, 258, 3, 208),
	(618, 1, 259, 3, 209),
	(622, 1, 260, 3, 210),
	(626, 1, 261, 3, 211),
	(630, 1, 262, 3, 212),
	(635, 1, 226, 3, 213),
	(638, 1, 149, 3, 214),
	(641, 1, 164, 3, 215),
	(647, 1, 164, 3, 216),
	(1480, 1, 367, 3, 313),
	(1516, 1, 372, 3, 318),
	(1520, 1, 373, 3, 319),
	(1524, 1, 374, 3, 320),
	(1535, 1, 156, 3, 323),
	(1547, 1, 379, 3, 326),
	(1551, 1, 380, 3, 327),
	(1572, 1, 170, 3, 331),
	(1575, 1, 226, 3, 332),
	(1578, 1, 156, 3, 333),
	(2255, 1, 454, 3, 422),
	(2259, 1, 455, 3, 423),
	(2263, 1, 456, 3, 424),
	(2267, 1, 457, 3, 425),
	(2271, 1, 458, 3, 426),
	(2275, 1, 459, 3, 427),
	(2279, 1, 460, 3, 428),
	(2283, 1, 461, 3, 429),
	(2287, 1, 462, 3, 430),
	(2410, 1, 477, 3, 445),
	(2434, 1, 481, 3, 449),
	(2438, 1, 482, 3, 450),
	(2446, 1, 485, 3, 451),
	(301, 1, 149, 4, 153),
	(446, 1, 209, 4, 173),
	(653, 1, 256, 4, 217),
	(660, 1, 259, 4, 218),
	(667, 1, 261, 4, 219),
	(674, 1, 257, 4, 220),
	(681, 1, 260, 4, 221),
	(689, 1, 170, 4, 222),
	(696, 1, 156, 4, 223),
	(711, 1, 226, 4, 224),
	(726, 1, 149, 4, 225),
	(749, 1, 164, 4, 226),
	(773, 1, 303, 4, 227),
	(781, 1, 304, 4, 228),
	(789, 1, 305, 4, 229),
	(797, 1, 306, 4, 230),
	(805, 1, 307, 4, 231),
	(817, 1, 308, 4, 232),
	(826, 1, 309, 4, 233),
	(834, 1, 310, 4, 234),
	(842, 1, 311, 4, 235),
	(850, 1, 312, 4, 236),
	(857, 1, 261, 4, 237),
	(864, 1, 262, 4, 238),
	(872, 1, 313, 4, 239),
	(880, 1, 314, 4, 240),
	(887, 1, 257, 4, 241),
	(894, 1, 256, 4, 242),
	(901, 1, 255, 4, 243),
	(908, 1, 260, 4, 244),
	(915, 1, 259, 4, 245),
	(922, 1, 258, 4, 246),
	(930, 1, 315, 4, 247),
	(938, 1, 316, 4, 248),
	(946, 1, 317, 4, 249),
	(954, 1, 318, 4, 250),
	(962, 1, 164, 4, 251),
	(969, 1, 149, 4, 252),
	(983, 1, 307, 4, 253),
	(992, 1, 306, 4, 254),
	(1001, 1, 305, 4, 255),
	(1010, 1, 304, 4, 256),
	(1020, 1, 325, 4, 257),
	(1028, 1, 326, 4, 258),
	(1036, 1, 327, 4, 259),
	(1045, 1, 328, 4, 260),
	(1053, 1, 329, 4, 261),
	(1064, 1, 330, 4, 262),
	(1072, 1, 331, 4, 263),
	(1083, 1, 332, 4, 264),
	(1091, 1, 333, 4, 265),
	(1099, 1, 334, 4, 266),
	(1109, 1, 335, 4, 267),
	(1117, 1, 336, 4, 268),
	(1125, 1, 337, 4, 269),
	(1136, 1, 338, 4, 270),
	(1144, 1, 339, 4, 271),
	(1155, 1, 340, 4, 272),
	(1163, 1, 341, 4, 273),
	(1171, 1, 342, 4, 274),
	(1180, 1, 343, 4, 275),
	(1188, 1, 344, 4, 276),
	(1196, 1, 345, 4, 277),
	(1485, 1, 368, 4, 314),
	(1493, 1, 369, 4, 315),
	(1501, 1, 370, 4, 316),
	(1509, 1, 371, 4, 317),
	(1559, 1, 149, 4, 329),
	(1566, 1, 164, 4, 330),
	(1607, 1, 394, 4, 334),
	(1707, 1, 403, 4, 347),
	(1807, 1, 412, 4, 360),
	(1907, 1, 421, 4, 373),
	(2007, 1, 430, 4, 386),
	(2107, 1, 439, 4, 399),
	(2115, 1, 440, 4, 400),
	(2123, 1, 441, 4, 401),
	(2131, 1, 442, 4, 402),
	(2139, 1, 443, 4, 403),
	(2147, 1, 444, 4, 404),
	(2155, 1, 445, 4, 405),
	(2169, 1, 440, 4, 407),
	(2294, 1, 463, 4, 431),
	(2302, 1, 464, 4, 432),
	(2310, 1, 465, 4, 433),
	(2423, 1, 479, 4, 447),
	(2451, 1, 486, 4, 452),
	(1209, 1, 346, 5, 278),
	(1218, 1, 347, 5, 279),
	(1227, 1, 348, 5, 280),
	(1236, 1, 349, 5, 281),
	(1244, 1, 350, 5, 282),
	(1252, 1, 351, 5, 283),
	(1259, 1, 345, 5, 284),
	(1266, 1, 342, 5, 285),
	(1273, 1, 337, 5, 286),
	(1280, 1, 339, 5, 287),
	(1287, 1, 334, 5, 288),
	(1294, 1, 331, 5, 289),
	(1301, 1, 329, 5, 290),
	(1309, 1, 352, 5, 291),
	(1317, 1, 353, 5, 292),
	(1325, 1, 354, 5, 293),
	(1332, 1, 344, 5, 294),
	(1339, 1, 341, 5, 295),
	(1346, 1, 336, 5, 296),
	(1353, 1, 338, 5, 297),
	(1360, 1, 333, 5, 298),
	(1367, 1, 330, 5, 299),
	(1374, 1, 328, 5, 300),
	(1382, 1, 355, 5, 301),
	(1390, 1, 356, 5, 302),
	(1398, 1, 357, 5, 303),
	(1406, 1, 358, 5, 304),
	(1616, 1, 395, 5, 335),
	(1624, 1, 396, 5, 336),
	(1632, 1, 397, 5, 337),
	(1640, 1, 398, 5, 338),
	(1679, 1, 399, 5, 343),
	(1686, 1, 400, 5, 344),
	(1693, 1, 401, 5, 345),
	(1700, 1, 402, 5, 346),
	(1716, 1, 404, 5, 348),
	(1724, 1, 405, 5, 349),
	(1732, 1, 406, 5, 350),
	(1740, 1, 407, 5, 351),
	(1779, 1, 408, 5, 356),
	(1786, 1, 409, 5, 357),
	(1793, 1, 410, 5, 358),
	(1800, 1, 411, 5, 359),
	(1816, 1, 413, 5, 361),
	(1824, 1, 414, 5, 362),
	(1832, 1, 415, 5, 363),
	(1840, 1, 416, 5, 364),
	(1879, 1, 417, 5, 369),
	(1886, 1, 418, 5, 370),
	(1893, 1, 419, 5, 371),
	(1900, 1, 420, 5, 372),
	(1916, 1, 422, 5, 374),
	(1924, 1, 423, 5, 375),
	(1932, 1, 424, 5, 376),
	(1940, 1, 425, 5, 377),
	(1979, 1, 429, 5, 382),
	(1986, 1, 426, 5, 383),
	(1993, 1, 428, 5, 384),
	(2000, 1, 427, 5, 385),
	(2016, 1, 431, 5, 387),
	(2024, 1, 432, 5, 388),
	(2032, 1, 433, 5, 389),
	(2040, 1, 434, 5, 390),
	(2079, 1, 438, 5, 395),
	(2086, 1, 435, 5, 396),
	(2093, 1, 437, 5, 397),
	(2100, 1, 436, 5, 398),
	(2327, 1, 466, 5, 434),
	(2335, 1, 467, 5, 435),
	(2343, 1, 468, 5, 436),
	(2351, 1, 469, 5, 437),
	(2359, 1, 470, 5, 438),
	(2367, 1, 471, 5, 439),
	(2375, 1, 472, 5, 440),
	(2383, 1, 473, 5, 441),
	(1421, 1, 359, 6, 305),
	(1429, 1, 360, 6, 306),
	(1437, 1, 361, 6, 307),
	(1452, 1, 362, 6, 308),
	(1460, 1, 363, 6, 309),
	(1468, 1, 364, 6, 310),
	(1649, 1, 399, 6, 339),
	(1657, 1, 400, 6, 340),
	(1665, 1, 401, 6, 341),
	(1673, 1, 402, 6, 342),
	(1749, 1, 408, 6, 352),
	(1757, 1, 409, 6, 353),
	(1765, 1, 410, 6, 354),
	(1773, 1, 411, 6, 355),
	(1849, 1, 417, 6, 365),
	(1857, 1, 418, 6, 366),
	(1865, 1, 419, 6, 367),
	(1873, 1, 420, 6, 368),
	(1949, 1, 426, 6, 378),
	(1957, 1, 427, 6, 379),
	(1965, 1, 428, 6, 380),
	(1973, 1, 429, 6, 381),
	(2049, 1, 435, 6, 391),
	(2057, 1, 436, 6, 392),
	(2065, 1, 437, 6, 393),
	(2073, 1, 438, 6, 394),
	(2164, 1, 440, 6, 406),
	(2178, 1, 441, 6, 408),
	(2185, 1, 442, 6, 409),
	(2192, 1, 439, 6, 410),
	(2199, 1, 443, 6, 411),
	(2206, 1, 444, 6, 412),
	(2213, 1, 445, 6, 413),
	(1, 2, 2, 0, NULL),
	(3, 2, 3, 1, 2),
	(10, 2, 5, 1, 4),
	(7, 2, 4, 2, 3),
	(2, 3, 3, 0, NULL),
	(6, 3, 4, 1, 3),
	(5, 4, 4, 0, NULL),
	(9, 5, 5, 0, NULL),
	(15, 5, 7, 1, NULL),
	(12, 7, 7, 0, NULL),
	(16, 7, 3, 1, NULL),
	(101, 101, 101, 0, 0),
	(110, 101, 105, 1, 105),
	(114, 101, 106, 1, 106),
	(2216, 101, 446, 1, 414),
	(2220, 101, 447, 1, 415),
	(295, 101, 148, 2, 152),
	(310, 101, 153, 2, 154),
	(314, 101, 154, 2, 155),
	(646, 101, 164, 2, 216),
	(300, 101, 149, 3, 153),
	(652, 101, 256, 3, 217),
	(659, 101, 259, 3, 218),
	(666, 101, 261, 3, 219),
	(673, 101, 257, 3, 220),
	(680, 101, 260, 3, 221),
	(2168, 101, 440, 3, 407),
	(103, 102, 102, 0, 0),
	(118, 102, 107, 1, 107),
	(122, 102, 108, 1, 108),
	(126, 102, 109, 1, 109),
	(130, 102, 110, 1, 110),
	(134, 102, 111, 1, 111),
	(138, 102, 112, 1, 112),
	(142, 102, 113, 1, 113),
	(146, 102, 114, 1, 114),
	(150, 102, 115, 1, 115),
	(154, 102, 116, 1, 116),
	(158, 102, 117, 1, 117),
	(162, 102, 118, 1, 118),
	(166, 102, 119, 1, 119),
	(170, 102, 120, 1, 120),
	(174, 102, 121, 1, 121),
	(178, 102, 122, 1, 122),
	(182, 102, 123, 1, 123),
	(186, 102, 124, 1, 124),
	(190, 102, 125, 1, 125),
	(194, 102, 126, 1, 126),
	(198, 102, 127, 1, 127),
	(202, 102, 128, 1, 128),
	(2224, 102, 448, 1, 416),
	(2228, 102, 449, 1, 417),
	(2232, 102, 450, 1, 418),
	(2236, 102, 451, 1, 419),
	(2240, 102, 452, 1, 420),
	(320, 102, 156, 2, 156),
	(335, 102, 164, 2, 157),
	(348, 102, 170, 2, 158),
	(362, 102, 156, 2, 159),
	(380, 102, 188, 2, 160),
	(384, 102, 189, 2, 161),
	(388, 102, 190, 2, 162),
	(392, 102, 191, 2, 163),
	(396, 102, 192, 2, 164),
	(400, 102, 193, 2, 165),
	(412, 102, 201, 2, 166),
	(419, 102, 202, 2, 167),
	(423, 102, 203, 2, 168),
	(427, 102, 204, 2, 169),
	(431, 102, 205, 2, 170),
	(436, 102, 207, 2, 171),
	(440, 102, 208, 2, 172),
	(456, 102, 212, 2, 174),
	(460, 102, 213, 2, 175),
	(465, 102, 215, 2, 176),
	(468, 102, 213, 2, 177),
	(472, 102, 213, 2, 178),
	(476, 102, 217, 2, 179),
	(480, 102, 218, 2, 180),
	(489, 102, 224, 2, 181),
	(493, 102, 225, 2, 182),
	(496, 102, 218, 2, 183),
	(499, 102, 215, 2, 184),
	(2254, 102, 454, 2, 422),
	(445, 102, 209, 3, 173),
	(688, 102, 170, 3, 222),
	(695, 102, 156, 3, 223),
	(710, 102, 226, 3, 224),
	(725, 102, 149, 3, 225),
	(748, 102, 164, 3, 226),
	(772, 102, 303, 3, 227),
	(780, 102, 304, 3, 228),
	(788, 102, 305, 3, 229),
	(796, 102, 306, 3, 230),
	(804, 102, 307, 3, 231),
	(816, 102, 308, 3, 232),
	(825, 102, 309, 3, 233),
	(833, 102, 310, 3, 234),
	(841, 102, 311, 3, 235),
	(849, 102, 312, 3, 236),
	(856, 102, 261, 3, 237),
	(863, 102, 262, 3, 238),
	(871, 102, 313, 3, 239),
	(879, 102, 314, 3, 240),
	(886, 102, 257, 3, 241),
	(893, 102, 256, 3, 242),
	(900, 102, 255, 3, 243),
	(907, 102, 260, 3, 244),
	(914, 102, 259, 3, 245),
	(921, 102, 258, 3, 246),
	(929, 102, 315, 3, 247),
	(937, 102, 316, 3, 248),
	(945, 102, 317, 3, 249),
	(953, 102, 318, 3, 250),
	(2293, 102, 463, 3, 431),
	(2301, 102, 464, 3, 432),
	(2309, 102, 465, 3, 433),
	(1208, 102, 346, 4, 278),
	(1217, 102, 347, 4, 279),
	(1226, 102, 348, 4, 280),
	(1235, 102, 349, 4, 281),
	(1243, 102, 350, 4, 282),
	(1251, 102, 351, 4, 283),
	(1258, 102, 345, 4, 284),
	(1265, 102, 342, 4, 285),
	(1272, 102, 337, 4, 286),
	(1279, 102, 339, 4, 287),
	(1286, 102, 334, 4, 288),
	(1293, 102, 331, 4, 289),
	(1300, 102, 329, 4, 290),
	(1308, 102, 352, 4, 291),
	(1316, 102, 353, 4, 292),
	(1324, 102, 354, 4, 293),
	(1331, 102, 344, 4, 294),
	(1338, 102, 341, 4, 295),
	(1345, 102, 336, 4, 296),
	(1352, 102, 338, 4, 297),
	(1359, 102, 333, 4, 298),
	(1366, 102, 330, 4, 299),
	(1373, 102, 328, 4, 300),
	(1381, 102, 355, 4, 301),
	(1389, 102, 356, 4, 302),
	(1397, 102, 357, 4, 303),
	(1405, 102, 358, 4, 304),
	(2326, 102, 466, 4, 434),
	(2334, 102, 467, 4, 435),
	(2342, 102, 468, 4, 436),
	(2350, 102, 469, 4, 437),
	(2358, 102, 470, 4, 438),
	(2366, 102, 471, 4, 439),
	(2374, 102, 472, 4, 440),
	(2382, 102, 473, 4, 441),
	(1420, 102, 359, 5, 305),
	(1428, 102, 360, 5, 306),
	(1436, 102, 361, 5, 307),
	(1451, 102, 362, 5, 308),
	(1459, 102, 363, 5, 309),
	(1467, 102, 364, 5, 310),
	(2163, 102, 440, 5, 406),
	(2177, 102, 441, 5, 408),
	(2184, 102, 442, 5, 409),
	(2191, 102, 439, 5, 410),
	(2198, 102, 443, 5, 411),
	(2205, 102, 444, 5, 412),
	(2212, 102, 445, 5, 413),
	(105, 103, 103, 0, 0),
	(205, 103, 108, 1, 129),
	(208, 103, 107, 1, 130),
	(211, 103, 109, 1, 131),
	(214, 103, 110, 1, 132),
	(218, 103, 129, 1, 133),
	(222, 103, 130, 1, 134),
	(226, 103, 131, 1, 135),
	(230, 103, 132, 1, 136),
	(234, 103, 133, 1, 137),
	(238, 103, 134, 1, 138),
	(242, 103, 135, 1, 139),
	(246, 103, 136, 1, 140),
	(250, 103, 137, 1, 141),
	(254, 103, 138, 1, 142),
	(258, 103, 139, 1, 143),
	(262, 103, 140, 1, 144),
	(266, 103, 141, 1, 145),
	(270, 103, 142, 1, 146),
	(274, 103, 143, 1, 147),
	(278, 103, 144, 1, 148),
	(282, 103, 145, 1, 149),
	(322, 103, 156, 2, 156),
	(337, 103, 164, 2, 157),
	(350, 103, 170, 2, 158),
	(364, 103, 156, 2, 159),
	(505, 103, 226, 2, 185),
	(508, 103, 164, 2, 186),
	(512, 103, 149, 2, 187),
	(516, 103, 164, 2, 188),
	(520, 103, 170, 2, 189),
	(524, 103, 156, 2, 190),
	(529, 103, 232, 2, 191),
	(544, 103, 242, 2, 192),
	(548, 103, 243, 2, 193),
	(552, 103, 244, 2, 194),
	(556, 103, 245, 2, 195),
	(560, 103, 246, 2, 196),
	(564, 103, 247, 2, 197),
	(568, 103, 248, 2, 198),
	(572, 103, 249, 2, 199),
	(576, 103, 250, 2, 200),
	(580, 103, 251, 2, 201),
	(584, 103, 252, 2, 202),
	(588, 103, 253, 2, 203),
	(596, 103, 254, 2, 204),
	(601, 103, 255, 2, 205),
	(605, 103, 256, 2, 206),
	(609, 103, 257, 2, 207),
	(613, 103, 258, 2, 208),
	(617, 103, 259, 2, 209),
	(621, 103, 260, 2, 210),
	(625, 103, 261, 2, 211),
	(629, 103, 262, 2, 212),
	(2258, 103, 455, 2, 423),
	(2262, 103, 456, 2, 424),
	(2266, 103, 457, 2, 425),
	(2270, 103, 458, 2, 426),
	(2274, 103, 459, 2, 427),
	(2278, 103, 460, 2, 428),
	(2282, 103, 461, 2, 429),
	(2286, 103, 462, 2, 430),
	(961, 103, 164, 3, 251),
	(968, 103, 149, 3, 252),
	(982, 103, 307, 3, 253),
	(991, 103, 306, 3, 254),
	(1000, 103, 305, 3, 255),
	(1009, 103, 304, 3, 256),
	(1019, 103, 325, 3, 257),
	(1027, 103, 326, 3, 258),
	(1035, 103, 327, 3, 259),
	(1044, 103, 328, 3, 260),
	(1052, 103, 329, 3, 261),
	(1063, 103, 330, 3, 262),
	(1071, 103, 331, 3, 263),
	(1082, 103, 332, 3, 264),
	(1090, 103, 333, 3, 265),
	(1098, 103, 334, 3, 266),
	(1108, 103, 335, 3, 267),
	(1116, 103, 336, 3, 268),
	(1124, 103, 337, 3, 269),
	(1135, 103, 338, 3, 270),
	(1143, 103, 339, 3, 271),
	(1154, 103, 340, 3, 272),
	(1162, 103, 341, 3, 273),
	(1170, 103, 342, 3, 274),
	(1179, 103, 343, 3, 275),
	(1187, 103, 344, 3, 276),
	(1195, 103, 345, 3, 277),
	(2106, 103, 439, 3, 399),
	(2114, 103, 440, 3, 400),
	(2122, 103, 441, 3, 401),
	(2130, 103, 442, 3, 402),
	(2138, 103, 443, 3, 403),
	(2146, 103, 444, 3, 404),
	(2154, 103, 445, 3, 405),
	(107, 104, 104, 0, 0),
	(286, 104, 146, 1, 150),
	(290, 104, 147, 1, 151),
	(2244, 104, 453, 1, 421),
	(634, 104, 226, 2, 213),
	(637, 104, 149, 2, 214),
	(640, 104, 164, 2, 215),
	(109, 105, 105, 0, 0),
	(294, 105, 148, 1, 152),
	(645, 105, 164, 1, 216),
	(299, 105, 149, 2, 153),
	(113, 106, 106, 0, 0),
	(316, 106, 152, 1, NULL),
	(317, 106, 155, 1, NULL),
	(309, 106, 153, 1, 154),
	(313, 106, 154, 1, 155),
	(651, 106, 256, 2, 217),
	(658, 106, 259, 2, 218),
	(665, 106, 261, 2, 219),
	(672, 106, 257, 2, 220),
	(679, 106, 260, 2, 221),
	(2167, 106, 440, 2, 407),
	(117, 107, 107, 0, 0),
	(319, 107, 156, 1, 156),
	(121, 108, 108, 0, 0),
	(334, 108, 164, 1, 157),
	(125, 109, 109, 0, 0),
	(347, 109, 170, 1, 158),
	(129, 110, 110, 0, 0),
	(361, 110, 156, 1, 159),
	(133, 111, 111, 0, 0),
	(379, 111, 188, 1, 160),
	(383, 111, 189, 1, 161),
	(387, 111, 190, 1, 162),
	(391, 111, 191, 1, 163),
	(395, 111, 192, 1, 164),
	(399, 111, 193, 1, 165),
	(687, 111, 170, 2, 222),
	(694, 111, 156, 2, 223),
	(709, 111, 226, 2, 224),
	(724, 111, 149, 2, 225),
	(747, 111, 164, 2, 226),
	(771, 111, 303, 2, 227),
	(137, 112, 112, 0, 0),
	(418, 112, 202, 1, 167),
	(422, 112, 203, 1, 168),
	(426, 112, 204, 1, 169),
	(430, 112, 205, 1, 170),
	(141, 113, 113, 0, 0),
	(433, 113, 206, 1, NULL),
	(145, 114, 114, 0, 0),
	(435, 114, 207, 1, 171),
	(439, 114, 208, 1, 172),
	(455, 114, 212, 1, 174),
	(444, 114, 209, 2, 173),
	(815, 114, 308, 2, 232),
	(824, 114, 309, 2, 233),
	(832, 114, 310, 2, 234),
	(840, 114, 311, 2, 235),
	(1207, 114, 346, 3, 278),
	(1216, 114, 347, 3, 279),
	(1225, 114, 348, 3, 280),
	(149, 115, 115, 0, 0),
	(462, 115, 214, 1, NULL),
	(459, 115, 213, 1, 175),
	(848, 115, 312, 2, 236),
	(1234, 115, 349, 3, 281),
	(1242, 115, 350, 3, 282),
	(153, 116, 116, 0, 0),
	(470, 116, 216, 1, NULL),
	(464, 116, 215, 1, 176),
	(467, 116, 213, 1, 177),
	(851, 116, 312, 2, 236),
	(855, 116, 261, 2, 237),
	(862, 116, 262, 2, 238),
	(870, 116, 313, 2, 239),
	(1237, 116, 349, 3, 281),
	(1245, 116, 350, 3, 282),
	(1250, 116, 351, 3, 283),
	(1257, 116, 345, 3, 284),
	(1264, 116, 342, 3, 285),
	(1271, 116, 337, 3, 286),
	(1278, 116, 339, 3, 287),
	(1285, 116, 334, 3, 288),
	(1292, 116, 331, 3, 289),
	(1299, 116, 329, 3, 290),
	(1307, 116, 352, 3, 291),
	(1315, 116, 353, 3, 292),
	(1323, 116, 354, 3, 293),
	(2325, 116, 466, 3, 434),
	(2333, 116, 467, 3, 435),
	(2341, 116, 468, 3, 436),
	(2349, 116, 469, 3, 437),
	(1419, 116, 359, 4, 305),
	(1427, 116, 360, 4, 306),
	(1435, 116, 361, 4, 307),
	(2162, 116, 440, 4, 406),
	(2176, 116, 441, 4, 408),
	(2183, 116, 442, 4, 409),
	(2190, 116, 439, 4, 410),
	(2197, 116, 443, 4, 411),
	(2204, 116, 444, 4, 412),
	(2211, 116, 445, 4, 413),
	(157, 117, 117, 0, 0),
	(482, 117, 219, 1, NULL),
	(471, 117, 213, 1, 178),
	(475, 117, 217, 1, 179),
	(479, 117, 218, 1, 180),
	(852, 117, 312, 2, 236),
	(878, 117, 314, 2, 240),
	(885, 117, 257, 2, 241),
	(892, 117, 256, 2, 242),
	(899, 117, 255, 2, 243),
	(906, 117, 260, 2, 244),
	(913, 117, 259, 2, 245),
	(920, 117, 258, 2, 246),
	(928, 117, 315, 2, 247),
	(1238, 117, 349, 3, 281),
	(1246, 117, 350, 3, 282),
	(1330, 117, 344, 3, 294),
	(1337, 117, 341, 3, 295),
	(1344, 117, 336, 3, 296),
	(1351, 117, 338, 3, 297),
	(1358, 117, 333, 3, 298),
	(1365, 117, 330, 3, 299),
	(1372, 117, 328, 3, 300),
	(1380, 117, 355, 3, 301),
	(1388, 117, 356, 3, 302),
	(1396, 117, 357, 3, 303),
	(1404, 117, 358, 3, 304),
	(2357, 117, 470, 3, 438),
	(2365, 117, 471, 3, 439),
	(2373, 117, 472, 3, 440),
	(2381, 117, 473, 3, 441),
	(1450, 117, 362, 4, 308),
	(1458, 117, 363, 4, 309),
	(1466, 117, 364, 4, 310),
	(161, 118, 118, 0, 0),
	(405, 118, 197, 1, NULL),
	(165, 119, 119, 0, 0),
	(406, 119, 196, 1, NULL),
	(169, 120, 120, 0, 0),
	(407, 120, 198, 1, NULL),
	(173, 121, 121, 0, 0),
	(408, 121, 199, 1, NULL),
	(177, 122, 122, 0, 0),
	(409, 122, 200, 1, NULL),
	(181, 123, 123, 0, 0),
	(415, 123, 158, 1, NULL),
	(414, 123, 165, 1, NULL),
	(411, 123, 201, 1, 166),
	(779, 123, 304, 2, 228),
	(787, 123, 305, 2, 229),
	(795, 123, 306, 2, 230),
	(803, 123, 307, 2, 231),
	(185, 124, 124, 0, 0),
	(189, 125, 125, 0, 0),
	(416, 125, 195, 1, NULL),
	(193, 126, 126, 0, 0),
	(483, 126, 220, 1, NULL),
	(484, 126, 221, 1, NULL),
	(485, 126, 222, 1, NULL),
	(486, 126, 223, 1, NULL),
	(197, 127, 127, 0, 0),
	(488, 127, 224, 1, 181),
	(492, 127, 225, 1, 182),
	(2253, 127, 454, 1, 422),
	(936, 127, 316, 2, 248),
	(944, 127, 317, 2, 249),
	(952, 127, 318, 2, 250),
	(2292, 127, 463, 2, 431),
	(2300, 127, 464, 2, 432),
	(2308, 127, 465, 2, 433),
	(201, 128, 128, 0, 0),
	(501, 128, 174, 1, NULL),
	(502, 128, 185, 1, NULL),
	(495, 128, 218, 1, 183),
	(498, 128, 215, 1, 184),
	(858, 128, 261, 2, 237),
	(865, 128, 262, 2, 238),
	(873, 128, 313, 2, 239),
	(888, 128, 257, 2, 241),
	(895, 128, 256, 2, 242),
	(902, 128, 255, 2, 243),
	(909, 128, 260, 2, 244),
	(916, 128, 259, 2, 245),
	(923, 128, 258, 2, 246),
	(931, 128, 315, 2, 247),
	(1253, 128, 351, 3, 283),
	(1260, 128, 345, 3, 284),
	(1267, 128, 342, 3, 285),
	(1274, 128, 337, 3, 286),
	(1281, 128, 339, 3, 287),
	(1288, 128, 334, 3, 288),
	(1295, 128, 331, 3, 289),
	(1302, 128, 329, 3, 290),
	(1310, 128, 352, 3, 291),
	(1318, 128, 353, 3, 292),
	(1326, 128, 354, 3, 293),
	(1333, 128, 344, 3, 294),
	(1340, 128, 341, 3, 295),
	(1347, 128, 336, 3, 296),
	(1354, 128, 338, 3, 297),
	(1361, 128, 333, 3, 298),
	(1368, 128, 330, 3, 299),
	(1375, 128, 328, 3, 300),
	(1383, 128, 355, 3, 301),
	(1391, 128, 356, 3, 302),
	(1399, 128, 357, 3, 303),
	(1407, 128, 358, 3, 304),
	(2328, 128, 466, 3, 434),
	(2336, 128, 467, 3, 435),
	(2344, 128, 468, 3, 436),
	(2352, 128, 469, 3, 437),
	(2360, 128, 470, 3, 438),
	(2368, 128, 471, 3, 439),
	(2376, 128, 472, 3, 440),
	(2384, 128, 473, 3, 441),
	(1422, 128, 359, 4, 305),
	(1430, 128, 360, 4, 306),
	(1438, 128, 361, 4, 307),
	(1453, 128, 362, 4, 308),
	(1461, 128, 363, 4, 309),
	(1469, 128, 364, 4, 310),
	(2165, 128, 440, 4, 406),
	(2179, 128, 441, 4, 408),
	(2186, 128, 442, 4, 409),
	(2193, 128, 439, 4, 410),
	(2200, 128, 443, 4, 411),
	(2207, 128, 444, 4, 412),
	(2214, 128, 445, 4, 413),
	(217, 129, 129, 0, 0),
	(504, 129, 226, 1, 185),
	(507, 129, 164, 1, 186),
	(221, 130, 130, 0, 0),
	(511, 130, 149, 1, 187),
	(225, 131, 131, 0, 0),
	(515, 131, 164, 1, 188),
	(229, 132, 132, 0, 0),
	(519, 132, 170, 1, 189),
	(233, 133, 133, 0, 0),
	(523, 133, 156, 1, 190),
	(237, 134, 134, 0, 0),
	(528, 134, 232, 1, 191),
	(960, 134, 164, 2, 251),
	(967, 134, 149, 2, 252),
	(241, 135, 135, 0, 0),
	(245, 136, 136, 0, 0),
	(543, 136, 242, 1, 192),
	(547, 136, 243, 1, 193),
	(551, 136, 244, 1, 194),
	(555, 136, 245, 1, 195),
	(981, 136, 307, 2, 253),
	(990, 136, 306, 2, 254),
	(999, 136, 305, 2, 255),
	(1008, 136, 304, 2, 256),
	(249, 137, 137, 0, 0),
	(559, 137, 246, 1, 196),
	(563, 137, 247, 1, 197),
	(567, 137, 248, 1, 198),
	(571, 137, 249, 1, 199),
	(575, 137, 250, 1, 200),
	(579, 137, 251, 1, 201),
	(583, 137, 252, 1, 202),
	(587, 137, 253, 1, 203),
	(2257, 137, 455, 1, 423),
	(2261, 137, 456, 1, 424),
	(2265, 137, 457, 1, 425),
	(2269, 137, 458, 1, 426),
	(2273, 137, 459, 1, 427),
	(2277, 137, 460, 1, 428),
	(2281, 137, 461, 1, 429),
	(2285, 137, 462, 1, 430),
	(1018, 137, 325, 2, 257),
	(1026, 137, 326, 2, 258),
	(1034, 137, 327, 2, 259),
	(1043, 137, 328, 2, 260),
	(1051, 137, 329, 2, 261),
	(1062, 137, 330, 2, 262),
	(1070, 137, 331, 2, 263),
	(1081, 137, 332, 2, 264),
	(1089, 137, 333, 2, 265),
	(1097, 137, 334, 2, 266),
	(1107, 137, 335, 2, 267),
	(1115, 137, 336, 2, 268),
	(1123, 137, 337, 2, 269),
	(1134, 137, 338, 2, 270),
	(1142, 137, 339, 2, 271),
	(1153, 137, 340, 2, 272),
	(1161, 137, 341, 2, 273),
	(1169, 137, 342, 2, 274),
	(1178, 137, 343, 2, 275),
	(1186, 137, 344, 2, 276),
	(1194, 137, 345, 2, 277),
	(2105, 137, 439, 2, 399),
	(2113, 137, 440, 2, 400),
	(2121, 137, 441, 2, 401),
	(2129, 137, 442, 2, 402),
	(2137, 137, 443, 2, 403),
	(2145, 137, 444, 2, 404),
	(2153, 137, 445, 2, 405),
	(253, 138, 138, 0, 0),
	(540, 138, 159, 1, NULL),
	(257, 139, 139, 0, 0),
	(541, 139, 186, 1, NULL),
	(261, 140, 140, 0, 0),
	(590, 140, 227, 1, NULL),
	(265, 141, 141, 0, 0),
	(591, 141, 228, 1, NULL),
	(269, 142, 142, 0, 0),
	(592, 142, 229, 1, NULL),
	(273, 143, 143, 0, 0),
	(593, 143, 230, 1, NULL),
	(277, 144, 144, 0, 0),
	(598, 144, 231, 1, NULL),
	(595, 144, 254, 1, 204),
	(281, 145, 145, 0, 0),
	(631, 145, 235, 1, NULL),
	(632, 145, 263, 1, NULL),
	(600, 145, 255, 1, 205),
	(604, 145, 256, 1, 206),
	(608, 145, 257, 1, 207),
	(612, 145, 258, 1, 208),
	(616, 145, 259, 1, 209),
	(620, 145, 260, 1, 210),
	(624, 145, 261, 1, 211),
	(628, 145, 262, 1, 212),
	(285, 146, 146, 0, 0),
	(633, 146, 226, 1, 213),
	(636, 146, 149, 1, 214),
	(639, 146, 164, 1, 215),
	(289, 147, 147, 0, 0),
	(644, 147, 265, 1, NULL),
	(293, 148, 148, 0, 0),
	(298, 148, 149, 1, 153),
	(297, 149, 149, 0, 0),
	(305, 150, 105, 1, NULL),
	(306, 151, 105, 1, NULL),
	(307, 152, 105, 1, NULL),
	(308, 153, 153, 0, 0),
	(2247, 153, 151, 1, NULL),
	(650, 153, 256, 1, 217),
	(657, 153, 259, 1, 218),
	(664, 153, 261, 1, 219),
	(312, 154, 154, 0, 0),
	(685, 154, 266, 1, NULL),
	(671, 154, 257, 1, 220),
	(678, 154, 260, 1, 221),
	(2166, 154, 440, 1, 407),
	(649, 155, 148, 1, NULL),
	(318, 156, 156, 0, 0),
	(326, 157, 107, 1, NULL),
	(327, 158, 107, 1, NULL),
	(328, 159, 107, 1, NULL),
	(329, 160, 107, 1, NULL),
	(330, 161, 107, 1, NULL),
	(331, 162, 107, 1, NULL),
	(332, 163, 107, 1, NULL),
	(333, 164, 164, 0, 0),
	(341, 165, 108, 1, NULL),
	(342, 166, 108, 1, NULL),
	(343, 167, 108, 1, NULL),
	(344, 168, 108, 1, NULL),
	(345, 169, 108, 1, NULL),
	(346, 170, 170, 0, 0),
	(354, 171, 109, 1, NULL),
	(355, 172, 109, 1, NULL),
	(356, 173, 109, 1, NULL),
	(357, 174, 109, 1, NULL),
	(358, 175, 109, 1, NULL),
	(359, 176, 109, 1, NULL),
	(360, 177, 109, 1, NULL),
	(368, 178, 110, 1, NULL),
	(369, 179, 110, 1, NULL),
	(370, 180, 110, 1, NULL),
	(371, 181, 110, 1, NULL),
	(372, 182, 110, 1, NULL),
	(373, 183, 110, 1, NULL),
	(374, 184, 110, 1, NULL),
	(375, 185, 110, 1, NULL),
	(376, 186, 110, 1, NULL),
	(377, 187, 110, 1, NULL),
	(378, 188, 188, 0, 0),
	(686, 188, 170, 1, 222),
	(382, 189, 189, 0, 0),
	(693, 189, 156, 1, 223),
	(386, 190, 190, 0, 0),
	(708, 190, 226, 1, 224),
	(390, 191, 191, 0, 0),
	(723, 191, 149, 1, 225),
	(394, 192, 192, 0, 0),
	(746, 192, 164, 1, 226),
	(398, 193, 193, 0, 0),
	(770, 193, 303, 1, 227),
	(402, 194, 111, 1, NULL),
	(403, 195, 111, 1, NULL),
	(404, 196, 111, 1, NULL),
	(700, 197, 189, 1, NULL),
	(715, 198, 190, 1, NULL),
	(730, 199, 191, 1, NULL),
	(753, 200, 192, 1, NULL),
	(410, 201, 201, 0, 0),
	(778, 201, 304, 1, 228),
	(786, 201, 305, 1, 229),
	(794, 201, 306, 1, 230),
	(802, 201, 307, 1, 231),
	(417, 202, 202, 0, 0),
	(809, 202, 270, 1, NULL),
	(421, 203, 203, 0, 0),
	(810, 203, 273, 1, NULL),
	(425, 204, 204, 0, 0),
	(811, 204, 280, 1, NULL),
	(429, 205, 205, 0, 0),
	(812, 205, 291, 1, NULL),
	(707, 206, 189, 1, NULL),
	(434, 207, 207, 0, 0),
	(821, 207, 268, 1, NULL),
	(814, 207, 308, 1, 232),
	(438, 208, 208, 0, 0),
	(451, 208, 210, 1, NULL),
	(443, 208, 209, 1, 173),
	(442, 209, 209, 0, 0),
	(453, 209, 211, 1, NULL),
	(450, 210, 188, 1, NULL),
	(452, 211, 188, 1, NULL),
	(454, 212, 212, 0, 0),
	(823, 212, 309, 1, 233),
	(831, 212, 310, 1, 234),
	(839, 212, 311, 1, 235),
	(1206, 212, 346, 2, 278),
	(1215, 212, 347, 2, 279),
	(1224, 212, 348, 2, 280),
	(458, 213, 213, 0, 0),
	(847, 213, 312, 1, 236),
	(1233, 213, 349, 2, 281),
	(1241, 213, 350, 2, 282),
	(721, 214, 190, 1, NULL),
	(463, 215, 215, 0, 0),
	(854, 215, 261, 1, 237),
	(861, 215, 262, 1, 238),
	(869, 215, 313, 1, 239),
	(1249, 215, 351, 2, 283),
	(1256, 215, 345, 2, 284),
	(1263, 215, 342, 2, 285),
	(1270, 215, 337, 2, 286),
	(1277, 215, 339, 2, 287),
	(1284, 215, 334, 2, 288),
	(1291, 215, 331, 2, 289),
	(1298, 215, 329, 2, 290),
	(1306, 215, 352, 2, 291),
	(1314, 215, 353, 2, 292),
	(1322, 215, 354, 2, 293),
	(2324, 215, 466, 2, 434),
	(2332, 215, 467, 2, 435),
	(2340, 215, 468, 2, 436),
	(2348, 215, 469, 2, 437),
	(1418, 215, 359, 3, 305),
	(1426, 215, 360, 3, 306),
	(1434, 215, 361, 3, 307),
	(2161, 215, 440, 3, 406),
	(2175, 215, 441, 3, 408),
	(2182, 215, 442, 3, 409),
	(2189, 215, 439, 3, 410),
	(2196, 215, 443, 3, 411),
	(2203, 215, 444, 3, 412),
	(2210, 215, 445, 3, 413),
	(738, 216, 191, 1, NULL),
	(474, 217, 217, 0, 0),
	(877, 217, 314, 1, 240),
	(478, 218, 218, 0, 0),
	(884, 218, 257, 1, 241),
	(891, 218, 256, 1, 242),
	(898, 218, 255, 1, 243),
	(905, 218, 260, 1, 244),
	(912, 218, 259, 1, 245),
	(919, 218, 258, 1, 246),
	(927, 218, 315, 1, 247),
	(1329, 218, 344, 2, 294),
	(1336, 218, 341, 2, 295),
	(1343, 218, 336, 2, 296),
	(1350, 218, 338, 2, 297),
	(1357, 218, 333, 2, 298),
	(1364, 218, 330, 2, 299),
	(1371, 218, 328, 2, 300),
	(1379, 218, 355, 2, 301),
	(1387, 218, 356, 2, 302),
	(1395, 218, 357, 2, 303),
	(1403, 218, 358, 2, 304),
	(2356, 218, 470, 2, 438),
	(2364, 218, 471, 2, 439),
	(2372, 218, 472, 2, 440),
	(2380, 218, 473, 2, 441),
	(1449, 218, 362, 3, 308),
	(1457, 218, 363, 3, 309),
	(1465, 218, 364, 3, 310),
	(758, 219, 192, 1, NULL),
	(705, 220, 189, 1, NULL),
	(720, 221, 190, 1, NULL),
	(737, 222, 191, 1, NULL),
	(757, 223, 192, 1, NULL),
	(487, 224, 224, 0, 0),
	(935, 224, 316, 1, 248),
	(943, 224, 317, 1, 249),
	(951, 224, 318, 1, 250),
	(2291, 224, 463, 1, 431),
	(2299, 224, 464, 1, 432),
	(2307, 224, 465, 1, 433),
	(491, 225, 225, 0, 0),
	(958, 225, 269, 1, NULL),
	(503, 226, 226, 0, 0),
	(510, 227, 129, 1, NULL),
	(514, 228, 130, 1, NULL),
	(518, 229, 131, 1, NULL),
	(522, 230, 132, 1, NULL),
	(526, 231, 133, 1, NULL),
	(527, 232, 232, 0, 0),
	(959, 232, 164, 1, 251),
	(966, 232, 149, 1, 252),
	(531, 233, 134, 1, NULL),
	(532, 234, 134, 1, NULL),
	(533, 235, 134, 1, NULL),
	(534, 236, 134, 1, NULL),
	(535, 237, 134, 1, NULL),
	(536, 238, 134, 1, NULL),
	(537, 239, 134, 1, NULL),
	(538, 240, 134, 1, NULL),
	(539, 241, 134, 1, NULL),
	(542, 242, 242, 0, 0),
	(988, 242, 160, 1, NULL),
	(987, 242, 166, 1, NULL),
	(980, 242, 307, 1, 253),
	(546, 243, 243, 0, 0),
	(997, 243, 161, 1, NULL),
	(996, 243, 167, 1, NULL),
	(989, 243, 306, 1, 254),
	(550, 244, 244, 0, 0),
	(1006, 244, 162, 1, NULL),
	(1005, 244, 168, 1, NULL),
	(998, 244, 305, 1, 255),
	(554, 245, 245, 0, 0),
	(1015, 245, 163, 1, NULL),
	(1014, 245, 169, 1, NULL),
	(1007, 245, 304, 1, 256),
	(558, 246, 246, 0, 0),
	(1040, 246, 234, 1, NULL),
	(1017, 246, 325, 1, 257),
	(1025, 246, 326, 1, 258),
	(1033, 246, 327, 1, 259),
	(562, 247, 247, 0, 0),
	(1058, 247, 175, 1, NULL),
	(1059, 247, 236, 1, NULL),
	(1057, 247, 322, 1, NULL),
	(1042, 247, 328, 1, 260),
	(1050, 247, 329, 1, 261),
	(2136, 247, 443, 1, 403),
	(2144, 247, 444, 1, 404),
	(2152, 247, 445, 1, 405),
	(566, 248, 248, 0, 0),
	(1077, 248, 176, 1, NULL),
	(1078, 248, 238, 1, NULL),
	(1076, 248, 323, 1, NULL),
	(1061, 248, 330, 1, 262),
	(1069, 248, 331, 1, 263),
	(2112, 248, 440, 1, 400),
	(2120, 248, 441, 1, 401),
	(2128, 248, 442, 1, 402),
	(570, 249, 249, 0, 0),
	(1104, 249, 171, 1, NULL),
	(1103, 249, 319, 1, NULL),
	(1080, 249, 332, 1, 264),
	(1088, 249, 333, 1, 265),
	(1096, 249, 334, 1, 266),
	(574, 250, 250, 0, 0),
	(1131, 250, 172, 1, NULL),
	(1130, 250, 180, 1, NULL),
	(1129, 250, 320, 1, NULL),
	(1106, 250, 335, 1, 267),
	(1114, 250, 336, 1, 268),
	(1122, 250, 337, 1, 269),
	(578, 251, 251, 0, 0),
	(1149, 251, 177, 1, NULL),
	(1150, 251, 240, 1, NULL),
	(1148, 251, 324, 1, NULL),
	(1133, 251, 338, 1, 270),
	(1141, 251, 339, 1, 271),
	(2104, 251, 439, 1, 399),
	(582, 252, 252, 0, 0),
	(1175, 252, 182, 1, NULL),
	(1152, 252, 340, 1, 272),
	(1160, 252, 341, 1, 273),
	(1168, 252, 342, 1, 274),
	(586, 253, 253, 0, 0),
	(1202, 253, 173, 1, NULL),
	(1201, 253, 184, 1, NULL),
	(1200, 253, 321, 1, NULL),
	(1177, 253, 343, 1, 275),
	(1185, 253, 344, 1, 276),
	(1193, 253, 345, 1, 277),
	(594, 254, 254, 0, 0),
	(599, 255, 255, 0, 0),
	(603, 256, 256, 0, 0),
	(607, 257, 257, 0, 0),
	(611, 258, 258, 0, 0),
	(615, 259, 259, 0, 0),
	(619, 260, 260, 0, 0),
	(623, 261, 261, 0, 0),
	(627, 262, 262, 0, 0),
	(979, 263, 232, 1, NULL),
	(642, 264, 146, 1, NULL),
	(643, 265, 146, 1, NULL),
	(648, 266, 148, 1, NULL),
	(701, 267, 189, 1, NULL),
	(702, 268, 189, 1, NULL),
	(703, 269, 189, 1, NULL),
	(704, 270, 189, 1, NULL),
	(706, 271, 189, 1, NULL),
	(716, 272, 190, 1, NULL),
	(717, 273, 190, 1, NULL),
	(718, 274, 190, 1, NULL),
	(719, 275, 190, 1, NULL),
	(722, 276, 190, 1, NULL),
	(731, 277, 191, 1, NULL),
	(732, 278, 191, 1, NULL),
	(733, 279, 191, 1, NULL),
	(734, 280, 191, 1, NULL),
	(735, 281, 191, 1, NULL),
	(736, 282, 191, 1, NULL),
	(739, 283, 191, 1, NULL),
	(740, 284, 191, 1, NULL),
	(741, 285, 191, 1, NULL),
	(742, 286, 191, 1, NULL),
	(743, 287, 191, 1, NULL),
	(744, 288, 191, 1, NULL),
	(745, 289, 191, 1, NULL),
	(754, 290, 192, 1, NULL),
	(755, 291, 192, 1, NULL),
	(756, 292, 192, 1, NULL),
	(759, 293, 192, 1, NULL),
	(760, 294, 192, 1, NULL),
	(761, 295, 192, 1, NULL),
	(762, 296, 192, 1, NULL),
	(763, 297, 192, 1, NULL),
	(764, 298, 192, 1, NULL),
	(765, 299, 192, 1, NULL),
	(766, 300, 192, 1, NULL),
	(767, 301, 192, 1, NULL),
	(768, 302, 192, 1, NULL),
	(769, 303, 303, 0, 0),
	(777, 304, 304, 0, 0),
	(785, 305, 305, 0, 0),
	(793, 306, 306, 0, 0),
	(801, 307, 307, 0, 0),
	(813, 308, 308, 0, 0),
	(1203, 308, 267, 1, NULL),
	(822, 309, 309, 0, 0),
	(1212, 309, 293, 1, NULL),
	(1205, 309, 346, 1, 278),
	(830, 310, 310, 0, 0),
	(1221, 310, 276, 1, NULL),
	(1214, 310, 347, 1, 279),
	(838, 311, 311, 0, 0),
	(1230, 311, 283, 1, NULL),
	(1223, 311, 348, 1, 280),
	(846, 312, 312, 0, 0),
	(1232, 312, 349, 1, 281),
	(1240, 312, 350, 1, 282),
	(868, 313, 313, 0, 0),
	(1248, 313, 351, 1, 283),
	(1255, 313, 345, 1, 284),
	(1262, 313, 342, 1, 285),
	(1269, 313, 337, 1, 286),
	(1276, 313, 339, 1, 287),
	(1283, 313, 334, 1, 288),
	(1290, 313, 331, 1, 289),
	(1297, 313, 329, 1, 290),
	(1305, 313, 352, 1, 291),
	(1313, 313, 353, 1, 292),
	(1321, 313, 354, 1, 293),
	(2323, 313, 466, 1, 434),
	(2331, 313, 467, 1, 435),
	(2339, 313, 468, 1, 436),
	(2347, 313, 469, 1, 437),
	(1417, 313, 359, 2, 305),
	(1425, 313, 360, 2, 306),
	(1433, 313, 361, 2, 307),
	(2160, 313, 440, 2, 406),
	(2174, 313, 441, 2, 408),
	(2181, 313, 442, 2, 409),
	(2188, 313, 439, 2, 410),
	(2195, 313, 443, 2, 411),
	(2202, 313, 444, 2, 412),
	(2209, 313, 445, 2, 413),
	(876, 314, 314, 0, 0),
	(926, 315, 315, 0, 0),
	(1328, 315, 344, 1, 294),
	(1335, 315, 341, 1, 295),
	(1342, 315, 336, 1, 296),
	(1349, 315, 338, 1, 297),
	(1356, 315, 333, 1, 298),
	(1363, 315, 330, 1, 299),
	(1370, 315, 328, 1, 300),
	(1378, 315, 355, 1, 301),
	(1386, 315, 356, 1, 302),
	(1394, 315, 357, 1, 303),
	(1402, 315, 358, 1, 304),
	(2355, 315, 470, 1, 438),
	(2363, 315, 471, 1, 439),
	(2371, 315, 472, 1, 440),
	(2379, 315, 473, 1, 441),
	(1448, 315, 362, 2, 308),
	(1456, 315, 363, 2, 309),
	(1464, 315, 364, 2, 310),
	(934, 316, 316, 0, 0),
	(1409, 316, 275, 1, NULL),
	(942, 317, 317, 0, 0),
	(1410, 317, 282, 1, NULL),
	(950, 318, 318, 0, 0),
	(1411, 318, 294, 1, NULL),
	(973, 319, 232, 1, NULL),
	(974, 320, 232, 1, NULL),
	(975, 321, 232, 1, NULL),
	(976, 322, 232, 1, NULL),
	(977, 323, 232, 1, NULL),
	(978, 324, 232, 1, NULL),
	(1016, 325, 325, 0, 0),
	(1024, 326, 326, 0, 0),
	(1032, 327, 327, 0, 0),
	(1041, 328, 328, 0, 0),
	(1049, 329, 329, 0, 0),
	(1060, 330, 330, 0, 0),
	(1068, 331, 331, 0, 0),
	(1079, 332, 332, 0, 0),
	(1087, 333, 333, 0, 0),
	(1095, 334, 334, 0, 0),
	(1105, 335, 335, 0, 0),
	(1113, 336, 336, 0, 0),
	(1121, 337, 337, 0, 0),
	(1132, 338, 338, 0, 0),
	(1140, 339, 339, 0, 0),
	(1151, 340, 340, 0, 0),
	(1159, 341, 341, 0, 0),
	(1167, 342, 342, 0, 0),
	(1176, 343, 343, 0, 0),
	(1184, 344, 344, 0, 0),
	(1192, 345, 345, 0, 0),
	(1204, 346, 346, 0, 0),
	(1412, 346, 290, 1, NULL),
	(1213, 347, 347, 0, 0),
	(1413, 347, 272, 1, NULL),
	(1222, 348, 348, 0, 0),
	(1414, 348, 279, 1, NULL),
	(1231, 349, 349, 0, 0),
	(1239, 350, 350, 0, 0),
	(1247, 351, 351, 0, 0),
	(1439, 351, 278, 1, NULL),
	(1416, 351, 359, 1, 305),
	(1424, 351, 360, 1, 306),
	(1432, 351, 361, 1, 307),
	(1304, 352, 352, 0, 0),
	(1440, 352, 284, 1, NULL),
	(2194, 352, 443, 1, 411),
	(2201, 352, 444, 1, 412),
	(2208, 352, 445, 1, 413),
	(1312, 353, 353, 0, 0),
	(1441, 353, 286, 1, NULL),
	(2187, 353, 439, 1, 410),
	(1320, 354, 354, 0, 0),
	(1442, 354, 288, 1, NULL),
	(2159, 354, 440, 1, 406),
	(2173, 354, 441, 1, 408),
	(2180, 354, 442, 1, 409),
	(1377, 355, 355, 0, 0),
	(1443, 355, 301, 1, NULL),
	(1385, 356, 356, 0, 0),
	(1444, 356, 299, 1, NULL),
	(1393, 357, 357, 0, 0),
	(1445, 357, 297, 1, NULL),
	(1401, 358, 358, 0, 0),
	(1470, 358, 295, 1, NULL),
	(1447, 358, 362, 1, 308),
	(1455, 358, 363, 1, 309),
	(1463, 358, 364, 1, 310),
	(1415, 359, 359, 0, 0),
	(1423, 360, 360, 0, 0),
	(1431, 361, 361, 0, 0),
	(1446, 362, 362, 0, 0),
	(1454, 363, 363, 0, 0),
	(1462, 364, 364, 0, 0),
	(1471, 365, 365, 0, 0),
	(1474, 365, 366, 1, 312),
	(1526, 365, 375, 1, 321),
	(1530, 365, 376, 1, 322),
	(1537, 365, 377, 1, 324),
	(1541, 365, 378, 1, 325),
	(1553, 365, 381, 1, 328),
	(1479, 365, 367, 2, 313),
	(1515, 365, 372, 2, 318),
	(1519, 365, 373, 2, 319),
	(1523, 365, 374, 2, 320),
	(1534, 365, 156, 2, 323),
	(1546, 365, 379, 2, 326),
	(1550, 365, 380, 2, 327),
	(1571, 365, 170, 2, 331),
	(1574, 365, 226, 2, 332),
	(1577, 365, 156, 2, 333),
	(1484, 365, 368, 3, 314),
	(1492, 365, 369, 3, 315),
	(1500, 365, 370, 3, 316),
	(1508, 365, 371, 3, 317),
	(1558, 365, 149, 3, 329),
	(1565, 365, 164, 3, 330),
	(1606, 365, 394, 3, 334),
	(1706, 365, 403, 3, 347),
	(1806, 365, 412, 3, 360),
	(1906, 365, 421, 3, 373),
	(2006, 365, 430, 3, 386),
	(1615, 365, 395, 4, 335),
	(1623, 365, 396, 4, 336),
	(1631, 365, 397, 4, 337),
	(1639, 365, 398, 4, 338),
	(1678, 365, 399, 4, 343),
	(1685, 365, 400, 4, 344),
	(1692, 365, 401, 4, 345),
	(1699, 365, 402, 4, 346),
	(1715, 365, 404, 4, 348),
	(1723, 365, 405, 4, 349),
	(1731, 365, 406, 4, 350),
	(1739, 365, 407, 4, 351),
	(1778, 365, 408, 4, 356),
	(1785, 365, 409, 4, 357),
	(1792, 365, 410, 4, 358),
	(1799, 365, 411, 4, 359),
	(1815, 365, 413, 4, 361),
	(1823, 365, 414, 4, 362),
	(1831, 365, 415, 4, 363),
	(1839, 365, 416, 4, 364),
	(1878, 365, 417, 4, 369),
	(1885, 365, 418, 4, 370),
	(1892, 365, 419, 4, 371),
	(1899, 365, 420, 4, 372),
	(1915, 365, 422, 4, 374),
	(1923, 365, 423, 4, 375),
	(1931, 365, 424, 4, 376),
	(1939, 365, 425, 4, 377),
	(1978, 365, 429, 4, 382),
	(1985, 365, 426, 4, 383),
	(1992, 365, 428, 4, 384),
	(1999, 365, 427, 4, 385),
	(2015, 365, 431, 4, 387),
	(2023, 365, 432, 4, 388),
	(2031, 365, 433, 4, 389),
	(2039, 365, 434, 4, 390),
	(2078, 365, 438, 4, 395),
	(2085, 365, 435, 4, 396),
	(2092, 365, 437, 4, 397),
	(2099, 365, 436, 4, 398),
	(1648, 365, 399, 5, 339),
	(1656, 365, 400, 5, 340),
	(1664, 365, 401, 5, 341),
	(1672, 365, 402, 5, 342),
	(1748, 365, 408, 5, 352),
	(1756, 365, 409, 5, 353),
	(1764, 365, 410, 5, 354),
	(1772, 365, 411, 5, 355),
	(1848, 365, 417, 5, 365),
	(1856, 365, 418, 5, 366),
	(1864, 365, 419, 5, 367),
	(1872, 365, 420, 5, 368),
	(1948, 365, 426, 5, 378),
	(1956, 365, 427, 5, 379),
	(1964, 365, 428, 5, 380),
	(1972, 365, 429, 5, 381),
	(2048, 365, 435, 5, 391),
	(2056, 365, 436, 5, 392),
	(2064, 365, 437, 5, 393),
	(2072, 365, 438, 5, 394),
	(1473, 366, 366, 0, 0),
	(1586, 366, 385, 1, NULL),
	(1478, 366, 367, 1, 313),
	(1514, 366, 372, 1, 318),
	(1518, 366, 373, 1, 319),
	(1522, 366, 374, 1, 320),
	(1483, 366, 368, 2, 314),
	(1491, 366, 369, 2, 315),
	(1499, 366, 370, 2, 316),
	(1507, 366, 371, 2, 317),
	(1605, 366, 394, 2, 334),
	(1705, 366, 403, 2, 347),
	(1805, 366, 412, 2, 360),
	(1905, 366, 421, 2, 373),
	(2005, 366, 430, 2, 386),
	(1614, 366, 395, 3, 335),
	(1622, 366, 396, 3, 336),
	(1630, 366, 397, 3, 337),
	(1638, 366, 398, 3, 338),
	(1677, 366, 399, 3, 343),
	(1684, 366, 400, 3, 344),
	(1691, 366, 401, 3, 345),
	(1698, 366, 402, 3, 346),
	(1714, 366, 404, 3, 348),
	(1722, 366, 405, 3, 349),
	(1730, 366, 406, 3, 350),
	(1738, 366, 407, 3, 351),
	(1777, 366, 408, 3, 356),
	(1784, 366, 409, 3, 357),
	(1791, 366, 410, 3, 358),
	(1798, 366, 411, 3, 359),
	(1814, 366, 413, 3, 361),
	(1822, 366, 414, 3, 362),
	(1830, 366, 415, 3, 363),
	(1838, 366, 416, 3, 364),
	(1877, 366, 417, 3, 369),
	(1884, 366, 418, 3, 370),
	(1891, 366, 419, 3, 371),
	(1898, 366, 420, 3, 372),
	(1914, 366, 422, 3, 374),
	(1922, 366, 423, 3, 375),
	(1930, 366, 424, 3, 376),
	(1938, 366, 425, 3, 377),
	(1977, 366, 429, 3, 382),
	(1984, 366, 426, 3, 383),
	(1991, 366, 428, 3, 384),
	(1998, 366, 427, 3, 385),
	(2014, 366, 431, 3, 387),
	(2022, 366, 432, 3, 388),
	(2030, 366, 433, 3, 389),
	(2038, 366, 434, 3, 390),
	(2077, 366, 438, 3, 395),
	(2084, 366, 435, 3, 396),
	(2091, 366, 437, 3, 397),
	(2098, 366, 436, 3, 398),
	(1647, 366, 399, 4, 339),
	(1655, 366, 400, 4, 340),
	(1663, 366, 401, 4, 341),
	(1671, 366, 402, 4, 342),
	(1747, 366, 408, 4, 352),
	(1755, 366, 409, 4, 353),
	(1763, 366, 410, 4, 354),
	(1771, 366, 411, 4, 355),
	(1847, 366, 417, 4, 365),
	(1855, 366, 418, 4, 366),
	(1863, 366, 419, 4, 367),
	(1871, 366, 420, 4, 368),
	(1947, 366, 426, 4, 378),
	(1955, 366, 427, 4, 379),
	(1963, 366, 428, 4, 380),
	(1971, 366, 429, 4, 381),
	(2047, 366, 435, 4, 391),
	(2055, 366, 436, 4, 392),
	(2063, 366, 437, 4, 393),
	(2071, 366, 438, 4, 394),
	(1477, 367, 367, 0, 0),
	(1482, 367, 368, 1, 314),
	(1490, 367, 369, 1, 315),
	(1498, 367, 370, 1, 316),
	(1506, 367, 371, 1, 317),
	(1676, 367, 399, 2, 343),
	(1683, 367, 400, 2, 344),
	(1690, 367, 401, 2, 345),
	(1697, 367, 402, 2, 346),
	(1776, 367, 408, 2, 356),
	(1783, 367, 409, 2, 357),
	(1790, 367, 410, 2, 358),
	(1797, 367, 411, 2, 359),
	(1876, 367, 417, 2, 369),
	(1883, 367, 418, 2, 370),
	(1890, 367, 419, 2, 371),
	(1897, 367, 420, 2, 372),
	(1976, 367, 429, 2, 382),
	(1983, 367, 426, 2, 383),
	(1990, 367, 428, 2, 384),
	(1997, 367, 427, 2, 385),
	(2076, 367, 438, 2, 395),
	(2083, 367, 435, 2, 396),
	(2090, 367, 437, 2, 397),
	(2097, 367, 436, 2, 398),
	(1481, 368, 368, 0, 0),
	(1587, 368, 386, 1, NULL),
	(1589, 368, 387, 1, NULL),
	(1675, 368, 399, 1, 343),
	(1775, 368, 408, 1, 356),
	(1875, 368, 417, 1, 369),
	(1975, 368, 429, 1, 382),
	(2075, 368, 438, 1, 395),
	(1489, 369, 369, 0, 0),
	(1599, 369, 392, 1, NULL),
	(1601, 369, 393, 1, NULL),
	(1682, 369, 400, 1, 344),
	(1782, 369, 409, 1, 357),
	(1882, 369, 418, 1, 370),
	(1982, 369, 426, 1, 383),
	(2082, 369, 435, 1, 396),
	(1497, 370, 370, 0, 0),
	(1591, 370, 388, 1, NULL),
	(1593, 370, 389, 1, NULL),
	(1689, 370, 401, 1, 345),
	(1789, 370, 410, 1, 358),
	(1889, 370, 419, 1, 371),
	(1989, 370, 428, 1, 384),
	(2089, 370, 437, 1, 397),
	(1505, 371, 371, 0, 0),
	(1595, 371, 390, 1, NULL),
	(1597, 371, 391, 1, NULL),
	(1696, 371, 402, 1, 346),
	(1796, 371, 411, 1, 359),
	(1896, 371, 420, 1, 372),
	(1996, 371, 427, 1, 385),
	(2096, 371, 436, 1, 398),
	(1513, 372, 372, 0, 0),
	(1582, 372, 383, 1, NULL),
	(1704, 372, 403, 1, 347),
	(1904, 372, 421, 1, 373),
	(1713, 372, 404, 2, 348),
	(1721, 372, 405, 2, 349),
	(1729, 372, 406, 2, 350),
	(1737, 372, 407, 2, 351),
	(1913, 372, 422, 2, 374),
	(1921, 372, 423, 2, 375),
	(1929, 372, 424, 2, 376),
	(1937, 372, 425, 2, 377),
	(1746, 372, 408, 3, 352),
	(1754, 372, 409, 3, 353),
	(1762, 372, 410, 3, 354),
	(1770, 372, 411, 3, 355),
	(1946, 372, 426, 3, 378),
	(1954, 372, 427, 3, 379),
	(1962, 372, 428, 3, 380),
	(1970, 372, 429, 3, 381),
	(1517, 373, 373, 0, 0),
	(1584, 373, 384, 1, NULL),
	(1604, 373, 394, 1, 334),
	(2004, 373, 430, 1, 386),
	(1613, 373, 395, 2, 335),
	(1621, 373, 396, 2, 336),
	(1629, 373, 397, 2, 337),
	(1637, 373, 398, 2, 338),
	(2013, 373, 431, 2, 387),
	(2021, 373, 432, 2, 388),
	(2029, 373, 433, 2, 389),
	(2037, 373, 434, 2, 390),
	(1646, 373, 399, 3, 339),
	(1654, 373, 400, 3, 340),
	(1662, 373, 401, 3, 341),
	(1670, 373, 402, 3, 342),
	(2046, 373, 435, 3, 391),
	(2054, 373, 436, 3, 392),
	(2062, 373, 437, 3, 393),
	(2070, 373, 438, 3, 394),
	(1521, 374, 374, 0, 0),
	(1804, 374, 412, 1, 360),
	(1813, 374, 413, 2, 361),
	(1821, 374, 414, 2, 362),
	(1829, 374, 415, 2, 363),
	(1837, 374, 416, 2, 364),
	(1846, 374, 417, 3, 365),
	(1854, 374, 418, 3, 366),
	(1862, 374, 419, 3, 367),
	(1870, 374, 420, 3, 368),
	(1525, 375, 375, 0, 0),
	(1580, 375, 382, 1, NULL),
	(1529, 376, 376, 0, 0),
	(1533, 376, 156, 1, 323),
	(1536, 377, 377, 0, 0),
	(1545, 377, 379, 1, 326),
	(1570, 377, 170, 1, 331),
	(1557, 377, 149, 2, 329),
	(1540, 378, 378, 0, 0),
	(1549, 378, 380, 1, 327),
	(1573, 378, 226, 1, 332),
	(1564, 378, 164, 2, 330),
	(1544, 379, 379, 0, 0),
	(1556, 379, 149, 1, 329),
	(1548, 380, 380, 0, 0),
	(1563, 380, 164, 1, 330),
	(1552, 381, 381, 0, 0),
	(1576, 381, 156, 1, 333),
	(1579, 382, 376, 1, NULL),
	(1581, 383, 377, 1, NULL),
	(1583, 384, 378, 1, NULL),
	(1585, 385, 376, 1, NULL),
	(1588, 386, 377, 1, NULL),
	(1590, 387, 378, 1, NULL),
	(1592, 388, 377, 1, NULL),
	(1594, 389, 378, 1, NULL),
	(1596, 390, 377, 1, NULL),
	(1598, 391, 378, 1, NULL),
	(1600, 392, 377, 1, NULL),
	(1602, 393, 378, 1, NULL),
	(1603, 394, 394, 0, 0),
	(1612, 394, 395, 1, 335),
	(1620, 394, 396, 1, 336),
	(1628, 394, 397, 1, 337),
	(1636, 394, 398, 1, 338),
	(1645, 394, 399, 2, 339),
	(1653, 394, 400, 2, 340),
	(1661, 394, 401, 2, 341),
	(1669, 394, 402, 2, 342),
	(1611, 395, 395, 0, 0),
	(1644, 395, 399, 1, 339),
	(1619, 396, 396, 0, 0),
	(1652, 396, 400, 1, 340),
	(1627, 397, 397, 0, 0),
	(1660, 397, 401, 1, 341),
	(1635, 398, 398, 0, 0),
	(1668, 398, 402, 1, 342),
	(1643, 399, 399, 0, 0),
	(1651, 400, 400, 0, 0),
	(1659, 401, 401, 0, 0),
	(1667, 402, 402, 0, 0),
	(1703, 403, 403, 0, 0),
	(1712, 403, 404, 1, 348),
	(1720, 403, 405, 1, 349),
	(1728, 403, 406, 1, 350),
	(1736, 403, 407, 1, 351),
	(1745, 403, 408, 2, 352),
	(1753, 403, 409, 2, 353),
	(1761, 403, 410, 2, 354),
	(1769, 403, 411, 2, 355),
	(1711, 404, 404, 0, 0),
	(1744, 404, 408, 1, 352),
	(1719, 405, 405, 0, 0),
	(1752, 405, 409, 1, 353),
	(1727, 406, 406, 0, 0),
	(1760, 406, 410, 1, 354),
	(1735, 407, 407, 0, 0),
	(1768, 407, 411, 1, 355),
	(1743, 408, 408, 0, 0),
	(1751, 409, 409, 0, 0),
	(1759, 410, 410, 0, 0),
	(1767, 411, 411, 0, 0),
	(1803, 412, 412, 0, 0),
	(1812, 412, 413, 1, 361),
	(1820, 412, 414, 1, 362),
	(1828, 412, 415, 1, 363),
	(1836, 412, 416, 1, 364),
	(1845, 412, 417, 2, 365),
	(1853, 412, 418, 2, 366),
	(1861, 412, 419, 2, 367),
	(1869, 412, 420, 2, 368),
	(1811, 413, 413, 0, 0),
	(1844, 413, 417, 1, 365),
	(1819, 414, 414, 0, 0),
	(1852, 414, 418, 1, 366),
	(1827, 415, 415, 0, 0),
	(1860, 415, 419, 1, 367),
	(1835, 416, 416, 0, 0),
	(1868, 416, 420, 1, 368),
	(1843, 417, 417, 0, 0),
	(1851, 418, 418, 0, 0),
	(1859, 419, 419, 0, 0),
	(1867, 420, 420, 0, 0),
	(1903, 421, 421, 0, 0),
	(1912, 421, 422, 1, 374),
	(1920, 421, 423, 1, 375),
	(1928, 421, 424, 1, 376),
	(1936, 421, 425, 1, 377),
	(1945, 421, 426, 2, 378),
	(1953, 421, 427, 2, 379),
	(1961, 421, 428, 2, 380),
	(1969, 421, 429, 2, 381),
	(1911, 422, 422, 0, 0),
	(1968, 422, 429, 1, 381),
	(1919, 423, 423, 0, 0),
	(1944, 423, 426, 1, 378),
	(1927, 424, 424, 0, 0),
	(1960, 424, 428, 1, 380),
	(1935, 425, 425, 0, 0),
	(1952, 425, 427, 1, 379),
	(1943, 426, 426, 0, 0),
	(1951, 427, 427, 0, 0),
	(1959, 428, 428, 0, 0),
	(1967, 429, 429, 0, 0),
	(2003, 430, 430, 0, 0),
	(2012, 430, 431, 1, 387),
	(2020, 430, 432, 1, 388),
	(2028, 430, 433, 1, 389),
	(2036, 430, 434, 1, 390),
	(2045, 430, 435, 2, 391),
	(2053, 430, 436, 2, 392),
	(2061, 430, 437, 2, 393),
	(2069, 430, 438, 2, 394),
	(2011, 431, 431, 0, 0),
	(2068, 431, 438, 1, 394),
	(2019, 432, 432, 0, 0),
	(2044, 432, 435, 1, 391),
	(2027, 433, 433, 0, 0),
	(2060, 433, 437, 1, 393),
	(2035, 434, 434, 0, 0),
	(2052, 434, 436, 1, 392),
	(2043, 435, 435, 0, 0),
	(2051, 436, 436, 0, 0),
	(2059, 437, 437, 0, 0),
	(2067, 438, 438, 0, 0),
	(2103, 439, 439, 0, 0),
	(2111, 440, 440, 0, 0),
	(2119, 441, 441, 0, 0),
	(2127, 442, 442, 0, 0),
	(2135, 443, 443, 0, 0),
	(2143, 444, 444, 0, 0),
	(2151, 445, 445, 0, 0),
	(2215, 446, 446, 0, 0),
	(2219, 447, 447, 0, 0),
	(2248, 447, 150, 1, NULL),
	(2223, 448, 448, 0, 0),
	(2249, 448, 157, 1, NULL),
	(2227, 449, 449, 0, 0),
	(2231, 450, 450, 0, 0),
	(2235, 451, 451, 0, 0),
	(2250, 451, 194, 1, NULL),
	(2239, 452, 452, 0, 0),
	(2251, 452, 187, 1, NULL),
	(2243, 453, 453, 0, 0),
	(2288, 453, 264, 1, NULL),
	(2252, 454, 454, 0, 0),
	(2289, 454, 271, 1, NULL),
	(2256, 455, 455, 0, 0),
	(2314, 455, 178, 1, NULL),
	(2260, 456, 456, 0, 0),
	(2315, 456, 179, 1, NULL),
	(2264, 457, 457, 0, 0),
	(2316, 457, 181, 1, NULL),
	(2268, 458, 458, 0, 0),
	(2317, 458, 183, 1, NULL),
	(2272, 459, 459, 0, 0),
	(2318, 459, 233, 1, NULL),
	(2276, 460, 460, 0, 0),
	(2319, 460, 237, 1, NULL),
	(2280, 461, 461, 0, 0),
	(2320, 461, 239, 1, NULL),
	(2284, 462, 462, 0, 0),
	(2321, 462, 241, 1, NULL),
	(2290, 463, 463, 0, 0),
	(2386, 463, 274, 1, NULL),
	(2298, 464, 464, 0, 0),
	(2387, 464, 281, 1, NULL),
	(2306, 465, 465, 0, 0),
	(2388, 465, 292, 1, NULL),
	(2322, 466, 466, 0, 0),
	(2389, 466, 277, 1, NULL),
	(2330, 467, 467, 0, 0),
	(2390, 467, 285, 1, NULL),
	(2338, 468, 468, 0, 0),
	(2391, 468, 287, 1, NULL),
	(2346, 469, 469, 0, 0),
	(2392, 469, 289, 1, NULL),
	(2354, 470, 470, 0, 0),
	(2393, 470, 296, 1, NULL),
	(2362, 471, 471, 0, 0),
	(2394, 471, 298, 1, NULL),
	(2370, 472, 472, 0, 0),
	(2395, 472, 300, 1, NULL),
	(2378, 473, 473, 0, 0),
	(2396, 473, 302, 1, NULL),
	(2397, 474, 474, 0, 0),
	(2400, 474, 475, 1, 443),
	(2428, 474, 480, 1, 448),
	(2409, 474, 477, 2, 445),
	(2433, 474, 481, 2, 449),
	(2437, 474, 482, 2, 450),
	(2445, 474, 485, 2, 451),
	(2422, 474, 479, 3, 447),
	(2450, 474, 486, 3, 452),
	(2399, 475, 475, 0, 0),
	(2408, 475, 477, 1, 445),
	(2444, 475, 485, 1, 451),
	(2421, 475, 479, 2, 447),
	(2449, 475, 486, 2, 452),
	(2407, 477, 477, 0, 0),
	(2420, 477, 479, 1, 447),
	(2419, 479, 479, 0, 0),
	(2427, 480, 480, 0, 0),
	(2439, 480, 483, 1, NULL),
	(2432, 480, 481, 1, 449),
	(2436, 480, 482, 1, 450),
	(2431, 481, 481, 0, 0),
	(2455, 481, 487, 1, NULL),
	(2435, 482, 482, 0, 0),
	(2457, 482, 488, 1, NULL),
	(2440, 483, 475, 1, NULL),
	(2443, 485, 485, 0, 0),
	(2448, 485, 486, 1, 452),
	(2447, 486, 486, 0, 0),
	(2456, 487, 485, 1, NULL),
	(2458, 488, 477, 1, NULL);
/*!40000 ALTER TABLE `assignment` ENABLE KEYS */;

-- Dumping structure for table policydb.assignment_path
CREATE TABLE IF NOT EXISTS `assignment_path` (
  `assignment_path_id` int(11) NOT NULL AUTO_INCREMENT,
  `assignment_node_id` int(11) NOT NULL,
  PRIMARY KEY (`assignment_path_id`),
  KEY `fk_assignment_node_id` (`assignment_node_id`),
  CONSTRAINT `fk_assignment_node_id` FOREIGN KEY (`assignment_node_id`) REFERENCES `node` (`node_id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table policydb.assignment_path: ~354 rows (approximately)
/*!40000 ALTER TABLE `assignment_path` DISABLE KEYS */;
INSERT INTO `assignment_path` (`assignment_path_id`, `assignment_node_id`) VALUES
	(1, 2),
	(2, 3),
	(3, 4),
	(4, 5),
	(101, 101),
	(102, 102),
	(103, 103),
	(104, 104),
	(105, 105),
	(106, 106),
	(107, 107),
	(130, 107),
	(108, 108),
	(129, 108),
	(109, 109),
	(131, 109),
	(110, 110),
	(132, 110),
	(111, 111),
	(112, 112),
	(113, 113),
	(114, 114),
	(115, 115),
	(116, 116),
	(117, 117),
	(118, 118),
	(119, 119),
	(120, 120),
	(121, 121),
	(122, 122),
	(123, 123),
	(124, 124),
	(125, 125),
	(126, 126),
	(127, 127),
	(128, 128),
	(133, 129),
	(134, 130),
	(135, 131),
	(136, 132),
	(137, 133),
	(138, 134),
	(139, 135),
	(140, 136),
	(141, 137),
	(142, 138),
	(143, 139),
	(144, 140),
	(145, 141),
	(146, 142),
	(147, 143),
	(148, 144),
	(149, 145),
	(150, 146),
	(151, 147),
	(152, 148),
	(153, 149),
	(187, 149),
	(214, 149),
	(225, 149),
	(252, 149),
	(329, 149),
	(154, 153),
	(155, 154),
	(156, 156),
	(159, 156),
	(190, 156),
	(223, 156),
	(323, 156),
	(333, 156),
	(157, 164),
	(186, 164),
	(188, 164),
	(215, 164),
	(216, 164),
	(226, 164),
	(251, 164),
	(330, 164),
	(158, 170),
	(189, 170),
	(222, 170),
	(331, 170),
	(160, 188),
	(161, 189),
	(162, 190),
	(163, 191),
	(164, 192),
	(165, 193),
	(166, 201),
	(167, 202),
	(168, 203),
	(169, 204),
	(170, 205),
	(171, 207),
	(172, 208),
	(173, 209),
	(174, 212),
	(175, 213),
	(177, 213),
	(178, 213),
	(176, 215),
	(184, 215),
	(179, 217),
	(180, 218),
	(183, 218),
	(181, 224),
	(182, 225),
	(185, 226),
	(213, 226),
	(224, 226),
	(332, 226),
	(191, 232),
	(192, 242),
	(193, 243),
	(194, 244),
	(195, 245),
	(196, 246),
	(197, 247),
	(198, 248),
	(199, 249),
	(200, 250),
	(201, 251),
	(202, 252),
	(203, 253),
	(204, 254),
	(205, 255),
	(243, 255),
	(206, 256),
	(217, 256),
	(242, 256),
	(207, 257),
	(220, 257),
	(241, 257),
	(208, 258),
	(246, 258),
	(209, 259),
	(218, 259),
	(245, 259),
	(210, 260),
	(221, 260),
	(244, 260),
	(211, 261),
	(219, 261),
	(237, 261),
	(212, 262),
	(238, 262),
	(227, 303),
	(228, 304),
	(256, 304),
	(229, 305),
	(255, 305),
	(230, 306),
	(254, 306),
	(231, 307),
	(253, 307),
	(232, 308),
	(233, 309),
	(234, 310),
	(235, 311),
	(236, 312),
	(239, 313),
	(240, 314),
	(247, 315),
	(248, 316),
	(249, 317),
	(250, 318),
	(257, 325),
	(258, 326),
	(259, 327),
	(260, 328),
	(300, 328),
	(261, 329),
	(290, 329),
	(262, 330),
	(299, 330),
	(263, 331),
	(289, 331),
	(264, 332),
	(265, 333),
	(298, 333),
	(266, 334),
	(288, 334),
	(267, 335),
	(268, 336),
	(296, 336),
	(269, 337),
	(286, 337),
	(270, 338),
	(297, 338),
	(271, 339),
	(287, 339),
	(272, 340),
	(273, 341),
	(295, 341),
	(274, 342),
	(285, 342),
	(275, 343),
	(276, 344),
	(294, 344),
	(277, 345),
	(284, 345),
	(278, 346),
	(279, 347),
	(280, 348),
	(281, 349),
	(282, 350),
	(283, 351),
	(291, 352),
	(292, 353),
	(293, 354),
	(301, 355),
	(302, 356),
	(303, 357),
	(304, 358),
	(305, 359),
	(306, 360),
	(307, 361),
	(308, 362),
	(309, 363),
	(310, 364),
	(311, 365),
	(312, 366),
	(313, 367),
	(314, 368),
	(315, 369),
	(316, 370),
	(317, 371),
	(318, 372),
	(319, 373),
	(320, 374),
	(321, 375),
	(322, 376),
	(324, 377),
	(325, 378),
	(326, 379),
	(327, 380),
	(328, 381),
	(334, 394),
	(335, 395),
	(336, 396),
	(337, 397),
	(338, 398),
	(339, 399),
	(343, 399),
	(340, 400),
	(344, 400),
	(341, 401),
	(345, 401),
	(342, 402),
	(346, 402),
	(347, 403),
	(348, 404),
	(349, 405),
	(350, 406),
	(351, 407),
	(352, 408),
	(356, 408),
	(353, 409),
	(357, 409),
	(354, 410),
	(358, 410),
	(355, 411),
	(359, 411),
	(360, 412),
	(361, 413),
	(362, 414),
	(363, 415),
	(364, 416),
	(365, 417),
	(369, 417),
	(366, 418),
	(370, 418),
	(367, 419),
	(371, 419),
	(368, 420),
	(372, 420),
	(373, 421),
	(374, 422),
	(375, 423),
	(376, 424),
	(377, 425),
	(378, 426),
	(383, 426),
	(379, 427),
	(385, 427),
	(380, 428),
	(384, 428),
	(381, 429),
	(382, 429),
	(386, 430),
	(387, 431),
	(388, 432),
	(389, 433),
	(390, 434),
	(391, 435),
	(396, 435),
	(392, 436),
	(398, 436),
	(393, 437),
	(397, 437),
	(394, 438),
	(395, 438),
	(399, 439),
	(410, 439),
	(400, 440),
	(406, 440),
	(407, 440),
	(401, 441),
	(408, 441),
	(402, 442),
	(409, 442),
	(403, 443),
	(411, 443),
	(404, 444),
	(412, 444),
	(405, 445),
	(413, 445),
	(414, 446),
	(415, 447),
	(416, 448),
	(417, 449),
	(418, 450),
	(419, 451),
	(420, 452),
	(421, 453),
	(422, 454),
	(423, 455),
	(424, 456),
	(425, 457),
	(426, 458),
	(427, 459),
	(428, 460),
	(429, 461),
	(430, 462),
	(431, 463),
	(432, 464),
	(433, 465),
	(434, 466),
	(435, 467),
	(436, 468),
	(437, 469),
	(438, 470),
	(439, 471),
	(440, 472),
	(441, 473),
	(442, 474),
	(443, 475),
	(445, 477),
	(447, 479),
	(448, 480),
	(449, 481),
	(450, 482),
	(451, 485),
	(452, 486);
/*!40000 ALTER TABLE `assignment_path` ENABLE KEYS */;

-- Dumping structure for view policydb.assignment_view
-- Creating temporary table to overcome VIEW dependency errors
CREATE TABLE `assignment_view` (
	`start_node_id` INT(11) NULL,
	`start_node_name` VARCHAR(100) NULL COLLATE 'utf8_general_ci',
	`end_node_id` INT(11) NULL,
	`end_node_name` VARCHAR(100) NULL COLLATE 'utf8_general_ci',
	`depth` INT(11) NULL,
	`assignment_path_id` INT(2) NULL
) ENGINE=MyISAM;

-- Dumping structure for view policydb.association
-- Creating temporary table to overcome VIEW dependency errors
CREATE TABLE `association` (
	`ua_id` BIGINT(11) NULL,
	`opset_id` INT(11) NULL,
	`oa_id` INT(11) NULL
) ENGINE=MyISAM;

-- Dumping structure for table policydb.audit_information
CREATE TABLE IF NOT EXISTS `audit_information` (
  `SESS_ID` varchar(32) NOT NULL,
  `USER_ID` varchar(32) NOT NULL,
  `USER_NAME` varchar(80) NOT NULL,
  `HOST_NAME` varchar(80) NOT NULL,
  `TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `ACTION` varchar(80) DEFAULT NULL,
  `RESULT_SUCCESS` tinyint(1) DEFAULT NULL,
  `DESCRIPTION` varchar(300) DEFAULT NULL,
  `OBJ_ID` varchar(80) DEFAULT NULL,
  `OBJ_NAME` varchar(80) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table policydb.audit_information: ~0 rows (approximately)
/*!40000 ALTER TABLE `audit_information` DISABLE KEYS */;
/*!40000 ALTER TABLE `audit_information` ENABLE KEYS */;

-- Dumping structure for procedure policydb.create_assignment
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_assignment`(start_node int, end_node int)
BEGIN
DECLARE node_type_id_in int;
DECLARE path_id int;
                IF exists ( SELECT NODE_ID FROM policydb.NODE WHERE NODE_ID = start_node) THEN
                                IF exists ( SELECT NODE_ID FROM policydb.NODE WHERE NODE_ID = END_NODE)  THEN
                                                IF start_node <> end_node THEN
                                                                IF get_node_type(start_node) <> 7 and get_node_type(end_node) <> 7 THEN
                                                                                -- create path_id
                                                                                INSERT INTO ASSIGNMENT_PATH (ASSIGNMENT_NODE_ID) VALUES (END_NODE);
                                                                                SELECT MAX(ASSIGNMENT_PATH_ID) INTO path_id FROM ASSIGNMENT_PATH;
                                                                                -- Insert in assignment table
                                                                                INSERT INTO policydb.ASSIGNMENT (start_node_id, end_node_id, depth, assignment_path_id)
                                                                                                (SELECT start_node, end_node, 1, path_id FROM DUAL)
                                                                                UNION
                                                                                                (SELECT DISTINCT start_node_id, end_node, depth+1, path_id
                                                                                FROM policydb.ASSIGNMENT
                                                                                WHERE end_node_id = start_node
                                                                                AND assignment_path_id > 0
                                                                                AND depth > 0);
                                                                ELSE
                                                                                INSERT INTO policydb.ASSIGNMENT (start_node_id, end_node_id, depth) values
                                                                                                (start_node, end_node, 1 );
                                                                END IF;
                                                END IF;
                                                IF start_node <> 1 AND get_node_type(end_node) <> 2 THEN  -- other than policy class
                                                                -- delete connection to connector
                                                                DELETE FROM assignment WHERE START_NODE_ID = 1 AND END_NODE_ID = end_node AND depth = 1;
                                                END IF;
                                END IF;
                END IF;
END//
DELIMITER ;

-- Dumping structure for procedure policydb.create_association
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_association`(oa_node int, ua_node int, opset_name varchar(45), operations varchar(1000))
BEGIN
DECLARE node_id int;
DECLARE opset_id int;
-- Insert in assignment table
                IF not exists ( SELECT NAME FROM policydb.NODE WHERE UPPER(NAME) = UPPER(opset_name) ) THEN
                                call create_opset(opset_name, operations);
                END IF;
                SELECT get_node_id(opset_name, 's') INTO opset_id;

                -- Create dual assignment. Assiciations will have path_id null
    if oa_node is not null then
                                INSERT INTO policydb.ASSIGNMENT (start_node_id, end_node_id, depth) values (oa_node, opset_id, 1);
                end if;
    if ua_node is not null then
                                INSERT INTO policydb.ASSIGNMENT (start_node_id, end_node_id, depth) values (opset_id, ua_node, 1);
                end if;
END//
DELIMITER ;

-- Dumping structure for procedure policydb.create_host
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_host`(user_id int, hostname varchar(50), domain_controller_ind varchar(1), path varchar(200))
BEGIN
                IF NOT EXISTS (SELECT HOST_ID FROM HOST WHERE UPPER(HOST_NAME) = UPPER(HOSTNAME)) THEN
                                INSERT INTO HOST (HOST_NAME, IS_DOMAIN_CONTROLLER, WORKAREA_PATH)
                                                VALUES(hostname, domain_controller_ind, path);
                END IF;

END//
DELIMITER ;

-- Dumping structure for function policydb.create_node_fun
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `create_node_fun`(node_name varchar(200), node_type_name varchar(20), node_description varchar(200),base_node_id int(11)) RETURNS int(11)
BEGIN
DECLARE node_type_id_in int;
DECLARE inserted_node_id int;
-- Insert in Node table
                                SELECT NODE_TYPE_ID INTO node_type_id_in FROM NODE_TYPE WHERE UPPER(NAME) = UPPER(node_type_name);
    INSERT INTO NODE (NODE_TYPE_ID, NAME, description) VALUES (node_type_id_in,node_name,node_description);
    SELECT MAX(NODE_ID) INTO inserted_node_id FROM NODE;
    -- create self assignment
                 INSERT INTO ASSIGNMENT (start_node_id, end_node_id, depth,assignment_path_id) VALUES (inserted_node_id, inserted_node_id,0,0);
    -- add assignment to the given base node
    IF base_node_id is not NULL THEN
      CALL create_assignment(base_node_id,inserted_node_id);
    END IF;
  RETURN inserted_node_id;
END//
DELIMITER ;

-- Dumping structure for procedure policydb.create_object_class
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_object_class`(object_class_name varchar(45), object_class_id_in int, class_object_description varchar(100))
BEGIN
-- Insert in object_class table
                IF not exists ( SELECT OBJECT_CLASS_ID FROM policydb.OBJECT_CLASS WHERE object_class_id = object_class_id_in ) THEN
                                INSERT INTO policydb.OBJECT_CLASS (object_class_id, name, description) values (object_class_id_in, object_class_name, class_object_description);
                END IF;
END//
DELIMITER ;

-- Dumping structure for procedure policydb.create_object_detail
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_object_detail`(object_id int, original_obj_node_id int, object_class_id_in int, host_id_in int, obj_path varchar(200), include_ascedants_in int(1), template_id_in int(11))
BEGIN
DECLARE new_object_id int;
  IF object_id is not null THEN
                IF exists ( SELECT node_id FROM NODE WHERE node_id = object_id) THEN
                                INSERT INTO OBJECT_DETAIL (object_node_id, original_node_id, object_class_id, host_id, path, include_ascedants, template_id)
                                                    VALUES (object_id, original_obj_node_id, object_class_id_in, host_id_in, obj_path, include_ascedants_in, template_id_in);
      SELECT MAX(OBJECT_NODE_ID) INTO new_object_id from object_detail;
                END IF;
  END IF;
END//
DELIMITER ;

-- Dumping structure for function policydb.create_ob_cont_spec
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `create_ob_cont_spec`(event_pattern_id_in varchar(50), node_type_in varchar(50),
                cont_spec_value_in varchar(50)) RETURNS int(11)
BEGIN
                declare cont_spec_id_var int;
                insert into ob_cont_spec (event_pattern_id, cont_spec_type, cont_spec_value)
                                values (event_pattern_id_in, get_node_type_id(node_type_in), cont_spec_value_in);
                select MAX(cont_spec_id) into cont_spec_id_var from ob_cont_spec;
RETURN cont_spec_id_var;
END//
DELIMITER ;

-- Dumping structure for function policydb.create_ob_obj_spec
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `create_ob_obj_spec`(event_pattern_id_in varchar(50), node_type_in varchar(50),
                obj_spec_value_in varchar(50)) RETURNS int(11)
BEGIN
                declare obj_spec_id_var int;
                insert into ob_obj_spec (event_pattern_id, obj_spec_type, obj_spec_value) values (event_pattern_id_in, get_node_type_id(node_type_in), obj_spec_value_in);
                select MAX(obj_spec_id) into obj_spec_id_var from ob_obj_spec;
RETURN obj_spec_id_var;
END//
DELIMITER ;

-- Dumping structure for function policydb.create_ob_op_spec
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `create_ob_op_spec`(event_pattern_id_in varchar(50), node_type_in varchar(50),
                op_spec_value_in varchar(50)) RETURNS int(11)
BEGIN
                declare op_spec_id_var int;
                insert into ob_op_spec (event_pattern_id, op_spec_event_id)
                                values (event_pattern_id_in, get_op_spec_type_id(op_spec_value_in));
                select MAX(op_spec_id) into op_spec_id_var from ob_op_spec;
RETURN op_spec_id_var;
END//
DELIMITER ;

-- Dumping structure for function policydb.create_ob_pc_spec
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `create_ob_pc_spec`(event_pattern_id_in varchar(50), node_type_in varchar(50),
                pc_spec_value_in varchar(50)) RETURNS int(11)
BEGIN
                declare pc_spec_id_var int;
                insert into ob_policy_spec (event_pattern_d, policy_spec_type, policy_spec_value) values (event_pattern_id_in, get_node_type_id(node_type_in), pc_spec_value_in);
                select MAX(policy_spec_id) into pc_spec_id_var from ob_policy_spec;
RETURN pc_spec_id_var;
END//
DELIMITER ;

-- Dumping structure for function policydb.create_ob_user_spec
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `create_ob_user_spec`(node_type_in varchar(50),
                user_spec_value_in varchar(50)) RETURNS int(11)
BEGIN
                declare user_spec_id_var int;
                insert into ob_user_spec (user_spec_type, user_spec_value) values (get_node_type_id(node_type_in), user_spec_value_in);
                select MAX(user_spec_id) into user_spec_id_var from ob_user_spec;
RETURN user_spec_id_var;
END//
DELIMITER ;

-- Dumping structure for function policydb.create_operand
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `create_operand`(operand_type varchar(200), op_num int(2),
                is_function tinyint(1), is_subgraph tinyint(1), is_compliment tinyint(2), expression varchar(300),
                expression_id varchar(50), action_id varchar(50), parent_function varchar(50)) RETURNS int(11)
BEGIN
DECLARE node_type_id_in int;
DECLARE inserted_operand_id int;
-- Insert in Node table
    insert into ob_operand (operand_type,operand_num,is_function,is_subgraph,is_compliment,
                                expression,expression_id,action_id,parent_function)
                values (get_operand_type_id(operand_type),op_num,is_function,is_subgraph,is_compliment,
    expression,expression_id,action_id,parent_function);

                SELECT MAX(operand_id) INTO inserted_operand_id FROM ob_operand;
  RETURN inserted_operand_id;
END//
DELIMITER ;

-- Dumping structure for procedure policydb.create_operation
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_operation`(operation_name varchar(45), object_class_id_in int)
BEGIN
-- Insert in object_class table
                IF not exists ( SELECT OPERATION_ID FROM policydb.OPERATION WHERE UPPER(NAME) = UPPER(operation_name) ) THEN
                                INSERT INTO policydb.OPERATION (operation_type_id, name, description, object_class_id) values (1, operation_name, operation_name, object_class_id_in);
                END IF;
END//
DELIMITER ;

-- Dumping structure for procedure policydb.create_opset
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_opset`(op_set_name varchar(45), operations varchar(1000))
BEGIN
DECLARE op_id int;
DECLARE new_node_id int;
DECLARE op_list varchar(1000);
                IF not exists ( SELECT NAME FROM policydb.NODE WHERE UPPER(NAME) = UPPER(op_set_name)) THEN
                                -- Insert in node table
                                INSERT INTO NODE (NODE_TYPE_ID, NAME, description) VALUES (7, op_set_name, op_set_name);
                                -- Insert in operation_set_details table
                                SELECT MAX(NODE_ID) INTO new_node_id FROM NODE;
                                SELECT formatCSL(operations) INTO op_list;
                                SET @separator = ',';
                                SET @separatorLength = CHAR_LENGTH(@separator);

                                WHILE operations != '' DO
                                                SET @currentValue = SUBSTRING_INDEX(operations, @separator, 1);
                                                SELECT get_operation_id(@currentValue) INTO op_id;
                                                INSERT INTO operation_set_details (operation_set_details_node_id, operation_id) VALUES (new_node_id, op_id);
                                                SET operations = SUBSTRING(operations, CHAR_LENGTH(@currentValue) + @separatorLength + 1);
                                END WHILE;

                END IF;

END//
DELIMITER ;

-- Dumping structure for procedure policydb.create_opset_detail
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_opset_detail`(opset_id int, operation varchar(50))
BEGIN
DECLARE op_id int;
                IF exists ( SELECT NODE_ID FROM NODE WHERE NODE_ID = opset_id) THEN
                                IF EXISTS (SELECT OPERATION_ID FROM OPERATION WHERE UPPER(NAME) = UPPER(operation)) THEN
                                                SELECT OPERATION_ID INTO op_id FROM OPERATION WHERE UPPER(NAME) = UPPER(operation);
                                                INSERT INTO OPERATION_SET_DETAILS (OPERATION_SET_DETAILS_NODE_ID, OPERATION_ID) VALUES (opset_id, op_id);
                                END IF;
                END IF;
END//
DELIMITER ;

-- Dumping structure for function policydb.create_user_detail_fun
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `create_user_detail_fun`(user_id int, user_name varchar(20), full_name varchar(50), user_password varchar(1000), email_address varchar(100),
                user_host_id INT(11), user_property_in VARCHAR(200)) RETURNS int(11)
BEGIN
-- Insert in USER_DETAIL table
                IF exists ( SELECT NODE_ID FROM NODE WHERE NODE_ID = user_id) THEN
                                                INSERT INTO USER_DETAIL (USER_NODE_ID,USER_NAME, FULL_NAME, PASSWORD, EMAIL_ADDRESS, HOST_ID) VALUES (user_id,user_name,full_name,user_password,email_address,user_host_id);
                                END IF;
    RETURN USER_ID;
END//
DELIMITER ;

-- Dumping structure for function policydb.create_user_fun
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `create_user_fun`(user_id int, user_name varchar(20), full_name varchar(50), user_description varchar(200), base_id int(11), user_password varchar(100), email_address varchar(100),
                user_host_id INT(11), user_property_in VARCHAR(200)) RETURNS int(11)
BEGIN
DECLARE new_node_id int(11);
                IF not exists ( SELECT NODE_ID FROM NODE WHERE NODE_ID = user_id) THEN
      -- Insert into NODE table
      SELECT create_node_fun(user_id, user_name, 'u', user_description, base_id) INTO new_node_id FROM DUAL;
                                                -- Insert into USER_DETAIL table
      INSERT INTO USER_DETAIL (USER_NODE_ID,USER_NAME, FULL_NAME, PASSWORD, EMAIL_ADDRESS, HOST_ID) VALUES (new_node_id,user_name,full_name,user_password,email_address,user_host_id);
                                END IF;
    RETURN USER_ID;
END//
DELIMITER ;

-- Dumping structure for procedure policydb.delete_assignment
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_assignment`(start_node int, end_node int)
BEGIN
DECLARE path_id int;
declare cnt int;
                IF exists ( SELECT NODE_ID FROM policydb.NODE WHERE NODE_ID = start_node) THEN
    IF exists ( SELECT NODE_ID FROM policydb.NODE WHERE NODE_ID = END_NODE)  THEN
                                IF start_node <> end_node THEN
        -- get path_id
        SELECT ASSIGNMENT_PATH_ID INTO path_id FROM ASSIGNMENT
        WHERE START_NODE_ID = start_node
        AND END_NODE_ID = end_node;

        IF path_id is not null THEN
          DELETE FROM ASSIGNMENT WHERE ASSIGNMENT_PATH_ID = path_id;
        ELSE
          DELETE FROM ASSIGNMENT
          WHERE START_NODE_ID = start_node
          AND END_NODE_ID = end_node;
        END IF;
        -- if end_node is not assigned to any other node, assign it to the connector
        SELECT COUNT(*) INTO cnt FROM ASSIGNMENT WHERE end_node_id = end_node
        AND depth = 1;
        IF cnt = 0 THEN
          CALL create_assignment(1,end_node);
        END IF;
                  END IF;
  END IF;
END IF;
END//
DELIMITER ;

-- Dumping structure for procedure policydb.delete_deny
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_deny`(deny_id_in int(11))
BEGIN
    DELETE FROM DENY WHERE deny_id = deny_id_in;
END//
DELIMITER ;

-- Dumping structure for procedure policydb.delete_property
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_property`(property_in varchar(200))
BEGIN
      DELETE FROM NODE_PROPERTY WHERE UPPER(property_key) = UPPER(property_in);
END//
DELIMITER ;

-- Dumping structure for table policydb.deny
CREATE TABLE IF NOT EXISTS `deny` (
  `deny_id` int(11) NOT NULL AUTO_INCREMENT,
  `deny_name` varchar(50) NOT NULL,
  `deny_type_id` int(11) NOT NULL,
  `user_attribute_id` int(11) DEFAULT NULL,
  `process_id` int(9) DEFAULT NULL,
  `is_intersection` int(1) DEFAULT NULL,
  PRIMARY KEY (`deny_id`),
  KEY `user_attribute_id_idx` (`user_attribute_id`),
  KEY `deny_user_attribute_id_idx` (`user_attribute_id`),
  KEY `deny_type_id_idx` (`deny_type_id`),
  KEY `idx_deny_deny_name` (`deny_name`),
  CONSTRAINT `fk_deny_type_id` FOREIGN KEY (`deny_type_id`) REFERENCES `deny_type` (`deny_type_id`),
  CONSTRAINT `fk_deny_user_attribute_node_id` FOREIGN KEY (`user_attribute_id`) REFERENCES `node` (`node_id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Deny';

-- Dumping data for table policydb.deny: ~22 rows (approximately)
/*!40000 ALTER TABLE `deny` DISABLE KEYS */;
INSERT INTO `deny` (`deny_id`, `deny_name`, `deny_type_id`, `user_attribute_id`, `process_id`, `is_intersection`) VALUES
	(101, 'deny-bob-employees_ssn', 1, 149, NULL, 1),
	(102, 'deny-bob-write-employees_salary', 1, 149, NULL, 1),
	(103, 'deny-bob-read-grp2-employees_salary', 1, 149, NULL, 1),
	(104, 'deny-bob-read-hr-employees_salary', 1, 149, NULL, 1),
	(105, 'deny-bob-employees_name', 1, 149, NULL, 1),
	(106, 'deny-bob-employees_phone', 1, 149, NULL, 1),
	(107, 'deny-alice-employees_ssn', 1, 164, NULL, 1),
	(108, 'deny-alice-write-employees_salary', 1, 164, NULL, 1),
	(109, 'deny-alice-read-Grp1-employees_salary', 1, 164, NULL, 1),
	(110, 'deny-alice-read-hr-employees_salary', 1, 164, NULL, 1),
	(111, 'deny-alice-employees_name', 1, 164, NULL, 1),
	(112, 'deny-alice-employees_phone', 1, 164, NULL, 1),
	(113, 'deny-dave-employees_ssn', 1, 170, NULL, 1),
	(114, 'deny-dave-rw-salary', 1, 170, NULL, 1),
	(115, 'deny-dave-write-employees_salary', 1, 170, NULL, 1),
	(116, 'deny-dave-employees_name', 1, 170, NULL, 1),
	(117, 'deny-dave-employees_phone', 1, 170, NULL, 1),
	(118, 'deny-charlie-employees_ssn', 1, 226, NULL, 1),
	(119, 'deny-charlie-rw-salary', 1, 226, NULL, 1),
	(120, 'deny-charlie-write-employees_salary', 1, 226, NULL, 1),
	(121, 'deny-charlie-employees_name', 1, 226, NULL, 1),
	(122, 'deny-charlie-employees_phone', 1, 226, NULL, 1);
/*!40000 ALTER TABLE `deny` ENABLE KEYS */;

-- Dumping structure for table policydb.deny_obj_attribute
CREATE TABLE IF NOT EXISTS `deny_obj_attribute` (
  `deny_id` int(11) NOT NULL,
  `object_attribute_id` int(11) NOT NULL,
  `object_complement` int(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`deny_id`,`object_attribute_id`),
  KEY `fk_deny_obj_attr` (`object_attribute_id`),
  CONSTRAINT `fk_deny_id` FOREIGN KEY (`deny_id`) REFERENCES `deny` (`deny_id`) ON DELETE CASCADE,
  CONSTRAINT `fk_deny_obj_attr` FOREIGN KEY (`object_attribute_id`) REFERENCES `node` (`node_id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table policydb.deny_obj_attribute: ~40 rows (approximately)
/*!40000 ALTER TABLE `deny_obj_attribute` DISABLE KEYS */;
INSERT INTO `deny_obj_attribute` (`deny_id`, `object_attribute_id`, `object_complement`) VALUES
	(101, 369, 0),
	(101, 405, 1),
	(102, 371, 0),
	(103, 371, 0),
	(103, 373, 0),
	(104, 371, 0),
	(104, 374, 0),
	(105, 368, 0),
	(105, 404, 1),
	(106, 370, 0),
	(106, 406, 1),
	(107, 369, 0),
	(107, 396, 1),
	(108, 371, 0),
	(109, 371, 0),
	(109, 372, 0),
	(110, 371, 0),
	(110, 374, 0),
	(111, 368, 0),
	(111, 395, 1),
	(112, 370, 0),
	(112, 397, 1),
	(113, 369, 0),
	(113, 423, 1),
	(114, 371, 0),
	(114, 425, 1),
	(115, 371, 0),
	(116, 368, 0),
	(116, 422, 1),
	(117, 370, 0),
	(117, 424, 1),
	(118, 369, 0),
	(118, 432, 1),
	(119, 371, 0),
	(119, 434, 1),
	(120, 371, 0),
	(121, 368, 0),
	(121, 431, 1),
	(122, 370, 0),
	(122, 433, 1);
/*!40000 ALTER TABLE `deny_obj_attribute` ENABLE KEYS */;

-- Dumping structure for table policydb.deny_operation
CREATE TABLE IF NOT EXISTS `deny_operation` (
  `deny_id` int(11) NOT NULL,
  `deny_operation_id` int(11) NOT NULL,
  PRIMARY KEY (`deny_id`,`deny_operation_id`),
  KEY `fk_deny_op_id` (`deny_operation_id`),
  CONSTRAINT `fk_deny_op_id` FOREIGN KEY (`deny_operation_id`) REFERENCES `operation` (`operation_id`) ON DELETE CASCADE,
  CONSTRAINT `fk_op_deny_id` FOREIGN KEY (`deny_id`) REFERENCES `deny` (`deny_id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table policydb.deny_operation: ~26 rows (approximately)
/*!40000 ALTER TABLE `deny_operation` DISABLE KEYS */;
INSERT INTO `deny_operation` (`deny_id`, `deny_operation_id`) VALUES
	(101, 6),
	(103, 6),
	(104, 6),
	(107, 6),
	(109, 6),
	(110, 6),
	(113, 6),
	(114, 6),
	(118, 6),
	(119, 6),
	(101, 7),
	(102, 7),
	(105, 7),
	(106, 7),
	(107, 7),
	(108, 7),
	(111, 7),
	(112, 7),
	(113, 7),
	(115, 7),
	(116, 7),
	(117, 7),
	(118, 7),
	(120, 7),
	(121, 7),
	(122, 7);
/*!40000 ALTER TABLE `deny_operation` ENABLE KEYS */;

-- Dumping structure for table policydb.deny_type
CREATE TABLE IF NOT EXISTS `deny_type` (
  `deny_type_id` int(11) NOT NULL,
  `name` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`deny_type_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Deny types';

-- Dumping data for table policydb.deny_type: ~3 rows (approximately)
/*!40000 ALTER TABLE `deny_type` DISABLE KEYS */;
INSERT INTO `deny_type` (`deny_type_id`, `name`) VALUES
	(1, 'user id'),
	(2, 'user set'),
	(3, 'process');
/*!40000 ALTER TABLE `deny_type` ENABLE KEYS */;

-- Dumping structure for table policydb.email_attachment
CREATE TABLE IF NOT EXISTS `email_attachment` (
  `object_node_id` int(11) NOT NULL,
  `attachment_node_id` int(11) NOT NULL,
  PRIMARY KEY (`object_node_id`,`attachment_node_id`),
  KEY `fk_att_node_id_idx` (`attachment_node_id`),
  CONSTRAINT `fk_att_node_id` FOREIGN KEY (`attachment_node_id`) REFERENCES `node` (`node_id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='stores email attachments\n';

-- Dumping data for table policydb.email_attachment: ~0 rows (approximately)
/*!40000 ALTER TABLE `email_attachment` DISABLE KEYS */;
/*!40000 ALTER TABLE `email_attachment` ENABLE KEYS */;

-- Dumping structure for table policydb.email_detail
CREATE TABLE IF NOT EXISTS `email_detail` (
  `object_node_id` int(11) NOT NULL,
  `sender` varchar(254) NOT NULL,
  `recipient` varchar(254) NOT NULL,
  `timestamp` datetime NOT NULL,
  `email_subject` varchar(200) NOT NULL,
  `user_node_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`object_node_id`),
  KEY `fk_email_dtl_user_node_id_idx` (`user_node_id`),
  CONSTRAINT `fk_email_dtl_user_node_id` FOREIGN KEY (`user_node_id`) REFERENCES `node` (`node_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_email_object_node_id` FOREIGN KEY (`object_node_id`) REFERENCES `object_detail` (`object_node_id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='table to hold information for emails.  sender, recipient, etc';

-- Dumping data for table policydb.email_detail: ~0 rows (approximately)
/*!40000 ALTER TABLE `email_detail` DISABLE KEYS */;
/*!40000 ALTER TABLE `email_detail` ENABLE KEYS */;

-- Dumping structure for function policydb.formatCSL
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `formatCSL`(
_text TEXT
) RETURNS text CHARSET utf8
    NO SQL
BEGIN

IF _text IS NULL THEN
    RETURN NULL;
END IF;

SET _text = TRIM(_text);

WHILE INSTR(_text, ' ,') DO
    SET _text = REPLACE(_text, ' ,', ',');
END WHILE;

WHILE INSTR(_text, ', ') DO
    SET _text = REPLACE(_text, ', ', ',');
END WHILE;

RETURN _text;

END//
DELIMITER ;

-- Dumping structure for function policydb.get_action_type_id
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `get_action_type_id`(action_type_in varchar(50)) RETURNS int(11)
BEGIN
DECLARE action_type_id_var int(11);
                SELECT action_type_id INTO action_type_id_var FROM ob_action_type
                WHERE UPPER(action_type_name) = UPPER(action_type_in);
RETURN action_type_id_var;
END//
DELIMITER ;

-- Dumping structure for function policydb.get_action_type_name
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `get_action_type_name`(action_type_id_in int(11)) RETURNS varchar(50) CHARSET utf8
BEGIN
DECLARE action_type_name_var varchar(50);
                SELECT action_type_name INTO action_type_name_var FROM ob_action_type
                WHERE UPPER(action_type_id) = UPPER(action_type_id_in);
RETURN action_type_name_var;
END//
DELIMITER ;

-- Dumping structure for function policydb.get_cond_type_id
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `get_cond_type_id`(cond_type_in varchar(50)) RETURNS int(11)
BEGIN
DECLARE cond_type_id_var int(11);
                SELECT cond_type_id INTO cond_type_id_var FROM ob_condition_type
                WHERE UPPER(cond_type) = UPPER(cond_type_in);
RETURN cond_type_id_var;
END//
DELIMITER ;

-- Dumping structure for function policydb.get_cond_type_name
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `get_cond_type_name`(cond_type_id_in int(11)) RETURNS varchar(50) CHARSET utf8
BEGIN
DECLARE cond_type_name_var varchar(50);
                SELECT cond_type INTO cond_type_name_var FROM ob_condition_type
                WHERE UPPER(cond_type_id) = UPPER(cond_type_id_in);
RETURN cond_type_name_var;
END//
DELIMITER ;

-- Dumping structure for function policydb.get_cont_spec_type_id
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `get_cont_spec_type_id`(cont_spec_type_name_in varchar(50)) RETURNS int(11)
BEGIN
DECLARE cont_spec_type_id_var int(11);
                SELECT cont_spec_type_id INTO cont_spec_type_id_var FROM ob_cont_spec_type
                WHERE UPPER(cont_spec_type) = UPPER(cont_spec_type_name_in);
RETURN cont_spec_type_id_var;
END//
DELIMITER ;

-- Dumping structure for procedure policydb.get_denied_ops
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_denied_ops`(process_id_in int(9), user_id int, obj_id int)
BEGIN
    SELECT get_operation_name(DENY_OPERATION_ID) FROM DENY_OPERATION DO, DENY D
    WHERE DO.DENY_ID = D.deny_id
    AND (IS_ASCENDANT_OF(user_id, D.USER_ATTRIBUTE_ID) OR ifnull(process_id_in, D.process_id)=D.process_id)
    AND is_object_in_deny(obj_id, D.DENY_ID, D.IS_INTERSECTION);
END//
DELIMITER ;

-- Dumping structure for function policydb.get_deny_type_id
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `get_deny_type_id`(deny_type_name_in varchar(45)) RETURNS int(11)
BEGIN
DECLARE deny_type_id_out INT;
                SELECT deny_type.deny_type_id INTO deny_type_id_out FROM policydb.deny_type
                WHERE UPPER(name) = UPPER(deny_type_name_in);
RETURN deny_type_id_out;
END//
DELIMITER ;

-- Dumping structure for function policydb.get_host_id
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `get_host_id`(hostname varchar(50)) RETURNS int(11)
BEGIN
DECLARE hostid int;
                SELECT HOST_ID INTO hostid FROM HOST WHERE UPPER(HOST_NAME) = UPPER(HOSTNAME);
RETURN hostid;
END//
DELIMITER ;

-- Dumping structure for function policydb.get_host_name
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `get_host_name`(host_id_in int(11)) RETURNS varchar(63) CHARSET utf8
BEGIN
DECLARE host_name_out varchar(63);
                SELECT host_name INTO host_name_out FROM HOST WHERE host_id = host_id_in;
RETURN host_name_out;
END//
DELIMITER ;

-- Dumping structure for function policydb.GET_HOST_PATH
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `GET_HOST_PATH`(host_id_in int(11)) RETURNS varchar(300) CHARSET utf8
BEGIN
DECLARE workarea_path_out varchar(300);
                SELECT workarea_path INTO workarea_path_out FROM HOST WHERE host_id = host_id_in;
RETURN workarea_path_out;
END//
DELIMITER ;

-- Dumping structure for function policydb.get_node_id
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `get_node_id`(node_name varchar(200), node_type varchar(50)) RETURNS int(11)
BEGIN
DECLARE node int;

SELECT DISTINCT NODE_ID
INTO node
FROM NODE
JOIN node_type
on node.node_type_id=node_type.node_type_id
WHERE UPPER(node.NAME) = UPPER(NODE_NAME)
AND UPPER(node_type.name) = UPPER(node_type);

RETURN node;
END//
DELIMITER ;

-- Dumping structure for function policydb.GET_NODE_NAME
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `GET_NODE_NAME`(node_id_in int(11)) RETURNS varchar(100) CHARSET utf8
BEGIN
DECLARE node_name varchar(100);

SELECT name INTO node_name FROM NODE WHERE node_id = node_id_in;
RETURN node_name;
END//
DELIMITER ;

-- Dumping structure for function policydb.GET_NODE_TYPE
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `GET_NODE_TYPE`(node_id_in int(11)) RETURNS int(11)
BEGIN
DECLARE type_id INT;
                SELECT node_type_id INTO type_id FROM NODE
                WHERE node_id = node_id_in;
RETURN type_id;
END//
DELIMITER ;

-- Dumping structure for function policydb.get_node_type_id
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `get_node_type_id`(node_type_in varchar(50)) RETURNS int(11)
BEGIN
DECLARE node_type_id_var int(11);
                SELECT node_type_id INTO node_type_id_var FROM node_type
                WHERE UPPER(name) = UPPER(node_type_in);
RETURN node_type_id_var;
END//
DELIMITER ;

-- Dumping structure for function policydb.get_node_type_name
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `get_node_type_name`(node_id_in int(11)) RETURNS varchar(50) CHARSET utf8
BEGIN
DECLARE type_name varchar(50);
                SELECT node_type.name INTO type_name FROM node, node_type
                WHERE node.node_type_id = node_type.node_type_id
    AND node_id = node_id_in;
RETURN type_name;
END//
DELIMITER ;

-- Dumping structure for function policydb.get_object_class_name
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `get_object_class_name`(obj_class_id_in int(11)) RETURNS varchar(50) CHARSET utf8
BEGIN
DECLARE class_name varchar(50);
                SELECT object_class.name INTO class_name FROM object_class
                WHERE object_class.object_class_id = obj_class_id_in;
RETURN class_name;
END//
DELIMITER ;

-- Dumping structure for function policydb.get_operand_type_id
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `get_operand_type_id`(operand_type_in varchar(50)) RETURNS int(11)
BEGIN
DECLARE operand_type_id_var int(11);
                SELECT operand_type_id INTO operand_type_id_var FROM ob_operand_type
                WHERE UPPER(operand_type) = UPPER(operand_type_in);
RETURN operand_type_id_var;
END//
DELIMITER ;

-- Dumping structure for function policydb.get_operand_type_name
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `get_operand_type_name`(operand_type_id_in int(11)) RETURNS varchar(50) CHARSET utf8
BEGIN
DECLARE operand_type_name_var varchar(11);
                SELECT operand_type INTO operand_type_name_var FROM ob_operand_type
                WHERE UPPER(operand_type_id) = UPPER(operand_type_id_in);
RETURN operand_type_name_var;
END//
DELIMITER ;

-- Dumping structure for function policydb.get_operations
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `get_operations`(opset_id_in int) RETURNS varchar(500) CHARSET utf8
BEGIN
DECLARE ops_of_opset VARCHAR(500);
                SELECT group_concat(o.name SEPARATOR ',') into ops_of_opset
                from operation_set_details os, operation o
                where os.operation_id = o.operation_id
                GROUP BY os.operation_set_details_node_id
                having os.operation_set_details_node_id = opset_id_in;

                RETURN ops_of_opset;
END//
DELIMITER ;

-- Dumping structure for function policydb.get_operation_id
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `get_operation_id`(operation_name varchar(45)) RETURNS int(11)
BEGIN
DECLARE op_id INT;
                SELECT operation_id INTO op_id FROM policydb.operation
                WHERE UPPER(name) = UPPER(operation_name);
RETURN op_id;
END//
DELIMITER ;

-- Dumping structure for function policydb.get_operation_ids
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `get_operation_ids`(opset_id_in int) RETURNS varchar(500) CHARSET utf8
BEGIN
DECLARE ops_of_opset VARCHAR(500);
                SELECT group_concat(o.operation_id SEPARATOR ',') into ops_of_opset
                from operation_set_details os, operation o
                where os.operation_id = o.operation_id
                GROUP BY os.operation_set_details_node_id
                having os.operation_set_details_node_id = opset_id_in;

                RETURN ops_of_opset;
END//
DELIMITER ;

-- Dumping structure for function policydb.get_operation_name
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `get_operation_name`(operation_id_in int(11)) RETURNS varchar(45) CHARSET utf8
BEGIN
DECLARE op_name varchar(45);
                SELECT name INTO op_name FROM policydb.operation
                WHERE UPPER(operation_id) = UPPER(operation_id_in);
RETURN op_name;
END//
DELIMITER ;

-- Dumping structure for function policydb.get_op_spec_type_id
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `get_op_spec_type_id`(op_spec_type_name_in varchar(50)) RETURNS int(11)
BEGIN
DECLARE op_spec_type_id_var int(11);
                SELECT event_id INTO op_spec_type_id_var FROM ob_op_spec_events
                WHERE UPPER(event_name) = UPPER(op_spec_type_name_in);
RETURN op_spec_type_id_var;
END//
DELIMITER ;

-- Dumping structure for function policydb.get_user_spec_type_id
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `get_user_spec_type_id`(user_spec_type_name_in varchar(50)) RETURNS int(11)
BEGIN
DECLARE user_spec_type_id_var int(11);
                SELECT user_spec_type_id INTO user_spec_type_id_var FROM ob_user_spec_type
                WHERE UPPER(user_spec_type) = UPPER(user_spec_type_name_in);
RETURN user_spec_type_id_var;
END//
DELIMITER ;

-- Dumping structure for table policydb.host
CREATE TABLE IF NOT EXISTS `host` (
  `host_id` int(11) NOT NULL AUTO_INCREMENT,
  `host_name` varchar(63) NOT NULL,
  `workarea_path` varchar(300) NOT NULL,
  PRIMARY KEY (`host_id`),
  KEY `idx_host_host_name` (`host_name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='host machine info';

-- Dumping data for table policydb.host: ~2 rows (approximately)
/*!40000 ALTER TABLE `host` DISABLE KEYS */;
INSERT INTO `host` (`host_id`, `host_name`, `workarea_path`) VALUES
	(1, 'Dummy_host', 'dummy'),
	(100, 'P860658', 'C:\\PMWorkarea');
/*!40000 ALTER TABLE `host` ENABLE KEYS */;

-- Dumping structure for function policydb.isValidCSL
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `isValidCSL`(
_textIn TEXT
) RETURNS tinyint(1)
    NO SQL
BEGIN

RETURN _textIn IS NOT NULL && (_textIn = '' || _textIn REGEXP '^([1-9][0-9]{2},)*[1-9][0-9]{2}?$');

END//
DELIMITER ;

-- Dumping structure for function policydb.is_accessible
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `is_accessible`(ua_id_in int(11), oa_id_in int(11)) RETURNS tinyint(1)
BEGIN
DECLARE is_accessible boolean;
DECLARE policy_id_in int;
DECLARE done boolean DEFAULT FALSE;
DECLARE policies CURSOR FOR select a.start_node_id as policy_id from assignment a where get_node_type(a.start_node_id) = 2 and end_node_id = oa_id_in;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
  OPEN policies;

  check_loop: LOOP
    FETCH policies INTO policy_id_in;
    IF done THEN
      LEAVE check_loop;
    END IF;
    SELECT CASE WHEN COUNT(*) > 0 THEN TRUE ELSE FALSE END into is_accessible
    from association as a
    where is_member(ua_id_in, a.ua_id)
    and is_member(oa_id_in, a.oa_id)
    and is_member(ua_id_in, policy_id_in);
    IF not is_accessible then
                                leave check_loop;
                END IF;
  END LOOP;

  CLOSE policies;
RETURN is_accessible;
END//
DELIMITER ;

-- Dumping structure for function policydb.is_ascendant_of
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `is_ascendant_of`(ascendant_node_id int,descendant_node_id int) RETURNS tinyint(4)
BEGIN
DECLARE cnt INT;

SELECT COUNT(*) INTO cnt FROM ASSIGNMENT A
WHERE A.START_NODE_ID = descendant_node_id
AND A.END_NODE_ID = ascendant_node_id;

IF cnt > 0 THEN
  RETURN TRUE;
ELSE RETURN FALSE;
END IF;
END//
DELIMITER ;

-- Dumping structure for function policydb.is_member
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `is_member`(member_id_in int(11), container_id_in int(11)) RETURNS tinyint(1)
BEGIN
DECLARE is_member boolean;
                if member_id_in = container_id_in then
    return true;
    end if;
                SELECT CASE WHEN COUNT(*) > 0 THEN TRUE ELSE FALSE END into is_member
    from assignment
    where start_node_id = container_id_in
    and end_node_id = member_id_in;
    return is_member;
END//
DELIMITER ;

-- Dumping structure for function policydb.is_object_in_deny
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `is_object_in_deny`(obj_id int,deny_id_in int, is_intersection int) RETURNS tinyint(1)
BEGIN
DECLARE row_cnt INT;
DECLARE deny_obj_cnt INT;
SELECT COUNT(*) INTO deny_obj_cnt
FROM DENY_OBJ_ATTRIBUTE
WHERE DENY_ID = deny_id_in;
IF is_intersection THEN
    SELECT COUNT(*) INTO row_cnt FROM DENY_OBJ_ATTRIBUTE D
    WHERE D.deny_id = deny_id_in
    -- AND is_ascendant_of(obj_id,D.object_attribute_id) AND NOT object_complement;
    AND ((is_ascendant_of(obj_id,D.object_attribute_id) AND NOT object_complement)
                OR (!is_ascendant_of(obj_id,D.object_attribute_id) AND object_complement));
    IF row_cnt = 0 OR row_cnt < deny_obj_cnt THEN
      RETURN FALSE;
    ELSE
      RETURN TRUE;
    END IF;
ELSE  -- UNION
    SELECT COUNT(*) INTO row_cnt FROM DENY_OBJ_ATTRIBUTE D
    WHERE D.deny_id = deny_id_in
    AND ((is_ascendant_of(obj_id,D.object_attribute_id) AND NOT object_complement)
    OR (!is_ascendant_of(obj_id,D.object_attribute_id) AND object_complement));
    IF row_cnt > 0 THEN
      RETURN TRUE;
    ELSE
      RETURN FALSE;
    END IF;
END IF;
END//
DELIMITER ;

-- Dumping structure for table policydb.keystore
CREATE TABLE IF NOT EXISTS `keystore` (
  `host_id` int(11) NOT NULL AUTO_INCREMENT,
  `user_node_id` int(11) NOT NULL,
  `keystore_path` varchar(300) DEFAULT NULL,
  `truststore_path` varchar(300) DEFAULT NULL,
  PRIMARY KEY (`host_id`,`user_node_id`),
  KEY `user_id_idx` (`user_node_id`),
  CONSTRAINT `fk_host_id` FOREIGN KEY (`host_id`) REFERENCES `host` (`host_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_node_id` FOREIGN KEY (`user_node_id`) REFERENCES `node` (`node_id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='host machine info';

-- Dumping data for table policydb.keystore: ~7 rows (approximately)
/*!40000 ALTER TABLE `keystore` DISABLE KEYS */;
INSERT INTO `keystore` (`host_id`, `user_node_id`, `keystore_path`, `truststore_path`) VALUES
	(100, 4, 'C:\\PM\\keystores\\superKeystore', 'C:\\PM\\keystores\\clientTruststore'),
	(100, 149, 'C:\\PM\\keystores\\bobKeystore', 'C:\\PM\\keystores\\clientTruststore'),
	(100, 156, 'C:\\PM\\keystores\\katieKeystore', 'C:\\PM\\keystores\\clientTruststore'),
	(100, 164, 'C:\\PM\\keystores\\aliceKeystore', 'C:\\PM\\keystores\\clientTruststore'),
	(100, 170, 'C:\\PM\\keystores\\daveKeystore', 'C:\\PM\\keystores\\clientTruststore'),
	(100, 226, 'C:\\PM\\keystores\\charlieKeystore', 'C:\\PM\\keystores\\clientTruststore'),
	(100, 303, 'C:\\PM\\keystores\\exporterKeystore', 'C:\\PM\\keystores\\clientTruststore');
/*!40000 ALTER TABLE `keystore` ENABLE KEYS */;

-- Dumping structure for table policydb.node
CREATE TABLE IF NOT EXISTS `node` (
  `node_id` int(11) NOT NULL AUTO_INCREMENT,
  `node_type_id` int(11) NOT NULL,
  `name` varchar(200) DEFAULT NULL,
  `description` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`node_id`),
  KEY `node_type_id_idx` (`node_type_id`),
  CONSTRAINT `fk_node_type_id` FOREIGN KEY (`node_type_id`) REFERENCES `node_type` (`node_type_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='This table contains all the nodes in the graph';

-- Dumping data for table policydb.node: ~391 rows (approximately)
/*!40000 ALTER TABLE `node` DISABLE KEYS */;
INSERT INTO `node` (`node_id`, `node_type_id`, `name`, `description`) VALUES
	(1, 1, 'PM', ''),
	(2, 2, 'admin', ''),
	(3, 3, 'superAdmin', ''),
	(4, 4, 'super', ''),
	(5, 5, 'everything', 'Object mapped to all entities.'),
	(7, 7, 'all ops', 'Op set containing all operations'),
	(101, 2, 'MLS', 'MLS'),
	(102, 2, 'DAC', 'DAC'),
	(103, 2, 'RBAC', 'RBAC'),
	(104, 2, 'Confine', 'Confine'),
	(105, 3, 'Secret', 'Secret'),
	(106, 5, 'S_TS', 'S_TS'),
	(107, 3, 'Acct Mgr', 'Acct Mgr'),
	(108, 3, 'Acct Repr', 'Acct Repr'),
	(109, 3, 'Nurse', 'Nurse'),
	(110, 3, 'Adm Clerk', 'Adm Clerk'),
	(111, 3, 'DAC uattrs', 'DAC uattrs'),
	(112, 5, 'witems', 'witems'),
	(113, 5, 'katie home', 'katie home'),
	(114, 5, 'inboxes', 'inboxes'),
	(115, 5, 'charlie home', 'charlie home'),
	(116, 5, 'bob home', 'bob home'),
	(117, 5, 'alice home', 'alice home'),
	(118, 6, 'katie home rep', 'katie home rep'),
	(119, 6, 'inboxes rep', 'inboxes rep'),
	(120, 6, 'charlie home rep', 'charlie home rep'),
	(121, 6, 'bob home rep', 'bob home rep'),
	(122, 6, 'alice home rep', 'alice home rep'),
	(123, 5, 'Acct Recs', 'Acct Recs'),
	(124, 5, 'Today', 'Today'),
	(125, 5, 'Populated Forms', 'Populated Forms'),
	(126, 6, 'DAC uattrs rep', 'DAC uattrs rep'),
	(127, 5, 'outboxes', 'outboxes'),
	(128, 5, 'CMRecs', 'CMRecs'),
	(129, 3, 'Accts Pbl', 'Accts Pbl'),
	(130, 3, 'Contracting', 'Contracting'),
	(131, 3, 'Accts Rcv', 'Accts Rcv'),
	(132, 3, 'Acquisition', 'Acquisition'),
	(133, 3, 'Secretary', 'Secretary'),
	(134, 3, 'Intern', 'Intern'),
	(135, 5, 'Records', 'Records'),
	(136, 5, 'Acct Columns', 'Acct Columns'),
	(137, 5, 'CMR Columns', 'CMR Columns'),
	(138, 6, 'Acct Columns rep', 'Acct Columns rep'),
	(139, 6, 'CMR Columns rep', 'CMR Columns rep'),
	(140, 5, 'Accts Pbl witems', 'Accts Pbl witems'),
	(141, 5, 'Contracting witems', 'Contracting witems'),
	(142, 5, 'Accts Rcv witems', 'Accts Rcv witems'),
	(143, 5, 'Approved Orders', 'Approved Orders'),
	(144, 5, 'Forms', 'Forms'),
	(145, 5, 'Med Records', 'Med Records'),
	(146, 3, 'OU users', 'OU users'),
	(147, 5, 'OU messages', 'OU messages'),
	(148, 3, 'Top secret', 'Top secret'),
	(149, 4, 'bob', 'bob'),
	(150, 7, '033A0D1C', '033A0D1C'),
	(151, 7, 'C2CF01CD', 'C2CF01CD'),
	(152, 7, '20DE6FEB', '20DE6FEB'),
	(153, 5, 'S', 'S'),
	(154, 5, 'TS', 'TS'),
	(155, 7, '78E5ABCE', '78E5ABCE'),
	(156, 4, 'katie', 'katie'),
	(157, 7, '5791E4F9', '5791E4F9'),
	(158, 7, '0F404D67', '0F404D67'),
	(159, 7, '47CE9638', '47CE9638'),
	(160, 7, '8B31D32C', '8B31D32C'),
	(161, 7, '3E5AF6F1', '3E5AF6F1'),
	(162, 7, 'F6CCB92B', 'F6CCB92B'),
	(163, 7, '581A03EB', '581A03EB'),
	(164, 4, 'alice', 'alice'),
	(165, 7, '20B9C61C', '20B9C61C'),
	(166, 7, 'CAF1CC9C', 'CAF1CC9C'),
	(167, 7, '0AA431B8', '0AA431B8'),
	(168, 7, 'EA3DBB84', 'EA3DBB84'),
	(169, 7, 'AD179DE1', 'AD179DE1'),
	(170, 4, 'dave', 'dave'),
	(171, 7, '4EBE4892', '4EBE4892'),
	(172, 7, '6BB7EBA7', '6BB7EBA7'),
	(173, 7, 'D7B13327', 'D7B13327'),
	(174, 7, '4D72BCE2', '4D72BCE2'),
	(175, 7, '6523425D', '6523425D'),
	(176, 7, 'D36773F1', 'D36773F1'),
	(177, 7, '7F91A035', '7F91A035'),
	(178, 7, '830C202D', '830C202D'),
	(179, 7, 'FEBB2C43', 'FEBB2C43'),
	(180, 7, '6121EE87', '6121EE87'),
	(181, 7, '02CDCAC2', '02CDCAC2'),
	(182, 7, '46A18983', '46A18983'),
	(183, 7, '56B1E529', '56B1E529'),
	(184, 7, '09C9B277', '09C9B277'),
	(185, 7, '1DDA9933', '1DDA9933'),
	(186, 7, 'C5F57D1C', 'C5F57D1C'),
	(187, 7, 'AD27716D', 'AD27716D'),
	(188, 3, 'David', 'David'),
	(189, 3, 'Katherine', 'Katherine'),
	(190, 3, 'Charles', 'Charles'),
	(191, 3, 'Robert', 'Robert'),
	(192, 3, 'Alicia', 'Alicia'),
	(193, 3, 'Exporter', 'Exporter'),
	(194, 7, 'D31DD406', 'D31DD406'),
	(195, 7, 'A1F3F938', 'A1F3F938'),
	(196, 7, 'E963428D', 'E963428D'),
	(197, 7, '0B4407A1', '0B4407A1'),
	(198, 7, 'ACD130E8', 'ACD130E8'),
	(199, 7, 'A0BD0694', 'A0BD0694'),
	(200, 7, '94C9DF0B', '94C9DF0B'),
	(201, 5, '12345678', '12345678'),
	(202, 5, 'katie witems', 'katie witems'),
	(203, 5, 'charlie witems', 'charlie witems'),
	(204, 5, 'bob witems', 'bob witems'),
	(205, 5, 'alice witems', 'alice witems'),
	(206, 7, '73F33EBB', '73F33EBB'),
	(207, 5, 'katie INBOX', 'katie INBOX'),
	(208, 5, 'dave INBOX', 'dave INBOX'),
	(209, 5, 'dave wINBOX', 'dave wINBOX'),
	(210, 7, '87654321', '87654321'),
	(211, 7, '97654321', '97654321'),
	(212, 5, 'OU inboxes', 'OU inboxes'),
	(213, 5, 'SharedContainer', 'SharedContainer'),
	(214, 7, '663A07F7', '663A07F7'),
	(215, 5, 'Bob Med Records', 'Bob Med Records'),
	(216, 7, '9F00F0A0', '9F00F0A0'),
	(217, 5, 'Proposals', 'Proposals'),
	(218, 5, 'Alice Med Records', 'Alice Med Records'),
	(219, 7, 'B254FA19', 'B254FA19'),
	(220, 7, '12345679', '12345679'),
	(221, 7, '15E69BE1', '15E69BE1'),
	(222, 7, 'EE568F88', 'EE568F88'),
	(223, 7, '60507C01', '60507C01'),
	(224, 5, 'OU outboxes', 'OU outboxes'),
	(225, 5, 'katie OUTBOX', 'katie OUTBOX'),
	(226, 4, 'charlie', 'charlie'),
	(227, 7, '16A11DA2', '16A11DA2'),
	(228, 7, '18E9B035', '18E9B035'),
	(229, 7, 'B3FD2394', 'B3FD2394'),
	(230, 7, 'D6F23181', 'D6F23181'),
	(231, 7, 'D7048A1C', 'D7048A1C'),
	(232, 3, 'Doctor', 'Doctor'),
	(233, 7, '63C0F4E0', '63C0F4E0'),
	(234, 7, '17D90B49', '17D90B49'),
	(235, 7, '945358F8', '945358F8'),
	(236, 7, 'F14BB514', 'F14BB514'),
	(237, 7, '011D8B80', '011D8B80'),
	(238, 7, '24214879', '24214879'),
	(239, 7, '690D3A30', '690D3A30'),
	(240, 7, 'D1687D6A', 'D1687D6A'),
	(241, 7, 'C74AAC05', 'C74AAC05'),
	(242, 5, 'AcctAddr', 'AcctAddr'),
	(243, 5, 'AcctSsn', 'AcctSsn'),
	(244, 5, 'AcctName', 'AcctName'),
	(245, 5, 'AcctNum', 'AcctNum'),
	(246, 5, 'PatDrafts', 'PatDrafts'),
	(247, 5, 'PatTreatment', 'PatTreatment'),
	(248, 5, 'PatDiag', 'PatDiag'),
	(249, 5, 'PatSymptoms', 'PatSymptoms'),
	(250, 5, 'PatAllergies', 'PatAllergies'),
	(251, 5, 'PatHistory', 'PatHistory'),
	(252, 5, 'PatBio', 'PatBio'),
	(253, 5, 'PatId', 'PatId'),
	(254, 6, 'poForm', 'poForm'),
	(255, 6, 'mrec33', 'mrec33'),
	(256, 6, 'mrec22', 'mrec22'),
	(257, 6, 'mrec11', 'mrec11'),
	(258, 6, 'mrec3', 'mrec3'),
	(259, 6, 'mrec2', 'mrec2'),
	(260, 6, 'mrec1', 'mrec1'),
	(261, 6, 'mrec4', 'mrec4'),
	(262, 6, 'mrec5', 'mrec5'),
	(263, 7, '5C59BE03', '5C59BE03'),
	(264, 7, '359268CA', '359268CA'),
	(265, 7, 'EBBE3FE1', 'EBBE3FE1'),
	(266, 7, '61FAF91D', '61FAF91D'),
	(267, 7, '61538005', '61538005'),
	(268, 7, '7F85FF96', '7F85FF96'),
	(269, 7, '11AE564E', '11AE564E'),
	(270, 7, '39D1BFC8', '39D1BFC8'),
	(271, 7, '708FA799', '708FA799'),
	(272, 7, 'D041A88C', 'D041A88C'),
	(273, 7, 'E2327C18', 'E2327C18'),
	(274, 7, 'B270223E', 'B270223E'),
	(275, 7, 'BCDE77D3', 'BCDE77D3'),
	(276, 7, '94E4DFD4', '94E4DFD4'),
	(277, 7, 'BBD10825', 'BBD10825'),
	(278, 7, 'D827BFC6', 'D827BFC6'),
	(279, 7, 'B12DFFDD', 'B12DFFDD'),
	(280, 7, 'FE4A7080', 'FE4A7080'),
	(281, 7, '504C2DFC', '504C2DFC'),
	(282, 7, '19C91A87', '19C91A87'),
	(283, 7, 'F7D14F3F', 'F7D14F3F'),
	(284, 7, '9079F508', '9079F508'),
	(285, 7, '79E12419', '79E12419'),
	(286, 7, 'BB2F4148', 'BB2F4148'),
	(287, 7, 'F8891E54', 'F8891E54'),
	(288, 7, '14D0E012', '14D0E012'),
	(289, 7, '971B7214', '971B7214'),
	(290, 7, '15068202', '15068202'),
	(291, 7, '1FAC2FCC', '1FAC2FCC'),
	(292, 7, '87499089', '87499089'),
	(293, 7, '1698910F', '1698910F'),
	(294, 7, 'BDB987A8', 'BDB987A8'),
	(295, 7, '46C6EC2B', '46C6EC2B'),
	(296, 7, '05792340', '05792340'),
	(297, 7, '08BAB037', '08BAB037'),
	(298, 7, 'B219B313', 'B219B313'),
	(299, 7, 'B4F11AFD', 'B4F11AFD'),
	(300, 7, '8DE0EB23', '8DE0EB23'),
	(301, 7, 'A4ADADDD', 'A4ADADDD'),
	(302, 7, '4FA145EA', '4FA145EA'),
	(303, 4, 'exporter', 'exporter'),
	(304, 6, 'FC15B612', 'FC15B612'),
	(305, 6, 'C9CFE6DE', 'C9CFE6DE'),
	(306, 6, '30A44CB5', '30A44CB5'),
	(307, 6, '237D8FA7', '237D8FA7'),
	(308, 5, 'katie wINBOX', 'katie wINBOX'),
	(309, 5, 'alice INBOX', 'alice INBOX'),
	(310, 5, 'charlie INBOX', 'charlie INBOX'),
	(311, 5, 'bob INBOX', 'bob INBOX'),
	(312, 5, 'Charlie recipes', 'Charlie recipes'),
	(313, 5, '8E094FF2', '8E094FF2'),
	(314, 6, 'prop1', 'prop1'),
	(315, 5, '8B54E24B', '8B54E24B'),
	(316, 5, 'charlie OUTBOX', 'charlie OUTBOX'),
	(317, 5, 'bob OUTBOX', 'bob OUTBOX'),
	(318, 5, 'alice OUTBOX', 'alice OUTBOX'),
	(319, 7, 'E664D534', 'E664D534'),
	(320, 7, '6D223F10', '6D223F10'),
	(321, 7, 'AF698BEF', 'AF698BEF'),
	(322, 7, '6DB75F58', '6DB75F58'),
	(323, 7, 'ADFA7E54', 'ADFA7E54'),
	(324, 7, '53811547', '53811547'),
	(325, 5, 'PatHistoryDrafts', 'PatHistoryDrafts'),
	(326, 5, 'PatDiagDrafts', 'PatDiagDrafts'),
	(327, 5, 'PatTreatmentDrafts', 'PatTreatmentDrafts'),
	(328, 6, 'E4B48FB1', 'E4B48FB1'),
	(329, 6, 'E294203A', 'E294203A'),
	(330, 6, '53C1525D', '53C1525D'),
	(331, 6, 'D9971E4A', 'D9971E4A'),
	(332, 6, 'd4cb3401', 'd4cb3401'),
	(333, 6, '33EAA2DF', '33EAA2DF'),
	(334, 6, 'FB40D908', 'FB40D908'),
	(335, 6, '933161a3', '933161a3'),
	(336, 6, 'E9663596', 'E9663596'),
	(337, 6, '7002DA15', '7002DA15'),
	(338, 6, '6411940B', '6411940B'),
	(339, 6, 'FE2CA75B', 'FE2CA75B'),
	(340, 6, '9ce0521d', '9ce0521d'),
	(341, 6, '39FA5BA8', '39FA5BA8'),
	(342, 6, '4902BD22', '4902BD22'),
	(343, 6, '91c1aa7f', '91c1aa7f'),
	(344, 6, '58423CA7', '58423CA7'),
	(345, 6, '9435D63E', '9435D63E'),
	(346, 5, 'alice wINBOX', 'alice wINBOX'),
	(347, 5, 'charlie wINBOX', 'charlie wINBOX'),
	(348, 5, 'bob wINBOX', 'bob wINBOX'),
	(349, 6, 'Italian recipes', 'Italian recipes'),
	(350, 6, 'Chili recipes', 'Chili recipes'),
	(351, 5, '8E094FF2-Drafts', '8E094FF2-Drafts'),
	(352, 5, '8E094FF2-Treatments', '8E094FF2-Treatments'),
	(353, 5, '8E094FF2-History', '8E094FF2-History'),
	(354, 5, '8E094FF2-Diagnoses', '8E094FF2-Diagnoses'),
	(355, 5, '8B54E24B-Treatments', '8B54E24B-Treatments'),
	(356, 5, '8B54E24B-History', '8B54E24B-History'),
	(357, 5, '8B54E24B-Diagnoses', '8B54E24B-Diagnoses'),
	(358, 5, '8B54E24B-Drafts', '8B54E24B-Drafts'),
	(359, 5, '8E094FF2-DraftHistory', '8E094FF2-DraftHistory'),
	(360, 5, '8E094FF2-DraftDiagnoses', '8E094FF2-DraftDiagnoses'),
	(361, 5, '8E094FF2-DraftTreatments', '8E094FF2-DraftTreatments'),
	(362, 5, '8B54E24B-DraftTreatments', '8B54E24B-DraftTreatments'),
	(363, 5, '8B54E24B-DraftHistory', '8B54E24B-DraftHistory'),
	(364, 5, '8B54E24B-DraftDiagnoses', '8B54E24B-DraftDiagnoses'),
	(365, 2, 'emp_rec', 'emp_rec'),
	(366, 5, 'emp_rec', 'emp_rec'),
	(367, 5, 'employees', 'employees'),
	(368, 5, 'employees_name', 'employees_name'),
	(369, 5, 'employees_ssn', 'employees_ssn'),
	(370, 5, 'employees_phone', 'employees_phone'),
	(371, 5, 'employees_salary', 'employees_salary'),
	(372, 5, 'Grp1 Records', 'Grp1 Records'),
	(373, 5, 'Grp2 Records', 'Grp2 Records'),
	(374, 5, 'HR Records', 'HR Records'),
	(375, 6, 'emp_rec rep', 'emp_rec rep'),
	(376, 3, 'emp_rec admins', 'emp_rec admins'),
	(377, 3, 'Grp1', 'Grp1'),
	(378, 3, 'Grp2', 'Grp2'),
	(379, 3, 'Grp1Mgr', 'Grp1Mgr'),
	(380, 3, 'Grp2Mgr', 'Grp2Mgr'),
	(381, 3, 'HR', 'HR'),
	(382, 7, 's_emp_rec', 's_emp_rec'),
	(383, 7, 's_grp1', 's_grp1'),
	(384, 7, 's_grp2', 's_grp2'),
	(385, 7, 's_emp_rec_admins', 's_emp_rec_admins'),
	(386, 7, 's_name', 's_name'),
	(387, 7, 's_name1', 's_name1'),
	(388, 7, 's_phone', 's_phone'),
	(389, 7, 's_phone1', 's_phone1'),
	(390, 7, 's_salary', 's_salary'),
	(391, 7, 's_salary1', 's_salary1'),
	(392, 7, 's_ssn', 's_ssn'),
	(393, 7, 's_ssn1', 's_ssn1'),
	(394, 5, 'cdad6137-dc30-481b-9948-741133d8b2d7', 'cdad6137-dc30-481b-9948-741133d8b2d7'),
	(395, 5, 'cdad6137-dc30-481b-9948-741133d8b2d7_employees_name', 'cdad6137-dc30-481b-9948-741133d8b2d7_employees_name'),
	(396, 5, 'cdad6137-dc30-481b-9948-741133d8b2d7_employees_ssn', 'cdad6137-dc30-481b-9948-741133d8b2d7_employees_ssn'),
	(397, 5, 'cdad6137-dc30-481b-9948-741133d8b2d7_employees_phone', 'cdad6137-dc30-481b-9948-741133d8b2d7_employees_phone'),
	(398, 5, 'cdad6137-dc30-481b-9948-741133d8b2d7_employees_salary', 'cdad6137-dc30-481b-9948-741133d8b2d7_employees_salary'),
	(399, 6, '4ab63bb5', '4ab63bb5'),
	(400, 6, 'd16173ff', 'd16173ff'),
	(401, 6, 'bd15c30a', 'bd15c30a'),
	(402, 6, 'bd674751', 'bd674751'),
	(403, 5, '0d732faf-0c99-4341-a2ed-b7fb64b57ef0', '0d732faf-0c99-4341-a2ed-b7fb64b57ef0'),
	(404, 5, '0d732faf-0c99-4341-a2ed-b7fb64b57ef0_employees_name', '0d732faf-0c99-4341-a2ed-b7fb64b57ef0_employees_name'),
	(405, 5, '0d732faf-0c99-4341-a2ed-b7fb64b57ef0_employees_ssn', '0d732faf-0c99-4341-a2ed-b7fb64b57ef0_employees_ssn'),
	(406, 5, '0d732faf-0c99-4341-a2ed-b7fb64b57ef0_employees_phone', '0d732faf-0c99-4341-a2ed-b7fb64b57ef0_employees_phone'),
	(407, 5, '0d732faf-0c99-4341-a2ed-b7fb64b57ef0_employees_salary', '0d732faf-0c99-4341-a2ed-b7fb64b57ef0_employees_salary'),
	(408, 6, 'e0c10b05', 'e0c10b05'),
	(409, 6, 'ffe5d5a2', 'ffe5d5a2'),
	(410, 6, '0da6e166', '0da6e166'),
	(411, 6, '84f4b677', '84f4b677'),
	(412, 5, 'e9d29540-c7e3-455f-8a3c-7f60d9b913b1', 'e9d29540-c7e3-455f-8a3c-7f60d9b913b1'),
	(413, 5, 'e9d29540-c7e3-455f-8a3c-7f60d9b913b1_employees_name', 'e9d29540-c7e3-455f-8a3c-7f60d9b913b1_employees_name'),
	(414, 5, 'e9d29540-c7e3-455f-8a3c-7f60d9b913b1_employees_ssn', 'e9d29540-c7e3-455f-8a3c-7f60d9b913b1_employees_ssn'),
	(415, 5, 'e9d29540-c7e3-455f-8a3c-7f60d9b913b1_employees_phone', 'e9d29540-c7e3-455f-8a3c-7f60d9b913b1_employees_phone'),
	(416, 5, 'e9d29540-c7e3-455f-8a3c-7f60d9b913b1_employees_salary', 'e9d29540-c7e3-455f-8a3c-7f60d9b913b1_employees_salary'),
	(417, 6, 'bf9b7fb5', 'bf9b7fb5'),
	(418, 6, '5b3fd73c', '5b3fd73c'),
	(419, 6, 'b26c5cf7', 'b26c5cf7'),
	(420, 6, '1fd50aa1', '1fd50aa1'),
	(421, 5, 'ab514faf-2626-45c6-b2c2-4a1f350f5c80', 'ab514faf-2626-45c6-b2c2-4a1f350f5c80'),
	(422, 5, 'ab514faf-2626-45c6-b2c2-4a1f350f5c80_employees_name', 'ab514faf-2626-45c6-b2c2-4a1f350f5c80_employees_name'),
	(423, 5, 'ab514faf-2626-45c6-b2c2-4a1f350f5c80_employees_ssn', 'ab514faf-2626-45c6-b2c2-4a1f350f5c80_employees_ssn'),
	(424, 5, 'ab514faf-2626-45c6-b2c2-4a1f350f5c80_employees_phone', 'ab514faf-2626-45c6-b2c2-4a1f350f5c80_employees_phone'),
	(425, 5, 'ab514faf-2626-45c6-b2c2-4a1f350f5c80_employees_salary', 'ab514faf-2626-45c6-b2c2-4a1f350f5c80_employees_salary'),
	(426, 6, '074a6610', '074a6610'),
	(427, 6, '7097ddf8', '7097ddf8'),
	(428, 6, 'b27dc7e0', 'b27dc7e0'),
	(429, 6, 'bf08b418', 'bf08b418'),
	(430, 5, 'a99f6b4b-e658-4998-a81b-33f86dd713d8', 'a99f6b4b-e658-4998-a81b-33f86dd713d8'),
	(431, 5, 'a99f6b4b-e658-4998-a81b-33f86dd713d8_employees_name', 'a99f6b4b-e658-4998-a81b-33f86dd713d8_employees_name'),
	(432, 5, 'a99f6b4b-e658-4998-a81b-33f86dd713d8_employees_ssn', 'a99f6b4b-e658-4998-a81b-33f86dd713d8_employees_ssn'),
	(433, 5, 'a99f6b4b-e658-4998-a81b-33f86dd713d8_employees_phone', 'a99f6b4b-e658-4998-a81b-33f86dd713d8_employees_phone'),
	(434, 5, 'a99f6b4b-e658-4998-a81b-33f86dd713d8_employees_salary', 'a99f6b4b-e658-4998-a81b-33f86dd713d8_employees_salary'),
	(435, 6, 'e0bfd15b', 'e0bfd15b'),
	(436, 6, 'b008ceeb', 'b008ceeb'),
	(437, 6, '8b1b37ff', '8b1b37ff'),
	(438, 6, 'f50e27f3', 'f50e27f3'),
	(439, 6, 'c9af7065', 'c9af7065'),
	(440, 6, '4e2609b2', '4e2609b2'),
	(441, 6, 'fc13bfab', 'fc13bfab'),
	(442, 6, '0859b57e', '0859b57e'),
	(443, 6, 'e1cb9d1c', 'e1cb9d1c'),
	(444, 6, 'bfe20890', 'bfe20890'),
	(445, 6, '975555c4', '975555c4'),
	(446, 6, 'TS rep', 'TS rep'),
	(447, 6, 'S rep', 'S rep'),
	(448, 6, 'Acct Recs rep', 'Acct Recs rep'),
	(449, 6, 'Alice Med Records rep', 'Alice Med Records rep'),
	(450, 6, 'Bob Med Records rep', 'Bob Med Records rep'),
	(451, 6, 'Populated Forms rep', 'Populated Forms rep'),
	(452, 6, 'CMRecs rep', 'CMRecs rep'),
	(453, 6, 'OU messages rep', 'OU messages rep'),
	(454, 6, 'katie OUTBOX rep', 'katie OUTBOX rep'),
	(455, 6, 'PatSymptoms rep', 'PatSymptoms rep'),
	(456, 6, 'PatAllergies rep', 'PatAllergies rep'),
	(457, 6, 'PatBio rep', 'PatBio rep'),
	(458, 6, 'PatId rep', 'PatId rep'),
	(459, 6, 'PatDrafts rep', 'PatDrafts rep'),
	(460, 6, 'PatTreatment rep', 'PatTreatment rep'),
	(461, 6, 'PatDiag rep', 'PatDiag rep'),
	(462, 6, 'PatHistory rep', 'PatHistory rep'),
	(463, 6, 'charlie OUTBOX rep', 'charlie OUTBOX rep'),
	(464, 6, 'bob OUTBOX rep', 'bob OUTBOX rep'),
	(465, 6, 'alice OUTBOX rep', 'alice OUTBOX rep'),
	(466, 6, '8E094FF2-Drafts rep', '8E094FF2-Drafts rep'),
	(467, 6, '8E094FF2-Treatments rep', '8E094FF2-Treatments rep'),
	(468, 6, '8E094FF2-History rep', '8E094FF2-History rep'),
	(469, 6, '8E094FF2-Diagnoses rep', '8E094FF2-Diagnoses rep'),
	(470, 6, '8B54E24B-Drafts rep', '8B54E24B-Drafts rep'),
	(471, 6, '8B54E24B-Diagnoses rep', '8B54E24B-Diagnoses rep'),
	(472, 6, '8B54E24B-History rep', '8B54E24B-History rep'),
	(473, 6, '8B54E24B-Treatments rep', '8B54E24B-Treatments rep'),
	(474, 2, 'LinuxPM', 'LinuxPM'),
	(475, 3, 'Employees', 'Employees'),
	(477, 3, 'Mary', 'Mary'),
	(479, 4, 'mary', 'mary'),
	(480, 5, 'Emp_records', 'Emp_records'),
	(481, 6, 'JohnRecord', 'JohnRecord'),
	(482, 6, 'MaryRecord', 'MaryRecord'),
	(483, 7, '0BD2E460', '0BD2E460'),
	(485, 3, 'John', 'John'),
	(486, 4, 'john', 'john'),
	(487, 7, 'A28CE122', 'A28CE122'),
	(488, 7, '7C226BD7', '7C226BD7');
/*!40000 ALTER TABLE `node` ENABLE KEYS */;

-- Dumping structure for table policydb.node_property
CREATE TABLE IF NOT EXISTS `node_property` (
  `property_node_id` int(11) NOT NULL DEFAULT '0',
  `property_key` varchar(50) NOT NULL,
  `property_value` varchar(300) NOT NULL,
  PRIMARY KEY (`property_node_id`,`property_key`),
  CONSTRAINT `fk_property_node_id` FOREIGN KEY (`property_node_id`) REFERENCES `node` (`node_id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table policydb.node_property: ~63 rows (approximately)
/*!40000 ALTER TABLE `node_property` DISABLE KEYS */;
INSERT INTO `node_property` (`property_node_id`, `property_key`, `property_value`) VALUES
	(101, 'levels', 'Secret,Top secret'),
	(101, 'type', 'mls'),
	(102, 'type', 'discretionary'),
	(103, 'type', 'rbac'),
	(104, 'type', 'confinement'),
	(105, 'correspondsto', 'S'),
	(111, 'usersof', 'discretionary'),
	(112, 'containerof', 'witems'),
	(113, 'homeof', 'katie'),
	(114, 'containerof', 'inboxes'),
	(115, 'homeof', 'charlie'),
	(116, 'homeof', 'bob'),
	(117, 'homeof', 'alice'),
	(127, 'containerof', 'outboxes'),
	(135, 'type', 'Records'),
	(140, 'witemsof', 'Accts Pbl'),
	(141, 'witemsof', 'Contracting'),
	(142, 'witemsof', 'Accts Rcv'),
	(148, 'correspondsto', 'TS'),
	(188, 'nameof', 'dave'),
	(189, 'nameof', 'katie'),
	(190, 'nameof', 'charlie'),
	(191, 'nameof', 'bob'),
	(192, 'nameof', 'alice'),
	(193, 'nameof', 'exporter'),
	(202, 'witemsof', 'katie'),
	(203, 'witemsof', 'charlie'),
	(204, 'witemsof', 'bob'),
	(205, 'witemsof', 'alice'),
	(207, 'inboxof', 'katie'),
	(208, 'inboxof', 'dave'),
	(209, 'winboxof', 'dave'),
	(215, 'patientsof', 'bob'),
	(218, 'patientsof', 'alice'),
	(225, 'outboxof', 'katie'),
	(246, 'prop', 'PatDrafts'),
	(308, 'winboxof', 'katie'),
	(309, 'inboxof', 'alice'),
	(310, 'inboxof', 'charlie'),
	(311, 'inboxof', 'bob'),
	(316, 'outboxof', 'charlie'),
	(317, 'outboxof', 'bob'),
	(318, 'outboxof', 'alice'),
	(325, 'prop', 'PatHistoryDrafts'),
	(326, 'prop', 'PatDiagDrafts'),
	(327, 'prop', 'PatTreatmentDrafts'),
	(346, 'winboxof', 'alice'),
	(347, 'winboxof', 'charlie'),
	(348, 'winboxof', 'bob'),
	(351, 'Drafts', '8E094FF2'),
	(352, 'Treatments', '8E094FF2'),
	(353, 'History', '8E094FF2'),
	(354, 'Diagnoses', '8E094FF2'),
	(355, 'Treatments', '8B54E24B'),
	(356, 'History', '8B54E24B'),
	(357, 'Diagnoses', '8B54E24B'),
	(358, 'Drafts', '8E094FF2'),
	(359, 'DraftHistory', '8E094FF2'),
	(360, 'DraftDiagnoses', '8E094FF2'),
	(361, 'DraftTreatments', '8E094FF2'),
	(362, 'DraftTreatments', '8B54E24B'),
	(363, 'DraftHistory', '8B54E24B'),
	(364, 'DraftDiagnoses', '8B54E24B');
/*!40000 ALTER TABLE `node_property` ENABLE KEYS */;

-- Dumping structure for table policydb.node_type
CREATE TABLE IF NOT EXISTS `node_type` (
  `node_type_id` int(11) NOT NULL,
  `name` varchar(50) DEFAULT NULL,
  `description` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`node_type_id`),
  KEY `idx_node_type_description` (`description`),
  KEY `idx_node_type_name` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='This table contains node types';

-- Dumping data for table policydb.node_type: ~7 rows (approximately)
/*!40000 ALTER TABLE `node_type` DISABLE KEYS */;
INSERT INTO `node_type` (`node_type_id`, `name`, `description`) VALUES
	(1, 'c', 'Connector'),
	(2, 'p', 'Policy Class'),
	(3, 'a', 'User Attribute'),
	(4, 'u', 'User'),
	(5, 'b', 'Object Attribute'),
	(6, 'o', 'Object'),
	(7, 's', 'Operation Set');
/*!40000 ALTER TABLE `node_type` ENABLE KEYS */;

-- Dumping structure for table policydb.object_class
CREATE TABLE IF NOT EXISTS `object_class` (
  `object_class_id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(20) NOT NULL,
  `description` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`object_class_id`),
  KEY `idx_object_class_name` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Object Class';

-- Dumping data for table policydb.object_class: ~12 rows (approximately)
/*!40000 ALTER TABLE `object_class` DISABLE KEYS */;
INSERT INTO `object_class` (`object_class_id`, `name`, `description`) VALUES
	(1, 'class', 'Class of all object classes'),
	(2, 'File', 'Class of files'),
	(3, 'Directory', 'Class of directories'),
	(4, 'User', 'Class of PM users'),
	(5, 'User attribute', 'Class of PM user attributes'),
	(6, 'Object', 'Class of PM objects'),
	(7, 'Object attribute', 'Class of PM object attributes'),
	(8, 'Connector', 'Class of the PM connector node'),
	(9, 'Policy class', 'Class of PM policy classes'),
	(10, 'Operation set', 'Class of PM operation sets'),
	(11, '*', 'Class any class'),
	(101, 'Clipboard', 'Clipboard');
/*!40000 ALTER TABLE `object_class` ENABLE KEYS */;

-- Dumping structure for table policydb.object_detail
CREATE TABLE IF NOT EXISTS `object_detail` (
  `object_node_id` int(11) NOT NULL AUTO_INCREMENT,
  `original_node_id` int(11) DEFAULT NULL,
  `object_class_id` int(11) DEFAULT NULL,
  `host_id` int(11) DEFAULT NULL,
  `path` varchar(300) DEFAULT NULL,
  `include_ascedants` int(1) DEFAULT '0',
  `template_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`object_node_id`),
  KEY `object_type_id_idx` (`object_class_id`),
  KEY `fk_object_host_id_idx` (`host_id`),
  KEY `fk_original_node_id_idx` (`original_node_id`),
  KEY `fk_obj_detail_tpl_id_idx` (`template_id`),
  CONSTRAINT `fk_obj_det_object_class_id` FOREIGN KEY (`object_class_id`) REFERENCES `object_class` (`object_class_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_obj_detail_tpl_id` FOREIGN KEY (`template_id`) REFERENCES `template` (`template_id`) ON DELETE SET NULL ON UPDATE NO ACTION,
  CONSTRAINT `fk_object_host_id` FOREIGN KEY (`host_id`) REFERENCES `host` (`host_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_original_node_id` FOREIGN KEY (`original_node_id`) REFERENCES `node` (`node_id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Object Details';

-- Dumping data for table policydb.object_detail: ~217 rows (approximately)
/*!40000 ALTER TABLE `object_detail` DISABLE KEYS */;
INSERT INTO `object_detail` (`object_node_id`, `original_node_id`, `object_class_id`, `host_id`, `path`, `include_ascedants`, `template_id`) VALUES
	(5, 1, 8, 100, NULL, 1, NULL),
	(106, NULL, 7, NULL, NULL, NULL, NULL),
	(112, NULL, 7, NULL, NULL, NULL, NULL),
	(113, NULL, 7, NULL, NULL, NULL, NULL),
	(114, NULL, 7, NULL, NULL, NULL, NULL),
	(115, NULL, 7, NULL, NULL, NULL, NULL),
	(116, NULL, 7, NULL, NULL, NULL, NULL),
	(117, NULL, 7, NULL, NULL, NULL, NULL),
	(118, 113, 7, NULL, 'C475E42A5BE362886D8FA48F572492D6', 1, NULL),
	(119, 114, 7, NULL, 'B9AD57D669853A054776C14036E60910', 1, NULL),
	(120, 115, 7, NULL, '8E455CE65DBD68C06D91B31EBFF00CA1', 1, NULL),
	(121, 116, 7, NULL, 'CCB001DA9BD045C51295B6461576D9BE', 1, NULL),
	(122, 117, 7, NULL, 'A41943CB4069E871D69D1B4FB24E8868', 1, NULL),
	(123, NULL, 7, NULL, NULL, NULL, NULL),
	(124, NULL, 7, NULL, NULL, NULL, NULL),
	(125, NULL, 7, NULL, NULL, NULL, NULL),
	(126, 111, 5, NULL, '9E6061CBD864A896CE5A642507F72AE1', 1, NULL),
	(127, NULL, 7, NULL, NULL, NULL, NULL),
	(128, NULL, 7, NULL, NULL, NULL, NULL),
	(135, NULL, 7, NULL, NULL, NULL, NULL),
	(136, NULL, 7, NULL, NULL, NULL, NULL),
	(137, NULL, 7, NULL, NULL, NULL, NULL),
	(138, 136, 7, NULL, '20A7462A510C7E61524C082B261B6BA4', 1, NULL),
	(139, 137, 7, NULL, '41C6FF29155D50CC28BC6B6A0C747E04', 1, NULL),
	(140, NULL, 7, NULL, NULL, NULL, NULL),
	(141, NULL, 7, NULL, NULL, NULL, NULL),
	(142, NULL, 7, NULL, NULL, NULL, NULL),
	(143, NULL, 7, NULL, NULL, NULL, NULL),
	(144, NULL, 7, NULL, NULL, NULL, NULL),
	(145, NULL, 7, NULL, NULL, NULL, NULL),
	(147, NULL, 7, NULL, NULL, NULL, NULL),
	(153, NULL, 7, NULL, NULL, NULL, NULL),
	(154, NULL, 7, NULL, NULL, NULL, NULL),
	(201, NULL, 7, NULL, NULL, NULL, 102),
	(202, NULL, 7, NULL, NULL, NULL, NULL),
	(203, NULL, 7, NULL, NULL, NULL, NULL),
	(204, NULL, 7, NULL, NULL, NULL, NULL),
	(205, NULL, 7, NULL, NULL, NULL, NULL),
	(207, NULL, 7, NULL, NULL, NULL, NULL),
	(208, NULL, 7, NULL, NULL, NULL, NULL),
	(209, NULL, 7, NULL, NULL, NULL, NULL),
	(212, NULL, 7, NULL, NULL, NULL, NULL),
	(213, NULL, 7, NULL, NULL, NULL, NULL),
	(215, NULL, 7, NULL, NULL, NULL, NULL),
	(217, NULL, 7, NULL, NULL, NULL, NULL),
	(218, NULL, 7, NULL, NULL, NULL, NULL),
	(224, NULL, 7, NULL, NULL, NULL, NULL),
	(225, NULL, 7, NULL, NULL, NULL, NULL),
	(242, NULL, 7, NULL, NULL, NULL, NULL),
	(243, NULL, 7, NULL, NULL, NULL, NULL),
	(244, NULL, 7, NULL, NULL, NULL, NULL),
	(245, NULL, 7, NULL, NULL, NULL, NULL),
	(246, NULL, 7, NULL, NULL, NULL, NULL),
	(247, NULL, 7, NULL, NULL, NULL, NULL),
	(248, NULL, 7, NULL, NULL, NULL, NULL),
	(249, NULL, 7, NULL, NULL, NULL, NULL),
	(250, NULL, 7, NULL, NULL, NULL, NULL),
	(251, NULL, 7, NULL, NULL, NULL, NULL),
	(252, NULL, 7, NULL, NULL, NULL, NULL),
	(253, NULL, 7, NULL, NULL, NULL, NULL),
	(254, NULL, 2, 100, 'C:\\PMWorkArea\\poForm.wkf', 0, NULL),
	(255, NULL, 2, 100, 'C:\\PMWorkArea\\mrec33.rtf', 0, NULL),
	(256, NULL, 2, 100, 'C:\\PMWorkArea\\mrec22.rtf', 0, NULL),
	(257, NULL, 2, 100, 'C:\\PMWorkArea\\mrec11.rtf', 0, NULL),
	(258, NULL, 2, 100, 'C:\\PMWorkArea\\mrec3.doc', 0, NULL),
	(259, NULL, 2, 100, 'C:\\PMWorkArea\\mrec2.doc', 0, NULL),
	(260, NULL, 2, 100, 'C:\\PMWorkArea\\mrec1.doc', 0, NULL),
	(261, NULL, 2, 100, 'C:\\PMWorkArea\\mrec4.doc', 0, NULL),
	(262, NULL, 2, 100, 'C:\\PMWorkArea\\mrec5.rtf', 0, NULL),
	(304, NULL, 2, 100, 'C:\\PMWorkArea\\FC15B612.txt', 0, NULL),
	(305, NULL, 2, 100, 'C:\\PMWorkArea\\C9CFE6DE.txt', 0, NULL),
	(306, NULL, 2, 100, 'C:\\PMWorkArea\\30A44CB5.txt', 0, NULL),
	(307, NULL, 2, 100, 'C:\\PMWorkArea\\237D8FA7.txt', 0, NULL),
	(308, NULL, 7, NULL, NULL, NULL, NULL),
	(309, NULL, 7, NULL, NULL, NULL, NULL),
	(310, NULL, 7, NULL, NULL, NULL, NULL),
	(311, NULL, 7, NULL, NULL, NULL, NULL),
	(312, NULL, 7, NULL, NULL, NULL, NULL),
	(313, NULL, 7, NULL, NULL, NULL, 101),
	(314, NULL, 2, 100, 'C:\\PMWorkArea\\prop1.rtf', 0, NULL),
	(315, NULL, 7, NULL, NULL, NULL, 101),
	(316, NULL, 7, NULL, NULL, NULL, NULL),
	(317, NULL, 7, NULL, NULL, NULL, NULL),
	(318, NULL, 7, NULL, NULL, NULL, NULL),
	(325, NULL, 7, NULL, NULL, NULL, NULL),
	(326, NULL, 7, NULL, NULL, NULL, NULL),
	(327, NULL, 7, NULL, NULL, NULL, NULL),
	(328, NULL, 2, 100, 'C:\\PMWorkArea\\E4B48FB1.rtf', 0, NULL),
	(329, NULL, 2, 100, 'C:\\PMWorkArea\\E294203A.rtf', 0, NULL),
	(330, NULL, 2, 100, 'C:\\PMWorkArea\\53C1525D.rtf', 0, NULL),
	(331, NULL, 2, 100, 'C:\\PMWorkArea\\D9971E4A.rtf', 0, NULL),
	(332, NULL, 2, 100, 'C:\\PMWorkArea\\d4cb3401.rtf', 0, NULL),
	(333, NULL, 2, 100, 'C:\\PMWorkArea\\33EAA2DF.rtf', 0, NULL),
	(334, NULL, 2, 100, 'C:\\PMWorkArea\\FB40D908.rtf', 0, NULL),
	(335, NULL, 2, 100, 'C:\\PMWorkArea\\933161a3.rtf', 0, NULL),
	(336, NULL, 2, 100, 'C:\\PMWorkArea\\E9663596.rtf', 0, NULL),
	(337, NULL, 2, 100, 'C:\\PMWorkArea\\7002DA15.rtf', 0, NULL),
	(338, NULL, 2, 100, 'C:\\PMWorkArea\\6411940B.doc', 0, NULL),
	(339, NULL, 2, 100, 'C:\\PMWorkArea\\FE2CA75B.doc', 0, NULL),
	(340, NULL, 2, 100, 'C:\\PMWorkArea\\9ce0521d.bio', 0, NULL),
	(341, NULL, 2, 100, 'C:\\PMWorkArea\\39FA5BA8.bio', 0, NULL),
	(342, NULL, 2, 100, 'C:\\PMWorkArea\\4902BD22.bio', 0, NULL),
	(343, NULL, 2, 100, 'C:\\PMWorkArea\\91c1aa7f.pid', 0, NULL),
	(344, NULL, 2, 100, 'C:\\PMWorkArea\\58423CA7.pid', 0, NULL),
	(345, NULL, 2, 100, 'C:\\PMWorkArea\\9435D63E.pid', 0, NULL),
	(346, NULL, 7, NULL, NULL, NULL, NULL),
	(347, NULL, 7, NULL, NULL, NULL, NULL),
	(348, NULL, 7, NULL, NULL, NULL, NULL),
	(349, NULL, 2, 100, 'C:\\PMWorkArea\\Italian recipes.rtf', 0, NULL),
	(350, NULL, 2, 100, 'C:\\PMWorkArea\\Chili recipes.rtf', 0, NULL),
	(351, NULL, 7, NULL, NULL, NULL, NULL),
	(352, NULL, 7, NULL, NULL, NULL, NULL),
	(353, NULL, 7, NULL, NULL, NULL, NULL),
	(354, NULL, 7, NULL, NULL, NULL, NULL),
	(355, NULL, 7, NULL, NULL, NULL, NULL),
	(356, NULL, 7, NULL, NULL, NULL, NULL),
	(357, NULL, 7, NULL, NULL, NULL, NULL),
	(358, NULL, 7, NULL, NULL, NULL, NULL),
	(359, NULL, 7, NULL, NULL, NULL, NULL),
	(360, NULL, 7, NULL, NULL, NULL, NULL),
	(361, NULL, 7, NULL, NULL, NULL, NULL),
	(362, NULL, 7, NULL, NULL, NULL, NULL),
	(363, NULL, 7, NULL, NULL, NULL, NULL),
	(364, NULL, 7, NULL, NULL, NULL, NULL),
	(366, NULL, 7, NULL, NULL, NULL, NULL),
	(367, NULL, 7, NULL, NULL, NULL, NULL),
	(368, NULL, 7, NULL, NULL, NULL, NULL),
	(369, NULL, 7, NULL, NULL, NULL, NULL),
	(370, NULL, 7, NULL, NULL, NULL, NULL),
	(371, NULL, 7, NULL, NULL, NULL, NULL),
	(372, NULL, 7, NULL, NULL, NULL, NULL),
	(373, NULL, 7, NULL, NULL, NULL, NULL),
	(374, NULL, 7, NULL, NULL, NULL, NULL),
	(375, 366, 7, NULL, 'Ignored', 1, NULL),
	(394, NULL, 7, NULL, NULL, NULL, 103),
	(395, NULL, 7, NULL, NULL, NULL, NULL),
	(396, NULL, 7, NULL, NULL, NULL, NULL),
	(397, NULL, 7, NULL, NULL, NULL, NULL),
	(398, NULL, 7, NULL, NULL, NULL, NULL),
	(399, NULL, 2, 100, 'C:\\PMWorkArea\\4ab63bb5.doc', 0, NULL),
	(400, NULL, 2, 100, 'C:\\PMWorkArea\\d16173ff.doc', 0, NULL),
	(401, NULL, 2, 100, 'C:\\PMWorkArea\\bd15c30a.doc', 0, NULL),
	(402, NULL, 2, 100, 'C:\\PMWorkArea\\bd674751.doc', 0, NULL),
	(403, NULL, 7, NULL, NULL, NULL, 103),
	(404, NULL, 7, NULL, NULL, NULL, NULL),
	(405, NULL, 7, NULL, NULL, NULL, NULL),
	(406, NULL, 7, NULL, NULL, NULL, NULL),
	(407, NULL, 7, NULL, NULL, NULL, NULL),
	(408, NULL, 2, 100, 'C:\\PMWorkArea\\e0c10b05.doc', 0, NULL),
	(409, NULL, 2, 100, 'C:\\PMWorkArea\\ffe5d5a2.doc', 0, NULL),
	(410, NULL, 2, 100, 'C:\\PMWorkArea\\0da6e166.doc', 0, NULL),
	(411, NULL, 2, 100, 'C:\\PMWorkArea\\84f4b677.doc', 0, NULL),
	(412, NULL, 7, NULL, NULL, NULL, 103),
	(413, NULL, 7, NULL, NULL, NULL, NULL),
	(414, NULL, 7, NULL, NULL, NULL, NULL),
	(415, NULL, 7, NULL, NULL, NULL, NULL),
	(416, NULL, 7, NULL, NULL, NULL, NULL),
	(417, NULL, 2, 100, 'C:\\PMWorkArea\\bf9b7fb5.doc', 0, NULL),
	(418, NULL, 2, 100, 'C:\\PMWorkArea\\5b3fd73c.doc', 0, NULL),
	(419, NULL, 2, 100, 'C:\\PMWorkArea\\b26c5cf7.doc', 0, NULL),
	(420, NULL, 2, 100, 'C:\\PMWorkArea\\bd674751.doc', 0, NULL),
	(421, NULL, 7, NULL, NULL, NULL, 103),
	(422, NULL, 7, NULL, NULL, NULL, NULL),
	(423, NULL, 7, NULL, NULL, NULL, NULL),
	(424, NULL, 7, NULL, NULL, NULL, NULL),
	(425, NULL, 7, NULL, NULL, NULL, NULL),
	(426, NULL, 2, 100, 'C:\\PMWorkArea\\074a6610.doc', 0, NULL),
	(427, NULL, 2, 100, 'C:\\PMWorkArea\\7097ddf8.doc', 0, NULL),
	(428, NULL, 2, 100, 'C:\\PMWorkArea\\b27dc7e0.doc', 0, NULL),
	(429, NULL, 2, 100, 'C:\\PMWorkArea\\bf08b418.doc', 0, NULL),
	(430, NULL, 7, NULL, NULL, NULL, 103),
	(431, NULL, 7, NULL, NULL, NULL, NULL),
	(432, NULL, 7, NULL, NULL, NULL, NULL),
	(433, NULL, 7, NULL, NULL, NULL, NULL),
	(434, NULL, 7, NULL, NULL, NULL, NULL),
	(435, NULL, 2, 100, 'C:\\PMWorkArea\\e0bfd15b.doc', 0, NULL),
	(436, NULL, 2, 100, 'C:\\PMWorkArea\\b008ceeb.doc', 0, NULL),
	(437, NULL, 2, 100, 'C:\\PMWorkArea\\8b1b37ff.doc', 0, NULL),
	(438, NULL, 2, 100, 'C:\\PMWorkArea\\f50e27f3.doc', 0, NULL),
	(439, NULL, 2, 100, 'C:\\PMWorkArea\\c9af7065.rtf', 0, NULL),
	(440, NULL, 2, 100, 'C:\\PMWorkArea\\4e2609b2.rtf', 0, NULL),
	(441, NULL, 2, 100, 'C:\\PMWorkArea\\fc13bfab.rtf', 0, NULL),
	(442, NULL, 2, 100, 'C:\\PMWorkArea\\0859b57e.rtf', 0, NULL),
	(443, NULL, 2, 100, 'C:\\PMWorkArea\\e1cb9d1c.rtf', 0, NULL),
	(444, NULL, 2, 100, 'C:\\PMWorkArea\\bfe20890.rtf', 0, NULL),
	(445, NULL, 2, 100, 'C:\\PMWorkArea\\975555c4.rtf', 0, NULL),
	(446, 154, 7, NULL, '97946C24894C83121992A368042A3A0F', 0, NULL),
	(447, 153, 7, NULL, '176ED2D3E560F82E260CC207BDDFE447', 0, NULL),
	(448, 123, 7, NULL, '4DD337BDB071C3682DF49C9329D54646', 1, NULL),
	(449, 218, 7, NULL, '77482D7CEAEFF5284590C5D23C057897', 1, NULL),
	(450, 215, 7, NULL, '8462AE7B73F55E8F2EDFDF9A3BD6B781', 1, NULL),
	(451, 125, 7, NULL, '655ADCAE8DF469B352351C42D5357EC6', 0, NULL),
	(452, 128, 7, NULL, '47561254E70FAA7EFD2650E1AECC770A', 1, NULL),
	(453, 147, 7, NULL, 'B3BB895308E980DA3FEE4BF0E6F68F22', 1, NULL),
	(454, 225, 7, NULL, 'DFA7AFEA0C11710DA065F3A360530002', 1, NULL),
	(455, 249, 7, NULL, 'A88CC4B41476659B594BEAC29FDCD130', 0, NULL),
	(456, 250, 7, NULL, '279CD00D466424FE5F3B0101FFB80F1E', 0, NULL),
	(457, 252, 7, NULL, '2C99E607EBA250C05DB0D2596BA267EB', 0, NULL),
	(458, 253, 7, NULL, '2C7B611E6AA1F66EF474C76F9382C1D2', 0, NULL),
	(459, 246, 7, NULL, 'BE5A9E75D98415A2F7F7C1EFCF0C0A5A', 1, NULL),
	(460, 247, 7, NULL, '1FFD4BDD2546CEA8FB53558DF55363D0', 0, NULL),
	(461, 248, 7, NULL, '6EBBF70A37DD42C4B8D9E6D401EA792F', 0, NULL),
	(462, 251, 7, NULL, 'A753D0570DCE8F1FD843E4613F47970D', 0, NULL),
	(463, 316, 7, NULL, '608654BCBDD02256D1C034690A6613DC', 1, NULL),
	(464, 317, 7, NULL, '3A1CF076CCA56F130B1E2136BC154F99', 1, NULL),
	(465, 318, 7, NULL, '5C178D357D65A26FB8D73F589867535A', 1, NULL),
	(466, 351, 7, NULL, '877E87232726C348B9F2C74A8BE49AA8', 1, NULL),
	(467, 352, 7, NULL, '1662525EAF8045A81B21CFC5B3AE6B4F', 0, NULL),
	(468, 353, 7, NULL, '45BFA9BE2A90CA90C8A261EC25D88F63', 0, NULL),
	(469, 354, 7, NULL, '5CD87E2530C2B71DDB84E43F1723F37C', 0, NULL),
	(470, 358, 7, NULL, '985F1545C0358ECFB33D3F78E5DE0650', 1, NULL),
	(471, 357, 7, NULL, 'B7E56922D345BB6E90AB7654A518E536', 1, NULL),
	(472, 356, 7, NULL, 'E41805708E6EE130F944DB91AB29FAA2', 1, NULL),
	(473, 355, 7, NULL, '915ACF01F2B58D6CE4AFDA177478188B', 1, NULL),
	(480, NULL, 7, NULL, NULL, NULL, NULL),
	(481, NULL, 2, 100, 'C:\\PMWorkarea', 0, NULL),
	(482, NULL, 2, 100, 'C:\\PMWorkarea', 0, NULL);
/*!40000 ALTER TABLE `object_detail` ENABLE KEYS */;

-- Dumping structure for table policydb.ob_action
CREATE TABLE IF NOT EXISTS `ob_action` (
  `action_id` varchar(50) NOT NULL,
  `action_type` int(11) DEFAULT NULL,
  `is_intrasession` tinyint(1) DEFAULT NULL,
  `is_intersection` tinyint(1) DEFAULT NULL,
  `sequence` int(3) DEFAULT NULL,
  `rule_id` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`action_id`),
  KEY `fk_action_type` (`action_type`),
  KEY `fk_ob_action_rule_id_idx` (`rule_id`),
  CONSTRAINT `fk_action_type` FOREIGN KEY (`action_type`) REFERENCES `ob_action_type` (`action_type_id`),
  CONSTRAINT `fk_ob_action_rule_id` FOREIGN KEY (`rule_id`) REFERENCES `ob_rule` (`rule_id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table policydb.ob_action: ~0 rows (approximately)
/*!40000 ALTER TABLE `ob_action` DISABLE KEYS */;
/*!40000 ALTER TABLE `ob_action` ENABLE KEYS */;

-- Dumping structure for table policydb.ob_action_type
CREATE TABLE IF NOT EXISTS `ob_action_type` (
  `action_type_id` int(11) NOT NULL AUTO_INCREMENT,
  `action_type_name` varchar(50) NOT NULL,
  PRIMARY KEY (`action_type_id`,`action_type_name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table policydb.ob_action_type: ~8 rows (approximately)
/*!40000 ALTER TABLE `ob_action_type` DISABLE KEYS */;
INSERT INTO `ob_action_type` (`action_type_id`, `action_type_name`) VALUES
	(1, 'assign'),
	(2, 'assign like'),
	(3, 'grant'),
	(4, 'create'),
	(5, 'deny'),
	(6, 'delete assignment'),
	(7, 'delete deny'),
	(8, 'delete rule');
/*!40000 ALTER TABLE `ob_action_type` ENABLE KEYS */;

-- Dumping structure for table policydb.ob_condition
CREATE TABLE IF NOT EXISTS `ob_condition` (
  `condition_id` varchar(50) NOT NULL,
  `action_id` varchar(50) NOT NULL,
  `type` varchar(50) DEFAULT NULL,
  `is_negated` tinyint(1) DEFAULT NULL,
  PRIMARY KEY (`condition_id`),
  KEY `fk_cond_action_id_idx` (`action_id`),
  CONSTRAINT `fk_cond_action_id` FOREIGN KEY (`action_id`) REFERENCES `ob_action` (`action_id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table policydb.ob_condition: ~0 rows (approximately)
/*!40000 ALTER TABLE `ob_condition` DISABLE KEYS */;
/*!40000 ALTER TABLE `ob_condition` ENABLE KEYS */;

-- Dumping structure for table policydb.ob_condition_type
CREATE TABLE IF NOT EXISTS `ob_condition_type` (
  `cond_type_id` int(11) NOT NULL AUTO_INCREMENT,
  `cond_type` varchar(50) NOT NULL,
  PRIMARY KEY (`cond_type_id`,`cond_type`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table policydb.ob_condition_type: ~5 rows (approximately)
/*!40000 ALTER TABLE `ob_condition_type` DISABLE KEYS */;
INSERT INTO `ob_condition_type` (`cond_type_id`, `cond_type`) VALUES
	(1, 'user'),
	(2, 'user attribute'),
	(3, 'object'),
	(4, 'object attribute'),
	(5, 'policy');
/*!40000 ALTER TABLE `ob_condition_type` ENABLE KEYS */;

-- Dumping structure for table policydb.ob_cont_spec
CREATE TABLE IF NOT EXISTS `ob_cont_spec` (
  `event_pattern_id` varchar(50) NOT NULL,
  `cont_spec_type` int(11) NOT NULL,
  `cont_spec_value` varchar(50) NOT NULL DEFAULT '',
  PRIMARY KEY (`event_pattern_id`,`cont_spec_type`,`cont_spec_value`),
  KEY `fk_cont_spec_type_idx` (`cont_spec_type`),
  CONSTRAINT `fk_cont_spec_evtptn_id` FOREIGN KEY (`event_pattern_id`) REFERENCES `ob_event_pattern` (`event_pattern_id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_cont_spec_type_id` FOREIGN KEY (`cont_spec_type`) REFERENCES `node_type` (`node_type_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table policydb.ob_cont_spec: ~0 rows (approximately)
/*!40000 ALTER TABLE `ob_cont_spec` DISABLE KEYS */;
/*!40000 ALTER TABLE `ob_cont_spec` ENABLE KEYS */;

-- Dumping structure for table policydb.ob_cont_spec_type
CREATE TABLE IF NOT EXISTS `ob_cont_spec_type` (
  `cont_spec_type_id` int(11) NOT NULL AUTO_INCREMENT,
  `cont_spec_type` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`cont_spec_type_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table policydb.ob_cont_spec_type: ~3 rows (approximately)
/*!40000 ALTER TABLE `ob_cont_spec_type` DISABLE KEYS */;
INSERT INTO `ob_cont_spec_type` (`cont_spec_type_id`, `cont_spec_type`) VALUES
	(1, 'b'),
	(2, 'rec'),
	(3, 'oc');
/*!40000 ALTER TABLE `ob_cont_spec_type` ENABLE KEYS */;

-- Dumping structure for table policydb.ob_event_pattern
CREATE TABLE IF NOT EXISTS `ob_event_pattern` (
  `event_pattern_id` varchar(50) NOT NULL,
  `rule_id` varchar(50) DEFAULT NULL,
  `is_active` tinyint(1) DEFAULT NULL,
  `is_any` tinyint(1) DEFAULT NULL,
  PRIMARY KEY (`event_pattern_id`),
  KEY `fk_evtptrn_rule_id` (`rule_id`),
  CONSTRAINT `fk_evtptrn_rule_id` FOREIGN KEY (`rule_id`) REFERENCES `ob_rule` (`rule_id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table policydb.ob_event_pattern: ~0 rows (approximately)
/*!40000 ALTER TABLE `ob_event_pattern` DISABLE KEYS */;
/*!40000 ALTER TABLE `ob_event_pattern` ENABLE KEYS */;

-- Dumping structure for table policydb.ob_obj_spec
CREATE TABLE IF NOT EXISTS `ob_obj_spec` (
  `event_pattern_id` varchar(50) NOT NULL,
  `obj_spec_type` int(11) NOT NULL,
  `obj_spec_value` varchar(50) NOT NULL DEFAULT '',
  PRIMARY KEY (`event_pattern_id`,`obj_spec_type`,`obj_spec_value`),
  KEY `fk_obj_spec_type` (`obj_spec_type`),
  CONSTRAINT `fk_obj_spec_event_pattern` FOREIGN KEY (`event_pattern_id`) REFERENCES `ob_event_pattern` (`event_pattern_id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_obj_spec_type` FOREIGN KEY (`obj_spec_type`) REFERENCES `node_type` (`node_type_id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table policydb.ob_obj_spec: ~0 rows (approximately)
/*!40000 ALTER TABLE `ob_obj_spec` DISABLE KEYS */;
/*!40000 ALTER TABLE `ob_obj_spec` ENABLE KEYS */;

-- Dumping structure for table policydb.ob_operand
CREATE TABLE IF NOT EXISTS `ob_operand` (
  `operand_id` varchar(50) NOT NULL,
  `action_id` varchar(50) DEFAULT NULL,
  `condition_id` varchar(50) DEFAULT NULL,
  `operand_type` int(11) DEFAULT NULL,
  `operand_num` int(2) DEFAULT NULL,
  `sequence` int(4) DEFAULT NULL,
  `is_function` tinyint(1) DEFAULT NULL,
  `is_subgraph` tinyint(1) DEFAULT NULL,
  `is_compliment` tinyint(1) DEFAULT NULL,
  `expression` varchar(500) DEFAULT NULL,
  `expression_id` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`operand_id`),
  KEY `fk_operand_type` (`operand_type`),
  KEY `fk_ob_operand_action_id_idx` (`action_id`),
  KEY `fk_condition_id_idx` (`condition_id`),
  CONSTRAINT `fk_condition_id` FOREIGN KEY (`condition_id`) REFERENCES `ob_condition` (`condition_id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_ob_operand_action_id` FOREIGN KEY (`action_id`) REFERENCES `ob_action` (`action_id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_operand_type` FOREIGN KEY (`operand_type`) REFERENCES `ob_operand_type` (`operand_type_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table policydb.ob_operand: ~0 rows (approximately)
/*!40000 ALTER TABLE `ob_operand` DISABLE KEYS */;
/*!40000 ALTER TABLE `ob_operand` ENABLE KEYS */;

-- Dumping structure for table policydb.ob_operand_args
CREATE TABLE IF NOT EXISTS `ob_operand_args` (
  `operand_id` varchar(50) NOT NULL,
  `arg_operand_id` varchar(50) NOT NULL,
  `sequence` int(3) NOT NULL,
  PRIMARY KEY (`operand_id`,`arg_operand_id`,`sequence`),
  KEY `fk_operand_id` (`arg_operand_id`),
  CONSTRAINT `fk_arg_operand_id` FOREIGN KEY (`operand_id`) REFERENCES `ob_operand` (`operand_id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_operand_id` FOREIGN KEY (`arg_operand_id`) REFERENCES `ob_operand` (`operand_id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table policydb.ob_operand_args: ~0 rows (approximately)
/*!40000 ALTER TABLE `ob_operand_args` DISABLE KEYS */;
/*!40000 ALTER TABLE `ob_operand_args` ENABLE KEYS */;

-- Dumping structure for table policydb.ob_operand_type
CREATE TABLE IF NOT EXISTS `ob_operand_type` (
  `operand_type_id` int(11) NOT NULL AUTO_INCREMENT,
  `operand_type` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`operand_type_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table policydb.ob_operand_type: ~6 rows (approximately)
/*!40000 ALTER TABLE `ob_operand_type` DISABLE KEYS */;
INSERT INTO `ob_operand_type` (`operand_type_id`, `operand_type`) VALUES
	(1, 'u'),
	(2, 'p'),
	(3, 'op'),
	(4, 'b'),
	(5, 'rule'),
	(6, 'k');
/*!40000 ALTER TABLE `ob_operand_type` ENABLE KEYS */;

-- Dumping structure for table policydb.ob_op_spec
CREATE TABLE IF NOT EXISTS `ob_op_spec` (
  `event_pattern_id` varchar(50) NOT NULL,
  `op_spec_event_id` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`event_pattern_id`,`op_spec_event_id`),
  KEY `fk_op_spec_event_id` (`op_spec_event_id`),
  CONSTRAINT `fk_ob_op_spec_event_id` FOREIGN KEY (`op_spec_event_id`) REFERENCES `ob_op_spec_events` (`event_id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_op_spec_evtptn_id` FOREIGN KEY (`event_pattern_id`) REFERENCES `ob_event_pattern` (`event_pattern_id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table policydb.ob_op_spec: ~0 rows (approximately)
/*!40000 ALTER TABLE `ob_op_spec` DISABLE KEYS */;
/*!40000 ALTER TABLE `ob_op_spec` ENABLE KEYS */;

-- Dumping structure for table policydb.ob_op_spec_events
CREATE TABLE IF NOT EXISTS `ob_op_spec_events` (
  `event_id` int(11) NOT NULL AUTO_INCREMENT,
  `event_name` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`event_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table policydb.ob_op_spec_events: ~4 rows (approximately)
/*!40000 ALTER TABLE `ob_op_spec_events` DISABLE KEYS */;
INSERT INTO `ob_op_spec_events` (`event_id`, `event_name`) VALUES
	(1, 'Object write'),
	(2, 'Object create'),
	(3, 'Object read'),
	(4, 'User create');
/*!40000 ALTER TABLE `ob_op_spec_events` ENABLE KEYS */;

-- Dumping structure for table policydb.ob_policy_spec
CREATE TABLE IF NOT EXISTS `ob_policy_spec` (
  `event_pattern_id` varchar(50) NOT NULL,
  `policy_spec_type` int(11) NOT NULL,
  `policy_spec_value` varchar(50) NOT NULL DEFAULT '',
  PRIMARY KEY (`event_pattern_id`,`policy_spec_type`,`policy_spec_value`),
  KEY `fk_policy_spec_type` (`policy_spec_type`),
  CONSTRAINT `fk_policy_spec_evtptn_id` FOREIGN KEY (`event_pattern_id`) REFERENCES `ob_event_pattern` (`event_pattern_id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table policydb.ob_policy_spec: ~0 rows (approximately)
/*!40000 ALTER TABLE `ob_policy_spec` DISABLE KEYS */;
/*!40000 ALTER TABLE `ob_policy_spec` ENABLE KEYS */;

-- Dumping structure for table policydb.ob_rule
CREATE TABLE IF NOT EXISTS `ob_rule` (
  `rule_id` varchar(50) NOT NULL,
  `rule_name` varchar(50) DEFAULT NULL,
  `count` int(3) DEFAULT NULL,
  `sequence` int(3) DEFAULT NULL,
  `script_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`rule_id`),
  KEY `fk_script_id` (`script_id`),
  CONSTRAINT `fk_ob_rule_script_id` FOREIGN KEY (`script_id`) REFERENCES `ob_script` (`script_id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table policydb.ob_rule: ~0 rows (approximately)
/*!40000 ALTER TABLE `ob_rule` DISABLE KEYS */;
/*!40000 ALTER TABLE `ob_rule` ENABLE KEYS */;

-- Dumping structure for table policydb.ob_script
CREATE TABLE IF NOT EXISTS `ob_script` (
  `script_id` int(11) NOT NULL AUTO_INCREMENT,
  `script_name` varchar(50) NOT NULL,
  `count` int(3) DEFAULT NULL,
  `enabled` tinyint(1) DEFAULT NULL,
  PRIMARY KEY (`script_id`,`script_name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table policydb.ob_script: ~0 rows (approximately)
/*!40000 ALTER TABLE `ob_script` DISABLE KEYS */;
/*!40000 ALTER TABLE `ob_script` ENABLE KEYS */;

-- Dumping structure for table policydb.ob_script_source
CREATE TABLE IF NOT EXISTS `ob_script_source` (
  `script_id` int(11) NOT NULL,
  `source` varchar(300) DEFAULT NULL,
  `order` int(4) NOT NULL,
  KEY `fk_script_source_id_idx` (`script_id`),
  CONSTRAINT `fk_script_source_id` FOREIGN KEY (`script_id`) REFERENCES `ob_script` (`script_id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table policydb.ob_script_source: ~0 rows (approximately)
/*!40000 ALTER TABLE `ob_script_source` DISABLE KEYS */;
/*!40000 ALTER TABLE `ob_script_source` ENABLE KEYS */;

-- Dumping structure for table policydb.ob_user_spec
CREATE TABLE IF NOT EXISTS `ob_user_spec` (
  `event_pattern_id` varchar(50) NOT NULL,
  `user_spec_type` int(11) NOT NULL,
  `user_spec_value` varchar(50) NOT NULL DEFAULT '',
  PRIMARY KEY (`event_pattern_id`,`user_spec_type`,`user_spec_value`),
  KEY `fk_user_spec_type` (`user_spec_type`),
  CONSTRAINT `fk_user_spec_evtptn_id` FOREIGN KEY (`event_pattern_id`) REFERENCES `ob_event_pattern` (`event_pattern_id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_spec_type` FOREIGN KEY (`user_spec_type`) REFERENCES `ob_user_spec_type` (`user_spec_type_id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table policydb.ob_user_spec: ~0 rows (approximately)
/*!40000 ALTER TABLE `ob_user_spec` DISABLE KEYS */;
/*!40000 ALTER TABLE `ob_user_spec` ENABLE KEYS */;

-- Dumping structure for table policydb.ob_user_spec_type
CREATE TABLE IF NOT EXISTS `ob_user_spec_type` (
  `user_spec_type_id` int(11) NOT NULL AUTO_INCREMENT,
  `user_spec_type` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`user_spec_type_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table policydb.ob_user_spec_type: ~4 rows (approximately)
/*!40000 ALTER TABLE `ob_user_spec_type` DISABLE KEYS */;
INSERT INTO `ob_user_spec_type` (`user_spec_type_id`, `user_spec_type`) VALUES
	(1, 'u'),
	(2, 'a'),
	(3, 'ses'),
	(4, 'proc');
/*!40000 ALTER TABLE `ob_user_spec_type` ENABLE KEYS */;

-- Dumping structure for table policydb.open_object
CREATE TABLE IF NOT EXISTS `open_object` (
  `session_id` int(11) NOT NULL,
  `object_node_id` int(11) NOT NULL,
  `count` int(2) DEFAULT NULL,
  PRIMARY KEY (`session_id`,`object_node_id`),
  KEY `fk_object_id_oo_idx` (`object_node_id`),
  CONSTRAINT `fk_object_id_oo` FOREIGN KEY (`object_node_id`) REFERENCES `node` (`node_id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_session_id_oo` FOREIGN KEY (`session_id`) REFERENCES `session` (`session_id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='table for open objects';

-- Dumping data for table policydb.open_object: ~0 rows (approximately)
/*!40000 ALTER TABLE `open_object` DISABLE KEYS */;
/*!40000 ALTER TABLE `open_object` ENABLE KEYS */;

-- Dumping structure for table policydb.operation
CREATE TABLE IF NOT EXISTS `operation` (
  `operation_id` int(11) NOT NULL AUTO_INCREMENT,
  `operation_type_id` int(11) NOT NULL,
  `name` varchar(50) NOT NULL,
  `description` varchar(100) DEFAULT NULL,
  `object_class_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`operation_id`),
  UNIQUE KEY `operation_id_UNIQUE` (`operation_id`),
  KEY `operation_type_id_idx` (`operation_type_id`),
  KEY `fk_operation_object_class_id_idx` (`object_class_id`),
  KEY `idx_operation_name` (`name`),
  CONSTRAINT `fk_operation_object_class_id` FOREIGN KEY (`object_class_id`) REFERENCES `object_class` (`object_class_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_operation_type_id` FOREIGN KEY (`operation_type_id`) REFERENCES `operation_type` (`operation_type_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Operation';

-- Dumping data for table policydb.operation: ~65 rows (approximately)
/*!40000 ALTER TABLE `operation` DISABLE KEYS */;
INSERT INTO `operation` (`operation_id`, `operation_type_id`, `name`, `description`, `object_class_id`) VALUES
	(1, 1, 'Class create class', 'Class create class', 1),
	(2, 1, 'Class delete class', 'Class delete class', 2),
	(3, 1, '*', '*', 11),
	(4, 1, 'File modify', 'File modify', 2),
	(5, 1, 'File read and execute', 'File read and execute', 2),
	(6, 1, 'File read', 'File read', 2),
	(7, 1, 'File write', 'File write', 2),
	(8, 1, 'Dir modify', 'Dir modify', 3),
	(9, 1, 'Dir read and execute', 'Dir read and execute', 3),
	(10, 1, 'Dir list contents', 'Dir list contents', 3),
	(11, 1, 'Dir read', 'Dir read', 3),
	(12, 1, 'Dir write', 'Dir write', 3),
	(13, 1, 'User create user attribute', 'User create user attribute', 4),
	(14, 1, 'User assign', 'User assign', 4),
	(15, 1, 'User delete', 'User delete', 4),
	(16, 1, 'User delete assign', 'User delete assign', 4),
	(17, 1, 'Entity represent', 'Entity represent', 4),
	(18, 1, 'User attribute create user attribute', 'User attribute create user attribute', 5),
	(19, 1, 'User attribute create user', 'User attribute create user', 5),
	(20, 1, 'User attribute delete user', 'User attribute delete user', 5),
	(21, 1, 'User attribute create operation set', 'User attribute create operation set', 5),
	(22, 1, 'User attribute assign to operation set', 'User attribute assign to operation set', 5),
	(23, 1, 'User attribute assign', 'User attribute assign', 5),
	(24, 1, 'User attribute assign to', 'User attribute assign to', 5),
	(25, 1, 'User attribute delete', 'User attribute delete', 5),
	(26, 1, 'User attribute delete assign', 'User attribute delete assign', 5),
	(27, 1, 'User attribute delete assign to', 'User attribute delete assign to', 5),
	(28, 1, 'Object delete', 'Object delete', 6),
	(29, 1, 'Object attribute create object', 'Object attribute create object', 7),
	(30, 1, 'Object attribute delete object', 'Object attribute delete object', 7),
	(31, 1, 'Object attribute create object attribute', 'Object attribute create object attribute', 7),
	(32, 1, 'Object attribute delete object attribute', 'Object attribute delete object attribute', 7),
	(33, 1, 'Object attribute create operation set', 'Object attribute create operation set', 7),
	(34, 1, 'Object attribute assign', 'Object attribute assign', 7),
	(35, 1, 'Object attribute assign to', 'Object attribute assign to', 7),
	(36, 1, 'Object attribute delete', 'Object attribute delete', 7),
	(37, 1, 'Object attribute delete assign', 'Object attribute delete assign', 7),
	(38, 1, 'Object attribute delete assign to', 'Object attribute delete assign to', 7),
	(39, 1, 'Policy class create user attribute', 'Policy class create user attribute', 9),
	(40, 1, 'Policy class delete user attribute', 'Policy class delete user attribute', 9),
	(41, 1, 'Policy class create object attribute', 'Policy class create object attribute', 9),
	(42, 1, 'Policy class delete object attribute', 'Policy class delete object attribute', 9),
	(43, 1, 'Policy class create object', 'Policy class create object', 9),
	(44, 1, 'Policy class assign', 'Policy class assign', 9),
	(45, 1, 'Policy class assign to', 'Policy class assign to', 9),
	(46, 1, 'Policy class delete', 'Policy class delete', 9),
	(47, 1, 'Policy class delete assign', 'Policy class delete assign', 9),
	(48, 1, 'Policy class delete assign to', 'Policy class delete assign to', 9),
	(49, 1, 'Operation set assign', 'Operation set assign', 10),
	(50, 1, 'Operation set assign to', 'Operation set assign to', 10),
	(51, 1, 'Operation set delete', 'Operation set delete', 10),
	(52, 1, 'Operation set delete assign', 'Operation set delete assign', 10),
	(53, 1, 'Operation set delete assign to', 'Operation set delete assign to', 10),
	(54, 1, 'Connector create policy class', 'Connector create policy class', 8),
	(55, 1, 'Connector delete policy class', 'Connector delete policy class', 8),
	(56, 1, 'Connector create user', 'Connector create user', 8),
	(57, 1, 'Connector delete user', 'Connector delete user', 8),
	(58, 1, 'Connector create user attribute', 'Connector create user attribute', 8),
	(59, 1, 'Connector delete user attribute', 'Connector delete user attribute', 8),
	(60, 1, 'Connector create object attribute', 'Connector create object attribute', 8),
	(61, 1, 'Connector delete object attribute', 'Connector delete object attribute', 8),
	(62, 1, 'Connector create object', 'Connector create object', 8),
	(63, 1, 'Connector create operation set', 'Connector create operation set', 8),
	(64, 1, 'Connector assign to', 'Connector assign to', 8),
	(65, 1, 'Connector delete assign to', 'Connector delete assign to', 8);
/*!40000 ALTER TABLE `operation` ENABLE KEYS */;

-- Dumping structure for table policydb.operation_set_details
CREATE TABLE IF NOT EXISTS `operation_set_details` (
  `operation_set_details_node_id` int(11) NOT NULL,
  `operation_id` int(11) NOT NULL,
  PRIMARY KEY (`operation_set_details_node_id`,`operation_id`),
  KEY `fk_op_set_operation_id_idx` (`operation_id`),
  CONSTRAINT `fk_op_set_operation_id` FOREIGN KEY (`operation_id`) REFERENCES `operation` (`operation_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_operation_set_details_node_id` FOREIGN KEY (`operation_set_details_node_id`) REFERENCES `node` (`node_id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='This table contains the information for User operation node';

-- Dumping data for table policydb.operation_set_details: ~231 rows (approximately)
/*!40000 ALTER TABLE `operation_set_details` DISABLE KEYS */;
INSERT INTO `operation_set_details` (`operation_set_details_node_id`, `operation_id`) VALUES
	(7, 3),
	(382, 3),
	(234, 4),
	(278, 4),
	(295, 4),
	(151, 6),
	(155, 6),
	(158, 6),
	(160, 6),
	(161, 6),
	(162, 6),
	(163, 6),
	(165, 6),
	(166, 6),
	(167, 6),
	(168, 6),
	(169, 6),
	(171, 6),
	(172, 6),
	(173, 6),
	(174, 6),
	(175, 6),
	(176, 6),
	(177, 6),
	(182, 6),
	(184, 6),
	(185, 6),
	(206, 6),
	(210, 6),
	(214, 6),
	(216, 6),
	(219, 6),
	(227, 6),
	(228, 6),
	(229, 6),
	(230, 6),
	(231, 6),
	(234, 6),
	(235, 6),
	(236, 6),
	(238, 6),
	(240, 6),
	(265, 6),
	(268, 6),
	(269, 6),
	(270, 6),
	(273, 6),
	(275, 6),
	(276, 6),
	(278, 6),
	(280, 6),
	(282, 6),
	(283, 6),
	(284, 6),
	(286, 6),
	(288, 6),
	(291, 6),
	(293, 6),
	(294, 6),
	(295, 6),
	(297, 6),
	(299, 6),
	(301, 6),
	(319, 6),
	(320, 6),
	(321, 6),
	(322, 6),
	(323, 6),
	(324, 6),
	(383, 6),
	(384, 6),
	(385, 6),
	(386, 6),
	(387, 6),
	(388, 6),
	(389, 6),
	(390, 6),
	(391, 6),
	(392, 6),
	(393, 6),
	(483, 6),
	(487, 6),
	(488, 6),
	(152, 7),
	(158, 7),
	(160, 7),
	(161, 7),
	(162, 7),
	(163, 7),
	(165, 7),
	(166, 7),
	(167, 7),
	(168, 7),
	(169, 7),
	(171, 7),
	(172, 7),
	(174, 7),
	(180, 7),
	(182, 7),
	(184, 7),
	(185, 7),
	(195, 7),
	(206, 7),
	(211, 7),
	(214, 7),
	(216, 7),
	(219, 7),
	(227, 7),
	(228, 7),
	(229, 7),
	(231, 7),
	(234, 7),
	(263, 7),
	(265, 7),
	(266, 7),
	(267, 7),
	(270, 7),
	(272, 7),
	(273, 7),
	(278, 7),
	(279, 7),
	(280, 7),
	(290, 7),
	(291, 7),
	(295, 7),
	(319, 7),
	(320, 7),
	(322, 7),
	(323, 7),
	(324, 7),
	(383, 7),
	(384, 7),
	(385, 7),
	(487, 7),
	(488, 7),
	(220, 14),
	(221, 14),
	(222, 14),
	(223, 14),
	(197, 17),
	(198, 17),
	(199, 17),
	(200, 17),
	(220, 22),
	(221, 22),
	(222, 22),
	(223, 22),
	(150, 29),
	(157, 29),
	(159, 29),
	(178, 29),
	(179, 29),
	(181, 29),
	(183, 29),
	(194, 29),
	(197, 29),
	(198, 29),
	(199, 29),
	(200, 29),
	(233, 29),
	(237, 29),
	(239, 29),
	(241, 29),
	(264, 29),
	(277, 29),
	(285, 29),
	(287, 29),
	(289, 29),
	(296, 29),
	(298, 29),
	(300, 29),
	(302, 29),
	(157, 31),
	(178, 31),
	(179, 31),
	(181, 31),
	(183, 31),
	(187, 31),
	(197, 31),
	(198, 31),
	(199, 31),
	(200, 31),
	(197, 33),
	(198, 33),
	(199, 33),
	(200, 33),
	(159, 34),
	(186, 34),
	(197, 34),
	(198, 34),
	(199, 34),
	(200, 34),
	(239, 34),
	(264, 34),
	(271, 34),
	(274, 34),
	(281, 34),
	(292, 34),
	(150, 35),
	(157, 35),
	(187, 35),
	(196, 35),
	(197, 35),
	(198, 35),
	(199, 35),
	(200, 35),
	(233, 35),
	(237, 35),
	(239, 35),
	(241, 35),
	(264, 35),
	(271, 35),
	(274, 35),
	(277, 35),
	(281, 35),
	(285, 35),
	(287, 35),
	(289, 35),
	(292, 35),
	(296, 35),
	(298, 35),
	(300, 35),
	(302, 35),
	(197, 49),
	(198, 49),
	(199, 49),
	(200, 49),
	(197, 50),
	(198, 50),
	(199, 50),
	(200, 50);
/*!40000 ALTER TABLE `operation_set_details` ENABLE KEYS */;

-- Dumping structure for table policydb.operation_type
CREATE TABLE IF NOT EXISTS `operation_type` (
  `operation_type_id` int(11) NOT NULL,
  `name` varchar(50) NOT NULL,
  PRIMARY KEY (`operation_type_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Operation types';

-- Dumping data for table policydb.operation_type: ~2 rows (approximately)
/*!40000 ALTER TABLE `operation_type` DISABLE KEYS */;
INSERT INTO `operation_type` (`operation_type_id`, `name`) VALUES
	(1, 'Resource Operations'),
	(2, 'Admin Operations');
/*!40000 ALTER TABLE `operation_type` ENABLE KEYS */;

-- Dumping structure for table policydb.record_components
CREATE TABLE IF NOT EXISTS `record_components` (
  `record_node_id` int(11) NOT NULL,
  `record_component_id` int(11) NOT NULL,
  `order` int(11) DEFAULT NULL,
  PRIMARY KEY (`record_node_id`,`record_component_id`),
  KEY `fk_record_component_id_idx` (`record_component_id`),
  CONSTRAINT `fk_record_component_id` FOREIGN KEY (`record_component_id`) REFERENCES `node` (`node_id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_record_node_id` FOREIGN KEY (`record_node_id`) REFERENCES `node` (`node_id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='table to store the components of a record';

-- Dumping data for table policydb.record_components: ~38 rows (approximately)
/*!40000 ALTER TABLE `record_components` DISABLE KEYS */;
INSERT INTO `record_components` (`record_node_id`, `record_component_id`, `order`) VALUES
	(201, 304, 1),
	(201, 305, 2),
	(201, 306, 3),
	(201, 307, 4),
	(313, 329, 7),
	(313, 331, 6),
	(313, 334, 5),
	(313, 337, 3),
	(313, 339, 4),
	(313, 342, 2),
	(313, 345, 1),
	(315, 328, 7),
	(315, 330, 6),
	(315, 333, 5),
	(315, 336, 3),
	(315, 338, 4),
	(315, 341, 2),
	(315, 344, 1),
	(394, 395, 1),
	(394, 396, 2),
	(394, 397, 3),
	(394, 398, 4),
	(403, 404, 1),
	(403, 405, 2),
	(403, 406, 3),
	(403, 407, 4),
	(412, 413, 1),
	(412, 414, 2),
	(412, 415, 3),
	(412, 416, 4),
	(421, 422, 1),
	(421, 423, 2),
	(421, 424, 3),
	(421, 425, 4),
	(430, 431, 1),
	(430, 432, 2),
	(430, 433, 3),
	(430, 434, 4);
/*!40000 ALTER TABLE `record_components` ENABLE KEYS */;

-- Dumping structure for table policydb.record_key
CREATE TABLE IF NOT EXISTS `record_key` (
  `record_node_id` int(11) NOT NULL,
  `record_key` varchar(20) NOT NULL,
  `record_value` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`record_node_id`,`record_key`),
  CONSTRAINT `object_key_node_id` FOREIGN KEY (`record_node_id`) REFERENCES `object_detail` (`object_node_id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table policydb.record_key: ~9 rows (approximately)
/*!40000 ALTER TABLE `record_key` DISABLE KEYS */;
INSERT INTO `record_key` (`record_node_id`, `record_key`, `record_value`) VALUES
	(201, 'acctnum', '12345678'),
	(313, 'home phone', '5678'),
	(313, 'last name', 'Roberts'),
	(313, 'mrn', '0DAB52862379'),
	(313, 'ssn', '124456789'),
	(315, 'home phone', '4321'),
	(315, 'last name', 'Johnson'),
	(315, 'mrn', '8C1AA3D245A9'),
	(315, 'ssn', '123456789');
/*!40000 ALTER TABLE `record_key` ENABLE KEYS */;

-- Dumping structure for procedure policydb.reset_data
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `reset_data`(session_id_in INT(11))
BEGIN

SET SQL_SAFE_UPDATES = 0;
delete from application;
delete from assignment where assignment_id > 100;
delete from assignment_path where assignment_path_id > 100;
delete from audit_information;
delete from deny where deny_id > 100;
delete from deny_obj_attribute where deny_id > 100;
delete from deny_operation where deny_id > 100;
delete from deny_type where deny_type_id > 100;
delete from email_attachment;
delete from email_detail;
delete from keystore;
delete from node where node_id > 100;
delete from node_property;
delete from node_type where node_type_id > 100;
delete from object_detail where object_node_id > 100;
delete from ob_script;
delete from open_object;
delete from operation where operation_id > 100;
delete from operation_set_details where operation_set_details_node_id > 100;
delete from operation_type where operation_type_id > 100;
delete from record_components;
delete from record_key;
delete from session where session_id <> session_id_in;
delete from template;
delete from template_component;
delete from template_key;
delete from user_detail where user_node_id > 100;
delete from host where host_id > 100;

alter table application auto_increment = 101;
alter table deny auto_increment = 101;
alter table host auto_increment = 101;
alter table keystore auto_increment = 101;
alter table node auto_increment = 101;
alter table object_class auto_increment = 101;
alter table object_detail auto_increment = 101;
alter table operation auto_increment = 101;
alter table session auto_increment = 101;
alter table template auto_increment = 101;
alter table assignment auto_increment = 101;
alter table assignment_path auto_increment = 101;
alter table assignment auto_increment = 101;

SET SQL_SAFE_UPDATES = 1;
END//
DELIMITER ;

-- Dumping structure for table policydb.session
CREATE TABLE IF NOT EXISTS `session` (
  `session_id` int(11) NOT NULL AUTO_INCREMENT,
  `session_name` varchar(150) DEFAULT NULL,
  `user_node_id` int(11) NOT NULL,
  `start_time` datetime NOT NULL,
  `host_id` int(11) NOT NULL,
  PRIMARY KEY (`session_id`),
  KEY `fk_session_user_node_id_idx` (`user_node_id`),
  KEY `idx_session_host_id` (`host_id`),
  CONSTRAINT `fk_session_user_node_id` FOREIGN KEY (`user_node_id`) REFERENCES `node` (`node_id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='This table stores sessions created for users. This will be temperory data and rows will be deleted from this table depending on retention policy. ';

-- Dumping data for table policydb.session: ~2 rows (approximately)
/*!40000 ALTER TABLE `session` DISABLE KEYS */;
INSERT INTO `session` (`session_id`, `session_name`, `user_node_id`, `start_time`, `host_id`) VALUES
	(101, 'super@P860658-1', 4, '2018-05-31 11:39:36', 100),
	(102, 'super@P860658-1', 4, '2018-06-19 14:14:16', 100);
/*!40000 ALTER TABLE `session` ENABLE KEYS */;

-- Dumping structure for procedure policydb.set_property
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `set_property`(property_in varchar(200), property_value_in varchar(200), node_id int)
BEGIN
DECLARE count int;
-- Insert OR Update in NODE_PROPERTY table
                SELECT count(*) INTO count FROM NODE_PROPERTY WHERE UPPER(property) = UPPER(property_in) and PROPERTY_NODE_ID = node_id;
    IF count > 0 THEN
      UPDATE NODE_PROPERTY P SET P.PROPERTY_VALUE = property_value_in WHERE P.PROPERTY_NODE_ID = node_id;
    ELSE
      INSERT INTO NODE_PROPERTY (PROPERTY, PROPERTY_VALUE, PROPERTY_NODE_ID) VALUES (property_in, property_value_in, node_id);
    END IF;
END//
DELIMITER ;

-- Dumping structure for table policydb.template
CREATE TABLE IF NOT EXISTS `template` (
  `template_id` int(11) NOT NULL AUTO_INCREMENT,
  `template_name` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`template_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table policydb.template: ~3 rows (approximately)
/*!40000 ALTER TABLE `template` DISABLE KEYS */;
INSERT INTO `template` (`template_id`, `template_name`) VALUES
	(101, 'mrecTpl'),
	(102, 'acctTpl'),
	(103, 'employees');
/*!40000 ALTER TABLE `template` ENABLE KEYS */;

-- Dumping structure for table policydb.template_component
CREATE TABLE IF NOT EXISTS `template_component` (
  `template_id` int(11) NOT NULL,
  `template_component_id` int(11) NOT NULL,
  `order` int(11) DEFAULT NULL,
  PRIMARY KEY (`template_id`,`template_component_id`),
  KEY `fk_cont_id_idx` (`template_component_id`),
  CONSTRAINT `fk_templ_cmpnt_id` FOREIGN KEY (`template_component_id`) REFERENCES `node` (`node_id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_template_id` FOREIGN KEY (`template_id`) REFERENCES `template` (`template_id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table policydb.template_component: ~15 rows (approximately)
/*!40000 ALTER TABLE `template_component` DISABLE KEYS */;
INSERT INTO `template_component` (`template_id`, `template_component_id`, `order`) VALUES
	(101, 247, 7),
	(101, 248, 6),
	(101, 249, 5),
	(101, 250, 3),
	(101, 251, 4),
	(101, 252, 2),
	(101, 253, 1),
	(102, 242, 4),
	(102, 243, 3),
	(102, 244, 2),
	(102, 245, 1),
	(103, 368, 2),
	(103, 369, 1),
	(103, 370, 3),
	(103, 371, 4);
/*!40000 ALTER TABLE `template_component` ENABLE KEYS */;

-- Dumping structure for table policydb.template_key
CREATE TABLE IF NOT EXISTS `template_key` (
  `template_id` int(11) NOT NULL,
  `template_key` varchar(50) NOT NULL,
  PRIMARY KEY (`template_id`,`template_key`),
  KEY `fk_tpl_key_node_id_idx` (`template_key`),
  CONSTRAINT `fk_tpl_id` FOREIGN KEY (`template_id`) REFERENCES `template` (`template_id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table policydb.template_key: ~6 rows (approximately)
/*!40000 ALTER TABLE `template_key` DISABLE KEYS */;
INSERT INTO `template_key` (`template_id`, `template_key`) VALUES
	(102, 'acctnum'),
	(103, 'employees_phone'),
	(101, 'home phone'),
	(101, 'last name'),
	(101, 'mrn'),
	(101, 'ssn');
/*!40000 ALTER TABLE `template_key` ENABLE KEYS */;

-- Dumping structure for table policydb.temp_operations
CREATE TABLE IF NOT EXISTS `temp_operations` (
  `opset` varchar(500) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table policydb.temp_operations: ~0 rows (approximately)
/*!40000 ALTER TABLE `temp_operations` DISABLE KEYS */;
/*!40000 ALTER TABLE `temp_operations` ENABLE KEYS */;

-- Dumping structure for table policydb.user_detail
CREATE TABLE IF NOT EXISTS `user_detail` (
  `user_node_id` int(11) NOT NULL,
  `user_name` varchar(20) NOT NULL,
  `full_name` varchar(50) DEFAULT NULL,
  `password` varchar(1000) DEFAULT NULL,
  `email_address` varchar(254) DEFAULT NULL,
  `host_id` int(11) DEFAULT NULL,
  `pop_server` varchar(100) DEFAULT NULL,
  `smtp_server` varchar(100) DEFAULT NULL,
  `account_name` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`user_node_id`),
  UNIQUE KEY `user_name_UNIQUE` (`user_name`),
  KEY `fk_user_host_id_idx` (`host_id`),
  CONSTRAINT `fk_user_detail_node_id` FOREIGN KEY (`user_node_id`) REFERENCES `node` (`node_id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_host_id` FOREIGN KEY (`host_id`) REFERENCES `host` (`host_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='user - U';

-- Dumping data for table policydb.user_detail: ~9 rows (approximately)
/*!40000 ALTER TABLE `user_detail` DISABLE KEYS */;
INSERT INTO `user_detail` (`user_node_id`, `user_name`, `full_name`, `password`, `email_address`, `host_id`, `pop_server`, `smtp_server`, `account_name`) VALUES
	(4, 'super', 'SuperFirst', '100fd8433286961fcfa4cee541667c90dd6eaf22632fe284e4fded3f340c9d9b2245bb6224eec853f513c11a68ccaf74900a42f11277d6c3145d58daf1b99ce1cdd1b5882fd1d7f1e453f6923e6a95ca5d3', NULL, NULL, NULL, NULL, NULL),
	(149, 'bob', 'Robert', '100967b18d4ae00a25bdbed9220f1854df2a28492528573814ec8a59335ed0564230109183f9cb5c28672f4aabca1cc011ba0e0f6bbb1c360fb31c88f4fe55b8a0cdbe3b7cd055287f5698a9ac9fd3bd50a', 'bob@nist.gov', NULL, 'email.nist.gov', 'email.nist.gov', 'nist'),
	(156, 'katie', 'Katherine', '100d3687455c0f9331aed4db4b5344a40976fa7dc5fdbf38970063bce6b453c15940982cb263889e2b8a659c024d97113155bca700a09ecc77a1b17644e3a838adb2b3164e2d1b447db6dcff56713423c22', 'katherine.macfarland@nist.gov', NULL, 'email.nist.gov', 'email.nist.gov', 'nist'),
	(164, 'alice', 'Alicia', '1004e882250300c0dbc2dec504a52ebe85921d33ffbbe8b75154bdaa6d920d4eda5230ff7e3fc6553473fa80caca13f8d1089ca2953837d64c9ab2cee99c9d6a9a276e5767cff921869d2277d1531a609ea', 'alice@nist.gov', NULL, 'email.nist.gov', 'email.nist.gov', 'nist'),
	(170, 'dave', 'David', '1001464a3db09f3903a55e819e1937e2c06aeb321f9213c1b1dc22bed879df32af702abc59f051dc3d0bfbf5c2d8c00cbc6043c31e70d44e0794d16403138346247420c937c36f14d95ec58484e74e92cf0', NULL, NULL, NULL, NULL, NULL),
	(226, 'charlie', 'Charles', '100f0b2b5df7954d17a4988a7ee94f6b520983fb535b6d437967dbf526a40a271e0d67477a32fe5185502c6c6df4a529d4b01c9bd69badbacc56b53c909d14ad7819cfd9694926843c636553e350903dd31', 'charlie@nist.gov', NULL, 'email.nist.gov', 'email.nist.gov', 'nist'),
	(303, 'exporter', 'Exporter', '10007ffe8a5b8185d346cf1a0b559a17ca4e6bca8b6c7e3e7ad2c3eb8eabbc46b0b49601cce41da55066f1c7454083aadecf35902d2ca41a0466217f023124fc6988950447e78fc5d92050c2b42283cad90', NULL, NULL, NULL, NULL, NULL),
	(479, 'mary', 'mary', '100aa2d6c3eb32ebbef7fece9179412827651489f748585fde256e163ce327c30cc3cdd69969e85cf6e46535a042e34977448159a56987eabfdef1c62764ae81b1996ed3b553c2922ca5a8dd039693db312', NULL, NULL, NULL, NULL, NULL),
	(486, 'john', 'john', '100015399a04a118ec1bd65a62717bd3ec8a0c18f545b5ac4df9d6e1a7db6ebdfad56b338b3fc67257c75d2b15128911c33731adaaf9f2d7b6f272e26acdcb59ab80f7db8ec9521f98e242870f86b81d69f', NULL, NULL, NULL, NULL, NULL);
/*!40000 ALTER TABLE `user_detail` ENABLE KEYS */;

-- Dumping structure for view policydb.assignment_view
-- Removing temporary table and create final VIEW structure
DROP TABLE IF EXISTS `assignment_view`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `assignment_view` AS select `assignment`.`start_node_id` AS `start_node_id`,`GET_NODE_NAME`(`assignment`.`start_node_id`) AS `start_node_name`,`assignment`.`end_node_id` AS `end_node_id`,`GET_NODE_NAME`(`assignment`.`end_node_id`) AS `end_node_name`,`assignment`.`depth` AS `depth`,`assignment`.`assignment_path_id` AS `assignment_path_id` from `assignment` where ((`GET_NODE_TYPE`(`assignment`.`start_node_id`) <> 7) and (`GET_NODE_TYPE`(`assignment`.`end_node_id`) <> 7) and (`assignment`.`depth` > 0)) order by `assignment`.`assignment_path_id`,`assignment`.`depth`;

-- Dumping structure for view policydb.association
-- Removing temporary table and create final VIEW structure
DROP TABLE IF EXISTS `association`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `association` AS select (select `b`.`end_node_id` from `assignment` `b` where ((`b`.`start_node_id` = `a`.`end_node_id`) and isnull(`b`.`assignment_path_id`) and (`b`.`depth` = 1) and (`GET_NODE_TYPE`(`b`.`start_node_id`) = 7))) AS `ua_id`,`a`.`end_node_id` AS `opset_id`,`a`.`start_node_id` AS `oa_id` from `assignment` `a` where (isnull(`a`.`assignment_path_id`) and (`a`.`depth` = 1) and (`GET_NODE_TYPE`(`a`.`end_node_id`) = 7));

/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IF(@OLD_FOREIGN_KEY_CHECKS IS NULL, 1, @OLD_FOREIGN_KEY_CHECKS) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
